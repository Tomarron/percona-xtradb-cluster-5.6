/* A Bison parser, made by GNU Bison 3.0.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 24 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:339  */

/* thd is passed as an argument to yyparse(), and subsequently to yylex().
** The type will be void*, so it must be  cast to (THD*) when used.
** Use the YYTHD macro for this.
*/
#define YYTHD ((THD *)yythd)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL  YYTHD->variables.character_set_client

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select
#include "sql_priv.h"
#include "unireg.h"                    // REQUIRED: for other includes
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* mem_alloc_error, partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "rpl_slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_instr.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "opt_explain_traditional.h"
#include "opt_explain_json.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    ulong val= *(F);                          \
    if (my_yyoverflow((B), (D), &val))        \
    {                                         \
      yyerror(yythd, (char*) (A));            \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_parse_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

/*
  Work around for broken code generated by bison 1.875.

  The code generated by bison 1.875a and later, bison 2.1 and bison 2.2 is ok.
  With bison 1.875 however, the generated code contains:
<pre>
  yyerrlab1:
  #if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
    __attribute__ ((__unused__))
  #endif
</pre>
  This usage of __attribute__ is illegal, so we remove it.
  See the following references for details:
  http://lists.gnu.org/archive/html/bug-bison/2004-02/msg00014.html
  http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14273
*/

#if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
#undef __attribute__
#define __attribute__(X)
#endif


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif

/**
  @brief Push an error message into MySQL error stack with line
  and position information.

  This function provides semantic action implementers with a way
  to push the famous "You have a syntax error near..." error
  message into the error stack, which is normally produced only if
  a parse error is discovered internally by the Bison generated
  parser.
*/

void my_parse_error(const char *s)
{
  THD *thd= current_thd;
  Lex_input_stream *lip= & thd->m_parser_state->m_lip;

  const char *yytext= lip->get_tok_start();
  if (!yytext)
    yytext= "";

  /* Push an error into the error stack */
  ErrConvString err(yytext, thd->variables.character_set_client);
  my_printf_error(ER_PARSE_ERROR,  ER(ER_PARSE_ERROR), MYF(0), s,
                  err.ptr(), lip->yylineno);
}

/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use my_parse_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(void *yythd, const char *s)
{
  THD *thd= current_thd;

  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_parse_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static bool
find_sys_var_null_base(THD *thd, struct sys_var_with_base *tmp)
{
  tmp->var= find_sys_var(thd, tmp->base_name.str, tmp->base_name.length);

  if (tmp->var == NULL)
    my_error(ER_UNKNOWN_SYSTEM_VARIABLE, MYF(0), tmp->base_name.str);
  else
    tmp->base_name= null_lex_str;

  return thd->is_error();
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param thd      the current thread
  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_system_variable(THD *thd, struct sys_var_with_base *tmp,
                    enum enum_var_type var_type, Item *val)
{
  set_var *var;
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (pctx && tmp->var == Sys_autocommit_ptr)
    sp->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

#ifdef HAVE_REPLICATION
  if (lex->uses_stored_routines() &&
      ((tmp->var == Sys_gtid_next_ptr
#ifdef HAVE_GTID_NEXT_LIST
       || tmp->var == Sys_gtid_next_list_ptr
#endif
       ) ||
       Sys_gtid_purged_ptr == tmp->var))
  {
    my_error(ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION, MYF(0),
             tmp->var->name.str);
    return TRUE;
  }
#endif

  if (val && val->type() == Item::FIELD_ITEM &&
      ((Item_field*)val)->table_name)
  {
    my_error(ER_WRONG_TYPE_FOR_VAR, MYF(0), tmp->var->name.str);
    return TRUE;
  }

  if (! (var= new set_var(var_type, tmp->var, &tmp->base_name, val)))
    return TRUE;

  return lex->var_list.push_back(var);
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param thd                thread handler
  @param trigger_field_name the NEW-row field name
  @param expr_item          the value expression being assigned
  @param expr_query         the value expression query

  @return error status (true if error, false otherwise).
*/

static bool set_trigger_new_row(THD *thd,
                                LEX_STRING trigger_field_name,
                                Item *expr_item,
                                LEX_STRING expr_query)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  DBUG_ASSERT(expr_item);
  DBUG_ASSERT(sp->m_trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (sp->m_trg_chistics.event == TRG_EVENT_INSERT ||
               sp->m_trg_chistics.event == TRG_EVENT_UPDATE));

  Item_trigger_field *trg_fld=
    new (thd->mem_root) Item_trigger_field(lex->current_context(),
                                           Item_trigger_field::NEW_ROW,
                                           trigger_field_name.str,
                                           UPDATE_ACL, false);

  if (!trg_fld)
    return true;

  sp_instr_set_trigger_field *i=
    new (thd->mem_root)
      sp_instr_set_trigger_field(sp->instructions(),
                                 lex,
                                 trigger_field_name,
                                 trg_fld, expr_item,
                                 expr_query);

  if (!i)
    return true;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  sp->m_trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return sp->add_instr(thd, i);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param thd              The current thread.
  @param name             The SP variable name.
  @param spv              The SP variable (optional).
  @param query_start_ptr  Start of the SQL-statement query string (optional).
  @param start_in_q       Start position of the SP variable name in the query.
  @param end_in_q         End position of the SP variable name in the query.

  @remark If spv is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
static Item_splocal* create_item_for_sp_var(THD *thd,
                                            LEX_STRING name,
                                            sp_variable *spv,
                                            const char *query_start_ptr,
                                            const char *start_in_q,
                                            const char *end_in_q)
{
  LEX *lex= thd->lex;
  uint spv_pos_in_query= 0;
  uint spv_len_in_query= 0;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /* If necessary, look for the variable. */
  if (pctx && !spv)
    spv= pctx->find_variable(name, false);

  if (!spv)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name.str);
    return NULL;
  }

  DBUG_ASSERT(pctx && spv);

  if (query_start_ptr)
  {
    /* Position and length of the SP variable name in the query. */
    spv_pos_in_query= start_in_q - query_start_ptr;
    spv_len_in_query= end_in_q - start_in_q;
  }

  Item_splocal *item=
    new (thd->mem_root) Item_splocal(
      name, spv->offset, spv->type, spv_pos_in_query, spv_len_in_query);

#ifndef DBUG_OFF
  if (item)
    item->m_sp= lex->sphead;
#endif

  return item;
}


/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Creates a new SELECT_LEX for a UNION branch.

   Sets up and initializes a SELECT_LEX structure for a query once the parser
   discovers a UNION token. The current SELECT_LEX is pushed on the stack and
   the new SELECT_LEX becomes the current one.

   @param lex The parser state.

   @param is_union_distinct True if the union preceding the new select statement
   uses UNION DISTINCT.

   @param is_top_level This should be @c TRUE if the newly created SELECT_LEX
   is a non-nested statement.

   @return <code>false</code> if successful, <code>true</code> if an error was
   reported. In the latter case parsing should stop.
 */
bool add_select_to_union_list(LEX *lex, bool is_union_distinct, 
                              bool is_top_level)
{
  /* 
     Only the last SELECT can have INTO. Since the grammar won't allow INTO in
     a nested SELECT, we make this check only when creating a top-level SELECT.
  */
  if (is_top_level && lex->result)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "INTO");
    return TRUE;
  }
  if (lex->proc_analyse)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "SELECT ... PROCEDURE ANALYSE()");
    return TRUE;
  }
  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  /* This counter shouldn't be incremented for UNION parts */
  lex->nest_level--;
  if (mysql_new_select(lex, 0))
    return TRUE;
  mysql_init_select(lex);
  lex->current_select->linkage=UNION_TYPE;
  if (is_union_distinct) /* UNION DISTINCT - remember position */
    lex->current_select->master_unit()->union_distinct=
      lex->current_select;
  return FALSE;
}

/**
   @brief Initializes a SELECT_LEX for a query within parentheses (aka
   braces).

   @return false if successful, true if an error was reported. In the latter
   case parsing should stop.
 */
bool setup_select_in_parentheses(LEX *lex) 
{
  SELECT_LEX * sel= lex->current_select;
  if (sel->set_braces(1))
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      !sel->master_unit()->first_select()->braces &&
      sel->master_unit()->first_select()->linkage ==
      UNION_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      sel->olap != UNSPECIFIED_OLAP_TYPE &&
      sel->master_unit()->fake_select_lex)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "CUBE/ROLLUP", "ORDER BY");
    return TRUE;
  }
  /* select in braces, can't contain global parameters */
  if (sel->master_unit()->fake_select_lex)
    sel->master_unit()->global_parameters=
      sel->master_unit()->fake_select_lex;
  return FALSE;
}

static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_UPGRADABLE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= Alter_info::ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, Key::Keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated, 
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}

/**
  Make a new string allocated on THD's mem-root.

  @param thd        thread handler.
  @param start_ptr  start of the new string.
  @param end_ptr    end of the new string.

  @return LEX_STRING object, containing a pointer to a newly
  constructed/allocated string, and its length. The pointer is NULL
  in case of out-of-memory error.
*/
static LEX_STRING make_string(THD *thd,
                              const char *start_ptr,
                              const char *end_ptr)
{
  LEX_STRING s;

  s.length= end_ptr - start_ptr;
  s.str= (char *) thd->alloc(s.length + 1);

  if (s.str)
    strmake(s.str, start_ptr, s.length);

  return s;
}

/*
  The start is either lip->ptr, if there was no lookahead, lip->tok_start
  otherwise.
*/
#define YY_TOKEN_START \
  ((yychar == YYEMPTY) ?  YYLIP->get_ptr() : YYLIP->get_tok_start())

/*
   The end is either lip->ptr, if there was no lookahead,
   or lip->tok_end otherwise.
*/

#define YY_TOKEN_END \
  ((yychar == YYEMPTY) ?  YYLIP->get_ptr() : YYLIP->get_tok_end())

/**
  Create a separate LEX for each assignment if in SP.

  If we are in SP we want have own LEX for each assignment.
  This is mostly because it is hard for several sp_instr_set
  and sp_instr_set_trigger instructions share one LEX.
  (Well, it is theoretically possible but adds some extra
  overhead on preparation for execution stage and IMO less
  robust).

  @see sp_create_assignment_instr

  @param thd        Thread context
  @param option_ptr Option-value-expression start pointer
*/

static void sp_create_assignment_lex(THD *thd, const char *option_ptr)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  /*
    We can come here in the following cases:

      1. it's a regular SET statement outside stored programs
        (lex->sphead is NULL);

      2. we're parsing a stored program normally (loading from mysql.proc, ...);

      3. we're re-parsing SET-statement with a user variable after meta-data
        change. It's guaranteed, that:
        - this SET-statement deals with a user/system variable (otherwise, it
          would be a different SP-instruction, and we would parse an expression);
        - this SET-statement has a single user/system variable assignment
          (that's how we generate sp_instr_stmt-instructions for SET-statements).
        So, in this case, even if lex->sphead is set, we should not process
        further.
  */

  if (!sp ||            // case #1
      sp->is_invoked()) // case #3
  {
    return;
  }

  LEX *old_lex= lex;
  sp->reset_lex(thd);
  lex= thd->lex;

  /* Set new LEX as if we at start of set rule. */
  mysql_init_select(lex);
  lex->sql_command= SQLCOM_SET_OPTION;
  lex->var_list.empty();
  lex->one_shot_set= 0;
  lex->autocommit= 0;

  /*
    It's a SET statement within SP. It will be either translated
    into one or more sp_instr_stmt instructions, or it will be
    sp_instr_set / sp_instr_set_trigger_field instructions.
    In any case, position of SP-variable can not be determined
    reliably. So, we set the start pointer of the current statement
    to NULL.
  */
  sp->m_parser_data.set_current_stmt_start_ptr(NULL);
  sp->m_parser_data.set_option_start_ptr(option_ptr);

  /* Inherit from outer lex. */
  lex->option_type= old_lex->option_type;
}


/**
  Create a SP instruction for a SET assignment.

  @see sp_create_assignment_lex

  @param thd           Thread context
  @param expr_end_ptr  Option-value-expression end pointer

  @return false if success, true otherwise.
*/

static bool sp_create_assignment_instr(THD *thd, const char *expr_end_ptr)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  /*
    We can come here in the following cases:

      1. it's a regular SET statement outside stored programs
        (lex->sphead is NULL);

      2. we're parsing a stored program normally (loading from mysql.proc, ...);

      3. we're re-parsing SET-statement with a user variable after meta-data
        change. It's guaranteed, that:
        - this SET-statement deals with a user/system variable (otherwise, it
          would be a different SP-instruction, and we would parse an expression);
        - this SET-statement has a single user/system variable assignment
          (that's how we generate sp_instr_stmt-instructions for SET-statements).
        So, in this case, even if lex->sphead is set, we should not process
        further.
  */

  if (!sp ||            // case #1
      sp->is_invoked()) // case #3
  {
    return false;
  }

  if (!lex->var_list.is_empty())
  {
    /* Extract expression string. */

    const char *expr_start_ptr= sp->m_parser_data.get_option_start_ptr();

    LEX_STRING expr;
    expr.str= (char *) expr_start_ptr;
    expr.length= expr_end_ptr - expr_start_ptr;

    /* Construct SET-statement query. */

    LEX_STRING set_stmt_query;

    set_stmt_query.length= expr.length + 3;
    set_stmt_query.str= (char *) thd->alloc(set_stmt_query.length + 1);

    if (!set_stmt_query.str)
      return true;

    strmake(strmake(set_stmt_query.str, "SET", 3),
            expr.str, expr.length);

    /*
      We have assignment to user or system variable or option setting, so we
      should construct sp_instr_stmt for it.
    */

    sp_instr_stmt *i=
      new (thd->mem_root)
        sp_instr_stmt(sp->instructions(), lex, set_stmt_query);

    if (!i || sp->add_instr(thd, i))
      return true;
  }

  /* Remember option_type of the currently parsed LEX. */
  enum_var_type inner_option_type= lex->option_type;

  if (sp->restore_lex(thd))
    return true;

  /* Copy option_type to outer lex in case it has changed. */
  thd->lex->option_type= inner_option_type;

  return false;
}

/**
  Compare a LEX_USER against the current user as defined by the exact user and
  host used during authentication.

  @param user A pointer to a user which needs to be matched against the
              current.

  @see SET PASSWORD rules

  @retval true The specified user is the authorized user
  @retval false The user doesn't match
*/

bool match_authorized_user(Security_context *ctx, LEX_USER *user)
{
  if(user->user.str && my_strcasecmp(system_charset_info,
                                     ctx->priv_user,
                                     user->user.str) == 0)
  {
    /*
      users match; let's compare hosts.
      1. first compare with the host we actually authorized,
      2. then see if we match the host mask of the priv_host
    */
    if (user->host.str && my_strcasecmp(system_charset_info,
                                        user->host.str,
                                        ctx->priv_host) == 0)
    {
      /* specified user exactly match the authorized user */
      return true;
    }
  }
  return false;
}



#line 1019 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_MNT_WORKSPACE_PERCONA_XTRADB_CLUSTER_5_6_DEBIAN_SOURCE_FOR_INCLUSION_BZR_TREE_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_MNT_WORKSPACE_PERCONA_XTRADB_CLUSTER_5_6_DEBIAN_SOURCE_FOR_INCLUSION_BZR_TREE_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACTION = 260,
    ADD = 261,
    ADDDATE_SYM = 262,
    AFTER_SYM = 263,
    AGAINST = 264,
    AGGREGATE_SYM = 265,
    ALGORITHM_SYM = 266,
    ALL = 267,
    ALTER = 268,
    ANALYSE_SYM = 269,
    ANALYZE_SYM = 270,
    AND_AND_SYM = 271,
    AND_SYM = 272,
    ANY_SYM = 273,
    ARCHIVED_SYM = 274,
    AS = 275,
    ASC = 276,
    ASCII_SYM = 277,
    ASENSITIVE_SYM = 278,
    AT_SYM = 279,
    AUTOEXTEND_SIZE_SYM = 280,
    AUTO_INC = 281,
    AVG_ROW_LENGTH = 282,
    AVG_SYM = 283,
    BACKUP_SYM = 284,
    BEFORE_SYM = 285,
    BEGIN_SYM = 286,
    BETWEEN_SYM = 287,
    BIGINT = 288,
    BINARY = 289,
    BINLOG_SYM = 290,
    BIN_NUM = 291,
    BIT_AND = 292,
    BIT_OR = 293,
    BIT_SYM = 294,
    BIT_XOR = 295,
    BLOB_SYM = 296,
    BLOCK_SYM = 297,
    BOOLEAN_SYM = 298,
    BOOL_SYM = 299,
    BOTH = 300,
    BTREE_SYM = 301,
    BY = 302,
    BYTE_SYM = 303,
    CACHE_SYM = 304,
    CALL_SYM = 305,
    CASCADE = 306,
    CASCADED = 307,
    CASE_SYM = 308,
    CAST_SYM = 309,
    CATALOG_NAME_SYM = 310,
    CHAIN_SYM = 311,
    CHANGE = 312,
    CHANGED = 313,
    CHANGED_PAGE_BITMAPS_SYM = 314,
    CHARSET = 315,
    CHAR_SYM = 316,
    CHECKSUM_SYM = 317,
    CHECK_SYM = 318,
    CIPHER_SYM = 319,
    CLASS_ORIGIN_SYM = 320,
    CLIENT_SYM = 321,
    CLIENT_STATS_SYM = 322,
    CLOSE_SYM = 323,
    CLUSTERING_SYM = 324,
    COALESCE = 325,
    CODE_SYM = 326,
    COLLATE_SYM = 327,
    COLLATION_SYM = 328,
    COLUMNS = 329,
    COLUMN_SYM = 330,
    COLUMN_FORMAT_SYM = 331,
    COLUMN_NAME_SYM = 332,
    COMMENT_SYM = 333,
    COMMITTED_SYM = 334,
    COMMIT_SYM = 335,
    COMPACT_SYM = 336,
    COMPLETION_SYM = 337,
    COMPRESSED_SYM = 338,
    CONCURRENT = 339,
    CONDITION_SYM = 340,
    CONNECTION_SYM = 341,
    CONSISTENT_SYM = 342,
    CONSTRAINT = 343,
    CONSTRAINT_CATALOG_SYM = 344,
    CONSTRAINT_NAME_SYM = 345,
    CONSTRAINT_SCHEMA_SYM = 346,
    CONTAINS_SYM = 347,
    CONTEXT_SYM = 348,
    CONTINUE_SYM = 349,
    CONVERT_SYM = 350,
    COUNT_SYM = 351,
    CPU_SYM = 352,
    CREATE = 353,
    CROSS = 354,
    CUBE_SYM = 355,
    CURDATE = 356,
    CURRENT_SYM = 357,
    CURRENT_USER = 358,
    CURSOR_SYM = 359,
    CURSOR_NAME_SYM = 360,
    CURTIME = 361,
    DATABASE = 362,
    DATABASES = 363,
    DATAFILE_SYM = 364,
    DATA_SYM = 365,
    DATETIME = 366,
    DATE_ADD_INTERVAL = 367,
    DATE_SUB_INTERVAL = 368,
    DATE_SYM = 369,
    DAY_HOUR_SYM = 370,
    DAY_MICROSECOND_SYM = 371,
    DAY_MINUTE_SYM = 372,
    DAY_SECOND_SYM = 373,
    DAY_SYM = 374,
    DEALLOCATE_SYM = 375,
    DECIMAL_NUM = 376,
    DECIMAL_SYM = 377,
    DECLARE_SYM = 378,
    DEFAULT = 379,
    DEFAULT_AUTH_SYM = 380,
    DEFINER_SYM = 381,
    DELAYED_SYM = 382,
    DELAY_KEY_WRITE_SYM = 383,
    DELETE_SYM = 384,
    DESC = 385,
    DESCRIBE = 386,
    DES_KEY_FILE = 387,
    DETERMINISTIC_SYM = 388,
    DIAGNOSTICS_SYM = 389,
    DIRECTORY_SYM = 390,
    DISABLE_SYM = 391,
    DISCARD = 392,
    DISK_SYM = 393,
    DISTINCT = 394,
    DIV_SYM = 395,
    DOUBLE_SYM = 396,
    DO_SYM = 397,
    DROP = 398,
    DUAL_SYM = 399,
    DUMPFILE = 400,
    DUPLICATE_SYM = 401,
    DYNAMIC_SYM = 402,
    EACH_SYM = 403,
    ELSE = 404,
    ELSEIF_SYM = 405,
    ENABLE_SYM = 406,
    ENCLOSED = 407,
    END = 408,
    ENDS_SYM = 409,
    END_OF_INPUT = 410,
    ENGINES_SYM = 411,
    ENGINE_SYM = 412,
    ENUM = 413,
    EQ = 414,
    EQUAL_SYM = 415,
    ERROR_SYM = 416,
    ERRORS = 417,
    ESCAPED = 418,
    ESCAPE_SYM = 419,
    EVENTS_SYM = 420,
    EVENT_SYM = 421,
    EVERY_SYM = 422,
    EXCHANGE_SYM = 423,
    EXECUTE_SYM = 424,
    EXISTS = 425,
    EXIT_SYM = 426,
    EXPANSION_SYM = 427,
    EXPIRE_SYM = 428,
    EXPORT_SYM = 429,
    EXTENDED_SYM = 430,
    EXTENT_SIZE_SYM = 431,
    EXTRACT_SYM = 432,
    FALSE_SYM = 433,
    FAST_SYM = 434,
    FAULTS_SYM = 435,
    FETCH_SYM = 436,
    FILE_SYM = 437,
    FIRST_SYM = 438,
    FIXED_SYM = 439,
    FLOAT_NUM = 440,
    FLOAT_SYM = 441,
    FLUSH_SYM = 442,
    FORCE_SYM = 443,
    FOREIGN = 444,
    FOR_SYM = 445,
    FORMAT_SYM = 446,
    FOUND_SYM = 447,
    FROM = 448,
    FULL = 449,
    FULLTEXT_SYM = 450,
    FUNCTION_SYM = 451,
    GE = 452,
    GENERAL = 453,
    GEOMETRYCOLLECTION = 454,
    GEOMETRY_SYM = 455,
    GET_FORMAT = 456,
    GET_SYM = 457,
    GLOBAL_SYM = 458,
    GRANT = 459,
    GRANTS = 460,
    GROUP_SYM = 461,
    GROUP_CONCAT_SYM = 462,
    GT_SYM = 463,
    HANDLER_SYM = 464,
    HASH_SYM = 465,
    HAVING = 466,
    HELP_SYM = 467,
    HEX_NUM = 468,
    HIGH_PRIORITY = 469,
    HOST_SYM = 470,
    HOSTS_SYM = 471,
    HOUR_MICROSECOND_SYM = 472,
    HOUR_MINUTE_SYM = 473,
    HOUR_SECOND_SYM = 474,
    HOUR_SYM = 475,
    IDENT = 476,
    IDENTIFIED_SYM = 477,
    IDENT_QUOTED = 478,
    IF = 479,
    IGNORE_SYM = 480,
    IGNORE_SERVER_IDS_SYM = 481,
    IMPORT = 482,
    INDEXES = 483,
    INDEX_SYM = 484,
    INDEX_STATS_SYM = 485,
    INFILE = 486,
    INITIAL_SIZE_SYM = 487,
    INNER_SYM = 488,
    INOUT_SYM = 489,
    INSENSITIVE_SYM = 490,
    INSERT = 491,
    INSERT_METHOD = 492,
    INSTALL_SYM = 493,
    INTERVAL_SYM = 494,
    INTO = 495,
    INT_SYM = 496,
    INVOKER_SYM = 497,
    IN_SYM = 498,
    IO_AFTER_GTIDS = 499,
    IO_BEFORE_GTIDS = 500,
    IO_SYM = 501,
    IPC_SYM = 502,
    IS = 503,
    ISOLATION = 504,
    ISSUER_SYM = 505,
    ITERATE_SYM = 506,
    JOIN_SYM = 507,
    KEYS = 508,
    KEY_BLOCK_SIZE = 509,
    KEY_SYM = 510,
    KILL_SYM = 511,
    LANGUAGE_SYM = 512,
    LAST_SYM = 513,
    LE = 514,
    LEADING = 515,
    LEAVES = 516,
    LEAVE_SYM = 517,
    LEFT = 518,
    LESS_SYM = 519,
    LEVEL_SYM = 520,
    LEX_HOSTNAME = 521,
    LIKE = 522,
    LIMIT = 523,
    LINEAR_SYM = 524,
    LINES = 525,
    LINESTRING = 526,
    LIST_SYM = 527,
    LOAD = 528,
    LOCAL_SYM = 529,
    LOCATOR_SYM = 530,
    LOCKS_SYM = 531,
    LOCK_SYM = 532,
    LOGFILE_SYM = 533,
    LOGS_SYM = 534,
    LONGBLOB = 535,
    LONGTEXT = 536,
    LONG_NUM = 537,
    LONG_SYM = 538,
    LOOP_SYM = 539,
    LOW_PRIORITY = 540,
    LT = 541,
    MASTER_AUTO_POSITION_SYM = 542,
    MASTER_BIND_SYM = 543,
    MASTER_CONNECT_RETRY_SYM = 544,
    MASTER_DELAY_SYM = 545,
    MASTER_HOST_SYM = 546,
    MASTER_LOG_FILE_SYM = 547,
    MASTER_LOG_POS_SYM = 548,
    MASTER_PASSWORD_SYM = 549,
    MASTER_PORT_SYM = 550,
    MASTER_RETRY_COUNT_SYM = 551,
    MASTER_SERVER_ID_SYM = 552,
    MASTER_SSL_CAPATH_SYM = 553,
    MASTER_SSL_CA_SYM = 554,
    MASTER_SSL_CERT_SYM = 555,
    MASTER_SSL_CIPHER_SYM = 556,
    MASTER_SSL_CRL_SYM = 557,
    MASTER_SSL_CRLPATH_SYM = 558,
    MASTER_SSL_KEY_SYM = 559,
    MASTER_SSL_SYM = 560,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 561,
    MASTER_SYM = 562,
    MASTER_USER_SYM = 563,
    MASTER_HEARTBEAT_PERIOD_SYM = 564,
    MATCH = 565,
    MAX_CONNECTIONS_PER_HOUR = 566,
    MAX_QUERIES_PER_HOUR = 567,
    MAX_ROWS = 568,
    MAX_SIZE_SYM = 569,
    MAX_SYM = 570,
    MAX_UPDATES_PER_HOUR = 571,
    MAX_USER_CONNECTIONS_SYM = 572,
    MAX_VALUE_SYM = 573,
    MEDIUMBLOB = 574,
    MEDIUMINT = 575,
    MEDIUMTEXT = 576,
    MEDIUM_SYM = 577,
    MEMORY_SYM = 578,
    MERGE_SYM = 579,
    MESSAGE_TEXT_SYM = 580,
    MICROSECOND_SYM = 581,
    MIGRATE_SYM = 582,
    MINUTE_MICROSECOND_SYM = 583,
    MINUTE_SECOND_SYM = 584,
    MINUTE_SYM = 585,
    MIN_ROWS = 586,
    MIN_SYM = 587,
    MODE_SYM = 588,
    MODIFIES_SYM = 589,
    MODIFY_SYM = 590,
    MOD_SYM = 591,
    MONTH_SYM = 592,
    MULTILINESTRING = 593,
    MULTIPOINT = 594,
    MULTIPOLYGON = 595,
    MUTEX_SYM = 596,
    MYSQL_ERRNO_SYM = 597,
    NAMES_SYM = 598,
    NAME_SYM = 599,
    NATIONAL_SYM = 600,
    NATURAL = 601,
    NCHAR_STRING = 602,
    NCHAR_SYM = 603,
    NDBCLUSTER_SYM = 604,
    NE = 605,
    NEG = 606,
    NEW_SYM = 607,
    NEXT_SYM = 608,
    NODEGROUP_SYM = 609,
    NONE_SYM = 610,
    NOT2_SYM = 611,
    NOT_SYM = 612,
    NOW_SYM = 613,
    NO_SYM = 614,
    NO_WAIT_SYM = 615,
    NO_WRITE_TO_BINLOG = 616,
    NULL_SYM = 617,
    NUM = 618,
    NUMBER_SYM = 619,
    NUMERIC_SYM = 620,
    NVARCHAR_SYM = 621,
    OFFSET_SYM = 622,
    OLD_PASSWORD = 623,
    ON = 624,
    ONE_SYM = 625,
    ONLY_SYM = 626,
    OPEN_SYM = 627,
    OPTIMIZE = 628,
    OPTIONS_SYM = 629,
    OPTION = 630,
    OPTIONALLY = 631,
    OR2_SYM = 632,
    ORDER_SYM = 633,
    OR_OR_SYM = 634,
    OR_SYM = 635,
    OUTER = 636,
    OUTFILE = 637,
    OUT_SYM = 638,
    OWNER_SYM = 639,
    PACK_KEYS_SYM = 640,
    PAGE_SYM = 641,
    PARAM_MARKER = 642,
    PARSER_SYM = 643,
    PARTIAL = 644,
    PARTITION_SYM = 645,
    PARTITIONS_SYM = 646,
    PARTITIONING_SYM = 647,
    PASSWORD = 648,
    PHASE_SYM = 649,
    PLUGIN_DIR_SYM = 650,
    PLUGIN_SYM = 651,
    PLUGINS_SYM = 652,
    POINT_SYM = 653,
    POLYGON = 654,
    PORT_SYM = 655,
    POSITION_SYM = 656,
    PRECISION = 657,
    PREPARE_SYM = 658,
    PRESERVE_SYM = 659,
    PREV_SYM = 660,
    PRIMARY_SYM = 661,
    PRIVILEGES = 662,
    PROCEDURE_SYM = 663,
    PROCESS = 664,
    PROCESSLIST_SYM = 665,
    PROFILE_SYM = 666,
    PROFILES_SYM = 667,
    PROXY_SYM = 668,
    PURGE = 669,
    QUARTER_SYM = 670,
    QUERY_SYM = 671,
    QUICK = 672,
    RANGE_SYM = 673,
    READS_SYM = 674,
    READ_ONLY_SYM = 675,
    READ_SYM = 676,
    READ_WRITE_SYM = 677,
    REAL = 678,
    REBUILD_SYM = 679,
    RECOVER_SYM = 680,
    REDOFILE_SYM = 681,
    REDO_BUFFER_SIZE_SYM = 682,
    REDUNDANT_SYM = 683,
    REFERENCES = 684,
    REGEXP = 685,
    RELAY = 686,
    RELAYLOG_SYM = 687,
    RELAY_LOG_FILE_SYM = 688,
    RELAY_LOG_POS_SYM = 689,
    RELAY_THREAD = 690,
    RELEASE_SYM = 691,
    RELOAD = 692,
    REMOVE_SYM = 693,
    RENAME = 694,
    REORGANIZE_SYM = 695,
    REPAIR = 696,
    REPEATABLE_SYM = 697,
    REPEAT_SYM = 698,
    REPLACE = 699,
    REPLICATION = 700,
    REQUIRE_SYM = 701,
    RESET_SYM = 702,
    RESIGNAL_SYM = 703,
    RESOURCES = 704,
    RESTORE_SYM = 705,
    RESTRICT = 706,
    RESUME_SYM = 707,
    RETURNED_SQLSTATE_SYM = 708,
    RETURNS_SYM = 709,
    RETURN_SYM = 710,
    REVERSE_SYM = 711,
    REVOKE = 712,
    RIGHT = 713,
    ROLLBACK_SYM = 714,
    ROLLUP_SYM = 715,
    ROUTINE_SYM = 716,
    ROWS_SYM = 717,
    ROW_FORMAT_SYM = 718,
    ROW_SYM = 719,
    ROW_COUNT_SYM = 720,
    RTREE_SYM = 721,
    SAVEPOINT_SYM = 722,
    SCHEDULE_SYM = 723,
    SCHEMA_NAME_SYM = 724,
    SECOND_MICROSECOND_SYM = 725,
    SECOND_SYM = 726,
    SECURITY_SYM = 727,
    SELECT_SYM = 728,
    SENSITIVE_SYM = 729,
    SEPARATOR_SYM = 730,
    SERIALIZABLE_SYM = 731,
    SERIAL_SYM = 732,
    SESSION_SYM = 733,
    SERVER_SYM = 734,
    SERVER_OPTIONS = 735,
    SET = 736,
    SET_VAR = 737,
    SHARE_SYM = 738,
    SHIFT_LEFT = 739,
    SHIFT_RIGHT = 740,
    SHOW = 741,
    SHUTDOWN = 742,
    SIGNAL_SYM = 743,
    SIGNED_SYM = 744,
    SIMPLE_SYM = 745,
    SLAVE = 746,
    SLOW = 747,
    SMALLINT = 748,
    SNAPSHOT_SYM = 749,
    SOCKET_SYM = 750,
    SONAME_SYM = 751,
    SOUNDS_SYM = 752,
    SOURCE_SYM = 753,
    SPATIAL_SYM = 754,
    SPECIFIC_SYM = 755,
    SQLEXCEPTION_SYM = 756,
    SQLSTATE_SYM = 757,
    SQLWARNING_SYM = 758,
    SQL_AFTER_GTIDS = 759,
    SQL_AFTER_MTS_GAPS = 760,
    SQL_BEFORE_GTIDS = 761,
    SQL_BIG_RESULT = 762,
    SQL_BUFFER_RESULT = 763,
    SQL_CACHE_SYM = 764,
    SQL_CALC_FOUND_ROWS = 765,
    SQL_NO_CACHE_SYM = 766,
    SQL_SMALL_RESULT = 767,
    SQL_SYM = 768,
    SQL_THREAD = 769,
    SSL_SYM = 770,
    STARTING = 771,
    STARTS_SYM = 772,
    START_SYM = 773,
    STATEMENT_SYM = 774,
    STATS_AUTO_RECALC_SYM = 775,
    STATS_PERSISTENT_SYM = 776,
    STATS_SAMPLE_PAGES_SYM = 777,
    STATUS_SYM = 778,
    NOLOCK_SYM = 779,
    STDDEV_SAMP_SYM = 780,
    STD_SYM = 781,
    STOP_SYM = 782,
    STORAGE_SYM = 783,
    STRAIGHT_JOIN = 784,
    STRING_SYM = 785,
    SUBCLASS_ORIGIN_SYM = 786,
    SUBDATE_SYM = 787,
    SUBJECT_SYM = 788,
    SUBPARTITIONS_SYM = 789,
    SUBPARTITION_SYM = 790,
    SUBSTRING = 791,
    SUM_SYM = 792,
    SUPER_SYM = 793,
    SUSPEND_SYM = 794,
    SWAPS_SYM = 795,
    SWITCHES_SYM = 796,
    SYSDATE = 797,
    TABLES = 798,
    TABLESPACE = 799,
    TABLE_REF_PRIORITY = 800,
    TABLE_SYM = 801,
    TABLE_STATS_SYM = 802,
    TABLE_CHECKSUM_SYM = 803,
    TABLE_NAME_SYM = 804,
    TEMPORARY = 805,
    TEMPTABLE_SYM = 806,
    TERMINATED = 807,
    TEXT_STRING = 808,
    TEXT_SYM = 809,
    THAN_SYM = 810,
    THEN_SYM = 811,
    THREAD_STATS_SYM = 812,
    TIMESTAMP = 813,
    TIMESTAMP_ADD = 814,
    TIMESTAMP_DIFF = 815,
    TIME_SYM = 816,
    TINYBLOB = 817,
    TINYINT = 818,
    TINYTEXT = 819,
    TO_SYM = 820,
    TOKU_UNCOMPRESSED_SYM = 821,
    TOKU_ZLIB_SYM = 822,
    TOKU_QUICKLZ_SYM = 823,
    TOKU_LZMA_SYM = 824,
    TOKU_FAST_SYM = 825,
    TOKU_SMALL_SYM = 826,
    TRAILING = 827,
    TRANSACTION_SYM = 828,
    TRIGGERS_SYM = 829,
    TRIGGER_SYM = 830,
    TRIM = 831,
    TRUE_SYM = 832,
    TRUNCATE_SYM = 833,
    TYPES_SYM = 834,
    TYPE_SYM = 835,
    UDF_RETURNS_SYM = 836,
    ULONGLONG_NUM = 837,
    UNCOMMITTED_SYM = 838,
    UNDEFINED_SYM = 839,
    UNDERSCORE_CHARSET = 840,
    UNDOFILE_SYM = 841,
    UNDO_BUFFER_SIZE_SYM = 842,
    UNDO_SYM = 843,
    UNICODE_SYM = 844,
    UNINSTALL_SYM = 845,
    UNION_SYM = 846,
    UNIQUE_SYM = 847,
    UNKNOWN_SYM = 848,
    UNLOCK_SYM = 849,
    UNSIGNED = 850,
    UNTIL_SYM = 851,
    UPDATE_SYM = 852,
    UPGRADE_SYM = 853,
    USAGE = 854,
    USER = 855,
    USER_STATS_SYM = 856,
    USE_FRM = 857,
    USE_SYM = 858,
    USING = 859,
    UTC_DATE_SYM = 860,
    UTC_TIMESTAMP_SYM = 861,
    UTC_TIME_SYM = 862,
    VALUES = 863,
    VALUE_SYM = 864,
    VARBINARY = 865,
    VARCHAR = 866,
    VARIABLES = 867,
    VARIANCE_SYM = 868,
    VARYING = 869,
    VAR_SAMP_SYM = 870,
    VIEW_SYM = 871,
    WAIT_SYM = 872,
    WARNINGS = 873,
    WEEK_SYM = 874,
    WEIGHT_STRING_SYM = 875,
    WHEN_SYM = 876,
    WHERE = 877,
    WHILE_SYM = 878,
    WITH = 879,
    WITH_CUBE_SYM = 880,
    WITH_ROLLUP_SYM = 881,
    WORK_SYM = 882,
    WRAPPER_SYM = 883,
    WRITE_SYM = 884,
    X509_SYM = 885,
    XA_SYM = 886,
    XML_SYM = 887,
    XOR = 888,
    YEAR_MONTH_SYM = 889,
    YEAR_SYM = 890,
    ZEROFILL = 891
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACTION 260
#define ADD 261
#define ADDDATE_SYM 262
#define AFTER_SYM 263
#define AGAINST 264
#define AGGREGATE_SYM 265
#define ALGORITHM_SYM 266
#define ALL 267
#define ALTER 268
#define ANALYSE_SYM 269
#define ANALYZE_SYM 270
#define AND_AND_SYM 271
#define AND_SYM 272
#define ANY_SYM 273
#define ARCHIVED_SYM 274
#define AS 275
#define ASC 276
#define ASCII_SYM 277
#define ASENSITIVE_SYM 278
#define AT_SYM 279
#define AUTOEXTEND_SIZE_SYM 280
#define AUTO_INC 281
#define AVG_ROW_LENGTH 282
#define AVG_SYM 283
#define BACKUP_SYM 284
#define BEFORE_SYM 285
#define BEGIN_SYM 286
#define BETWEEN_SYM 287
#define BIGINT 288
#define BINARY 289
#define BINLOG_SYM 290
#define BIN_NUM 291
#define BIT_AND 292
#define BIT_OR 293
#define BIT_SYM 294
#define BIT_XOR 295
#define BLOB_SYM 296
#define BLOCK_SYM 297
#define BOOLEAN_SYM 298
#define BOOL_SYM 299
#define BOTH 300
#define BTREE_SYM 301
#define BY 302
#define BYTE_SYM 303
#define CACHE_SYM 304
#define CALL_SYM 305
#define CASCADE 306
#define CASCADED 307
#define CASE_SYM 308
#define CAST_SYM 309
#define CATALOG_NAME_SYM 310
#define CHAIN_SYM 311
#define CHANGE 312
#define CHANGED 313
#define CHANGED_PAGE_BITMAPS_SYM 314
#define CHARSET 315
#define CHAR_SYM 316
#define CHECKSUM_SYM 317
#define CHECK_SYM 318
#define CIPHER_SYM 319
#define CLASS_ORIGIN_SYM 320
#define CLIENT_SYM 321
#define CLIENT_STATS_SYM 322
#define CLOSE_SYM 323
#define CLUSTERING_SYM 324
#define COALESCE 325
#define CODE_SYM 326
#define COLLATE_SYM 327
#define COLLATION_SYM 328
#define COLUMNS 329
#define COLUMN_SYM 330
#define COLUMN_FORMAT_SYM 331
#define COLUMN_NAME_SYM 332
#define COMMENT_SYM 333
#define COMMITTED_SYM 334
#define COMMIT_SYM 335
#define COMPACT_SYM 336
#define COMPLETION_SYM 337
#define COMPRESSED_SYM 338
#define CONCURRENT 339
#define CONDITION_SYM 340
#define CONNECTION_SYM 341
#define CONSISTENT_SYM 342
#define CONSTRAINT 343
#define CONSTRAINT_CATALOG_SYM 344
#define CONSTRAINT_NAME_SYM 345
#define CONSTRAINT_SCHEMA_SYM 346
#define CONTAINS_SYM 347
#define CONTEXT_SYM 348
#define CONTINUE_SYM 349
#define CONVERT_SYM 350
#define COUNT_SYM 351
#define CPU_SYM 352
#define CREATE 353
#define CROSS 354
#define CUBE_SYM 355
#define CURDATE 356
#define CURRENT_SYM 357
#define CURRENT_USER 358
#define CURSOR_SYM 359
#define CURSOR_NAME_SYM 360
#define CURTIME 361
#define DATABASE 362
#define DATABASES 363
#define DATAFILE_SYM 364
#define DATA_SYM 365
#define DATETIME 366
#define DATE_ADD_INTERVAL 367
#define DATE_SUB_INTERVAL 368
#define DATE_SYM 369
#define DAY_HOUR_SYM 370
#define DAY_MICROSECOND_SYM 371
#define DAY_MINUTE_SYM 372
#define DAY_SECOND_SYM 373
#define DAY_SYM 374
#define DEALLOCATE_SYM 375
#define DECIMAL_NUM 376
#define DECIMAL_SYM 377
#define DECLARE_SYM 378
#define DEFAULT 379
#define DEFAULT_AUTH_SYM 380
#define DEFINER_SYM 381
#define DELAYED_SYM 382
#define DELAY_KEY_WRITE_SYM 383
#define DELETE_SYM 384
#define DESC 385
#define DESCRIBE 386
#define DES_KEY_FILE 387
#define DETERMINISTIC_SYM 388
#define DIAGNOSTICS_SYM 389
#define DIRECTORY_SYM 390
#define DISABLE_SYM 391
#define DISCARD 392
#define DISK_SYM 393
#define DISTINCT 394
#define DIV_SYM 395
#define DOUBLE_SYM 396
#define DO_SYM 397
#define DROP 398
#define DUAL_SYM 399
#define DUMPFILE 400
#define DUPLICATE_SYM 401
#define DYNAMIC_SYM 402
#define EACH_SYM 403
#define ELSE 404
#define ELSEIF_SYM 405
#define ENABLE_SYM 406
#define ENCLOSED 407
#define END 408
#define ENDS_SYM 409
#define END_OF_INPUT 410
#define ENGINES_SYM 411
#define ENGINE_SYM 412
#define ENUM 413
#define EQ 414
#define EQUAL_SYM 415
#define ERROR_SYM 416
#define ERRORS 417
#define ESCAPED 418
#define ESCAPE_SYM 419
#define EVENTS_SYM 420
#define EVENT_SYM 421
#define EVERY_SYM 422
#define EXCHANGE_SYM 423
#define EXECUTE_SYM 424
#define EXISTS 425
#define EXIT_SYM 426
#define EXPANSION_SYM 427
#define EXPIRE_SYM 428
#define EXPORT_SYM 429
#define EXTENDED_SYM 430
#define EXTENT_SIZE_SYM 431
#define EXTRACT_SYM 432
#define FALSE_SYM 433
#define FAST_SYM 434
#define FAULTS_SYM 435
#define FETCH_SYM 436
#define FILE_SYM 437
#define FIRST_SYM 438
#define FIXED_SYM 439
#define FLOAT_NUM 440
#define FLOAT_SYM 441
#define FLUSH_SYM 442
#define FORCE_SYM 443
#define FOREIGN 444
#define FOR_SYM 445
#define FORMAT_SYM 446
#define FOUND_SYM 447
#define FROM 448
#define FULL 449
#define FULLTEXT_SYM 450
#define FUNCTION_SYM 451
#define GE 452
#define GENERAL 453
#define GEOMETRYCOLLECTION 454
#define GEOMETRY_SYM 455
#define GET_FORMAT 456
#define GET_SYM 457
#define GLOBAL_SYM 458
#define GRANT 459
#define GRANTS 460
#define GROUP_SYM 461
#define GROUP_CONCAT_SYM 462
#define GT_SYM 463
#define HANDLER_SYM 464
#define HASH_SYM 465
#define HAVING 466
#define HELP_SYM 467
#define HEX_NUM 468
#define HIGH_PRIORITY 469
#define HOST_SYM 470
#define HOSTS_SYM 471
#define HOUR_MICROSECOND_SYM 472
#define HOUR_MINUTE_SYM 473
#define HOUR_SECOND_SYM 474
#define HOUR_SYM 475
#define IDENT 476
#define IDENTIFIED_SYM 477
#define IDENT_QUOTED 478
#define IF 479
#define IGNORE_SYM 480
#define IGNORE_SERVER_IDS_SYM 481
#define IMPORT 482
#define INDEXES 483
#define INDEX_SYM 484
#define INDEX_STATS_SYM 485
#define INFILE 486
#define INITIAL_SIZE_SYM 487
#define INNER_SYM 488
#define INOUT_SYM 489
#define INSENSITIVE_SYM 490
#define INSERT 491
#define INSERT_METHOD 492
#define INSTALL_SYM 493
#define INTERVAL_SYM 494
#define INTO 495
#define INT_SYM 496
#define INVOKER_SYM 497
#define IN_SYM 498
#define IO_AFTER_GTIDS 499
#define IO_BEFORE_GTIDS 500
#define IO_SYM 501
#define IPC_SYM 502
#define IS 503
#define ISOLATION 504
#define ISSUER_SYM 505
#define ITERATE_SYM 506
#define JOIN_SYM 507
#define KEYS 508
#define KEY_BLOCK_SIZE 509
#define KEY_SYM 510
#define KILL_SYM 511
#define LANGUAGE_SYM 512
#define LAST_SYM 513
#define LE 514
#define LEADING 515
#define LEAVES 516
#define LEAVE_SYM 517
#define LEFT 518
#define LESS_SYM 519
#define LEVEL_SYM 520
#define LEX_HOSTNAME 521
#define LIKE 522
#define LIMIT 523
#define LINEAR_SYM 524
#define LINES 525
#define LINESTRING 526
#define LIST_SYM 527
#define LOAD 528
#define LOCAL_SYM 529
#define LOCATOR_SYM 530
#define LOCKS_SYM 531
#define LOCK_SYM 532
#define LOGFILE_SYM 533
#define LOGS_SYM 534
#define LONGBLOB 535
#define LONGTEXT 536
#define LONG_NUM 537
#define LONG_SYM 538
#define LOOP_SYM 539
#define LOW_PRIORITY 540
#define LT 541
#define MASTER_AUTO_POSITION_SYM 542
#define MASTER_BIND_SYM 543
#define MASTER_CONNECT_RETRY_SYM 544
#define MASTER_DELAY_SYM 545
#define MASTER_HOST_SYM 546
#define MASTER_LOG_FILE_SYM 547
#define MASTER_LOG_POS_SYM 548
#define MASTER_PASSWORD_SYM 549
#define MASTER_PORT_SYM 550
#define MASTER_RETRY_COUNT_SYM 551
#define MASTER_SERVER_ID_SYM 552
#define MASTER_SSL_CAPATH_SYM 553
#define MASTER_SSL_CA_SYM 554
#define MASTER_SSL_CERT_SYM 555
#define MASTER_SSL_CIPHER_SYM 556
#define MASTER_SSL_CRL_SYM 557
#define MASTER_SSL_CRLPATH_SYM 558
#define MASTER_SSL_KEY_SYM 559
#define MASTER_SSL_SYM 560
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 561
#define MASTER_SYM 562
#define MASTER_USER_SYM 563
#define MASTER_HEARTBEAT_PERIOD_SYM 564
#define MATCH 565
#define MAX_CONNECTIONS_PER_HOUR 566
#define MAX_QUERIES_PER_HOUR 567
#define MAX_ROWS 568
#define MAX_SIZE_SYM 569
#define MAX_SYM 570
#define MAX_UPDATES_PER_HOUR 571
#define MAX_USER_CONNECTIONS_SYM 572
#define MAX_VALUE_SYM 573
#define MEDIUMBLOB 574
#define MEDIUMINT 575
#define MEDIUMTEXT 576
#define MEDIUM_SYM 577
#define MEMORY_SYM 578
#define MERGE_SYM 579
#define MESSAGE_TEXT_SYM 580
#define MICROSECOND_SYM 581
#define MIGRATE_SYM 582
#define MINUTE_MICROSECOND_SYM 583
#define MINUTE_SECOND_SYM 584
#define MINUTE_SYM 585
#define MIN_ROWS 586
#define MIN_SYM 587
#define MODE_SYM 588
#define MODIFIES_SYM 589
#define MODIFY_SYM 590
#define MOD_SYM 591
#define MONTH_SYM 592
#define MULTILINESTRING 593
#define MULTIPOINT 594
#define MULTIPOLYGON 595
#define MUTEX_SYM 596
#define MYSQL_ERRNO_SYM 597
#define NAMES_SYM 598
#define NAME_SYM 599
#define NATIONAL_SYM 600
#define NATURAL 601
#define NCHAR_STRING 602
#define NCHAR_SYM 603
#define NDBCLUSTER_SYM 604
#define NE 605
#define NEG 606
#define NEW_SYM 607
#define NEXT_SYM 608
#define NODEGROUP_SYM 609
#define NONE_SYM 610
#define NOT2_SYM 611
#define NOT_SYM 612
#define NOW_SYM 613
#define NO_SYM 614
#define NO_WAIT_SYM 615
#define NO_WRITE_TO_BINLOG 616
#define NULL_SYM 617
#define NUM 618
#define NUMBER_SYM 619
#define NUMERIC_SYM 620
#define NVARCHAR_SYM 621
#define OFFSET_SYM 622
#define OLD_PASSWORD 623
#define ON 624
#define ONE_SYM 625
#define ONLY_SYM 626
#define OPEN_SYM 627
#define OPTIMIZE 628
#define OPTIONS_SYM 629
#define OPTION 630
#define OPTIONALLY 631
#define OR2_SYM 632
#define ORDER_SYM 633
#define OR_OR_SYM 634
#define OR_SYM 635
#define OUTER 636
#define OUTFILE 637
#define OUT_SYM 638
#define OWNER_SYM 639
#define PACK_KEYS_SYM 640
#define PAGE_SYM 641
#define PARAM_MARKER 642
#define PARSER_SYM 643
#define PARTIAL 644
#define PARTITION_SYM 645
#define PARTITIONS_SYM 646
#define PARTITIONING_SYM 647
#define PASSWORD 648
#define PHASE_SYM 649
#define PLUGIN_DIR_SYM 650
#define PLUGIN_SYM 651
#define PLUGINS_SYM 652
#define POINT_SYM 653
#define POLYGON 654
#define PORT_SYM 655
#define POSITION_SYM 656
#define PRECISION 657
#define PREPARE_SYM 658
#define PRESERVE_SYM 659
#define PREV_SYM 660
#define PRIMARY_SYM 661
#define PRIVILEGES 662
#define PROCEDURE_SYM 663
#define PROCESS 664
#define PROCESSLIST_SYM 665
#define PROFILE_SYM 666
#define PROFILES_SYM 667
#define PROXY_SYM 668
#define PURGE 669
#define QUARTER_SYM 670
#define QUERY_SYM 671
#define QUICK 672
#define RANGE_SYM 673
#define READS_SYM 674
#define READ_ONLY_SYM 675
#define READ_SYM 676
#define READ_WRITE_SYM 677
#define REAL 678
#define REBUILD_SYM 679
#define RECOVER_SYM 680
#define REDOFILE_SYM 681
#define REDO_BUFFER_SIZE_SYM 682
#define REDUNDANT_SYM 683
#define REFERENCES 684
#define REGEXP 685
#define RELAY 686
#define RELAYLOG_SYM 687
#define RELAY_LOG_FILE_SYM 688
#define RELAY_LOG_POS_SYM 689
#define RELAY_THREAD 690
#define RELEASE_SYM 691
#define RELOAD 692
#define REMOVE_SYM 693
#define RENAME 694
#define REORGANIZE_SYM 695
#define REPAIR 696
#define REPEATABLE_SYM 697
#define REPEAT_SYM 698
#define REPLACE 699
#define REPLICATION 700
#define REQUIRE_SYM 701
#define RESET_SYM 702
#define RESIGNAL_SYM 703
#define RESOURCES 704
#define RESTORE_SYM 705
#define RESTRICT 706
#define RESUME_SYM 707
#define RETURNED_SQLSTATE_SYM 708
#define RETURNS_SYM 709
#define RETURN_SYM 710
#define REVERSE_SYM 711
#define REVOKE 712
#define RIGHT 713
#define ROLLBACK_SYM 714
#define ROLLUP_SYM 715
#define ROUTINE_SYM 716
#define ROWS_SYM 717
#define ROW_FORMAT_SYM 718
#define ROW_SYM 719
#define ROW_COUNT_SYM 720
#define RTREE_SYM 721
#define SAVEPOINT_SYM 722
#define SCHEDULE_SYM 723
#define SCHEMA_NAME_SYM 724
#define SECOND_MICROSECOND_SYM 725
#define SECOND_SYM 726
#define SECURITY_SYM 727
#define SELECT_SYM 728
#define SENSITIVE_SYM 729
#define SEPARATOR_SYM 730
#define SERIALIZABLE_SYM 731
#define SERIAL_SYM 732
#define SESSION_SYM 733
#define SERVER_SYM 734
#define SERVER_OPTIONS 735
#define SET 736
#define SET_VAR 737
#define SHARE_SYM 738
#define SHIFT_LEFT 739
#define SHIFT_RIGHT 740
#define SHOW 741
#define SHUTDOWN 742
#define SIGNAL_SYM 743
#define SIGNED_SYM 744
#define SIMPLE_SYM 745
#define SLAVE 746
#define SLOW 747
#define SMALLINT 748
#define SNAPSHOT_SYM 749
#define SOCKET_SYM 750
#define SONAME_SYM 751
#define SOUNDS_SYM 752
#define SOURCE_SYM 753
#define SPATIAL_SYM 754
#define SPECIFIC_SYM 755
#define SQLEXCEPTION_SYM 756
#define SQLSTATE_SYM 757
#define SQLWARNING_SYM 758
#define SQL_AFTER_GTIDS 759
#define SQL_AFTER_MTS_GAPS 760
#define SQL_BEFORE_GTIDS 761
#define SQL_BIG_RESULT 762
#define SQL_BUFFER_RESULT 763
#define SQL_CACHE_SYM 764
#define SQL_CALC_FOUND_ROWS 765
#define SQL_NO_CACHE_SYM 766
#define SQL_SMALL_RESULT 767
#define SQL_SYM 768
#define SQL_THREAD 769
#define SSL_SYM 770
#define STARTING 771
#define STARTS_SYM 772
#define START_SYM 773
#define STATEMENT_SYM 774
#define STATS_AUTO_RECALC_SYM 775
#define STATS_PERSISTENT_SYM 776
#define STATS_SAMPLE_PAGES_SYM 777
#define STATUS_SYM 778
#define NOLOCK_SYM 779
#define STDDEV_SAMP_SYM 780
#define STD_SYM 781
#define STOP_SYM 782
#define STORAGE_SYM 783
#define STRAIGHT_JOIN 784
#define STRING_SYM 785
#define SUBCLASS_ORIGIN_SYM 786
#define SUBDATE_SYM 787
#define SUBJECT_SYM 788
#define SUBPARTITIONS_SYM 789
#define SUBPARTITION_SYM 790
#define SUBSTRING 791
#define SUM_SYM 792
#define SUPER_SYM 793
#define SUSPEND_SYM 794
#define SWAPS_SYM 795
#define SWITCHES_SYM 796
#define SYSDATE 797
#define TABLES 798
#define TABLESPACE 799
#define TABLE_REF_PRIORITY 800
#define TABLE_SYM 801
#define TABLE_STATS_SYM 802
#define TABLE_CHECKSUM_SYM 803
#define TABLE_NAME_SYM 804
#define TEMPORARY 805
#define TEMPTABLE_SYM 806
#define TERMINATED 807
#define TEXT_STRING 808
#define TEXT_SYM 809
#define THAN_SYM 810
#define THEN_SYM 811
#define THREAD_STATS_SYM 812
#define TIMESTAMP 813
#define TIMESTAMP_ADD 814
#define TIMESTAMP_DIFF 815
#define TIME_SYM 816
#define TINYBLOB 817
#define TINYINT 818
#define TINYTEXT 819
#define TO_SYM 820
#define TOKU_UNCOMPRESSED_SYM 821
#define TOKU_ZLIB_SYM 822
#define TOKU_QUICKLZ_SYM 823
#define TOKU_LZMA_SYM 824
#define TOKU_FAST_SYM 825
#define TOKU_SMALL_SYM 826
#define TRAILING 827
#define TRANSACTION_SYM 828
#define TRIGGERS_SYM 829
#define TRIGGER_SYM 830
#define TRIM 831
#define TRUE_SYM 832
#define TRUNCATE_SYM 833
#define TYPES_SYM 834
#define TYPE_SYM 835
#define UDF_RETURNS_SYM 836
#define ULONGLONG_NUM 837
#define UNCOMMITTED_SYM 838
#define UNDEFINED_SYM 839
#define UNDERSCORE_CHARSET 840
#define UNDOFILE_SYM 841
#define UNDO_BUFFER_SIZE_SYM 842
#define UNDO_SYM 843
#define UNICODE_SYM 844
#define UNINSTALL_SYM 845
#define UNION_SYM 846
#define UNIQUE_SYM 847
#define UNKNOWN_SYM 848
#define UNLOCK_SYM 849
#define UNSIGNED 850
#define UNTIL_SYM 851
#define UPDATE_SYM 852
#define UPGRADE_SYM 853
#define USAGE 854
#define USER 855
#define USER_STATS_SYM 856
#define USE_FRM 857
#define USE_SYM 858
#define USING 859
#define UTC_DATE_SYM 860
#define UTC_TIMESTAMP_SYM 861
#define UTC_TIME_SYM 862
#define VALUES 863
#define VALUE_SYM 864
#define VARBINARY 865
#define VARCHAR 866
#define VARIABLES 867
#define VARIANCE_SYM 868
#define VARYING 869
#define VAR_SAMP_SYM 870
#define VIEW_SYM 871
#define WAIT_SYM 872
#define WARNINGS 873
#define WEEK_SYM 874
#define WEIGHT_STRING_SYM 875
#define WHEN_SYM 876
#define WHERE 877
#define WHILE_SYM 878
#define WITH 879
#define WITH_CUBE_SYM 880
#define WITH_ROLLUP_SYM 881
#define WORK_SYM 882
#define WRAPPER_SYM 883
#define WRITE_SYM 884
#define X509_SYM 885
#define XA_SYM 886
#define XML_SYM 887
#define XOR 888
#define YEAR_MONTH_SYM 889
#define YEAR_SYM 890
#define ZEROFILL 891

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE YYSTYPE;
union YYSTYPE
{
#line 970 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:355  */

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  LEX_STRING lex_str;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  Key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  handlerton *db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_ha_read_modes ha_read_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  const CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  class sp_condition_value *spcondvalue;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  LEX *lex;
  sp_head *sphead;
  struct p_elem_val *p_elem_value;
  enum index_hint_type index_hint;
  enum enum_filetype filetype;
  enum Foreign_key::fk_option m_fk_option;
  enum enum_yes_no_unknown m_yes_no_unk;
  Diag_condition_item_name diag_condition_item_name;
  Diagnostics_information::Which_area diag_area;
  Diagnostics_information *diag_info;
  Statement_information_item *stmt_info_item;
  Statement_information_item::Name stmt_info_item_name;
  List<Statement_information_item> *stmt_info_list;
  Condition_information_item *cond_info_item;
  Condition_information_item::Name cond_info_item_name;
  List<Condition_information_item> *cond_info_list;
  bool is_not_empty;

#line 2389 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:355  */
};
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif



int MYSQLparse (void *yythd);

#endif /* !YY_MYSQL_MNT_WORKSPACE_PERCONA_XTRADB_CLUSTER_5_6_DEBIAN_SOURCE_FOR_INCLUSION_BZR_TREE_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */
#line 1028 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:358  */

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);

#line 2406 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  622
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   56938

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  656
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  960
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2723
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  4605

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   891

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   649,     2,     2,     2,   643,   638,     2,
     646,   647,   641,   640,   648,   639,   654,   642,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   655,   652,
       2,     2,     2,     2,   653,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   644,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   650,   637,   651,   645,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1988,  1988,  2001,  2000,  2025,  2032,  2034,  2038,  2039,
    2044,  2045,  2046,  2047,  2048,  2049,  2050,  2051,  2052,  2053,
    2054,  2055,  2056,  2057,  2058,  2059,  2060,  2061,  2062,  2063,
    2064,  2065,  2066,  2067,  2068,  2069,  2070,  2071,  2072,  2073,
    2074,  2075,  2076,  2077,  2078,  2079,  2080,  2081,  2082,  2083,
    2084,  2085,  2086,  2087,  2088,  2089,  2090,  2091,  2092,  2093,
    2094,  2095,  2099,  2109,  2110,  2114,  2134,  2141,  2152,  2151,
    2162,  2164,  2168,  2169,  2173,  2186,  2185,  2205,  2204,  2222,
    2223,  2227,  2231,  2235,  2239,  2244,  2248,  2252,  2257,  2270,
    2275,  2279,  2283,  2287,  2291,  2295,  2300,  2304,  2309,  2340,
    2345,  2352,  2355,  2357,  2358,  2362,  2376,  2380,  2396,  2400,
    2413,  2412,  2458,  2463,  2457,  2470,  2475,  2468,  2482,  2487,
    2480,  2493,  2492,  2505,  2504,  2512,  2516,  2520,  2524,  2531,
    2544,  2545,  2549,  2553,  2557,  2561,  2565,  2570,  2574,  2582,
    2581,  2613,  2612,  2619,  2626,  2627,  2633,  2639,  2649,  2655,
    2661,  2663,  2670,  2671,  2675,  2681,  2690,  2691,  2699,  2699,
    2754,  2755,  2756,  2757,  2758,  2759,  2760,  2761,  2762,  2763,
    2764,  2765,  2766,  2771,  2785,  2799,  2818,  2819,  2823,  2824,
    2829,  2831,  2833,  2835,  2837,  2839,  2841,  2847,  2848,  2849,
    2853,  2857,  2865,  2864,  2877,  2879,  2882,  2884,  2888,  2892,
    2899,  2901,  2905,  2906,  2911,  2930,  2960,  2962,  2966,  2967,
    2971,  3000,  3001,  3002,  3003,  3007,  3008,  3012,  3013,  3018,
    3021,  3048,  3047,  3131,  3148,  3147,  3222,  3221,  3294,  3295,
    3300,  3302,  3307,  3330,  3341,  3345,  3367,  3368,  3372,  3376,
    3389,  3395,  3401,  3410,  3425,  3451,  3457,  3458,  3464,  3467,
    3471,  3479,  3499,  3501,  3519,  3525,  3527,  3529,  3531,  3533,
    3535,  3537,  3539,  3541,  3543,  3545,  3547,  3552,  3568,  3584,
    3585,  3590,  3596,  3605,  3611,  3620,  3628,  3657,  3666,  3668,
    3677,  3682,  3688,  3697,  3705,  3707,  3709,  3711,  3713,  3715,
    3717,  3719,  3721,  3723,  3725,  3727,  3729,  3734,  3754,  3778,
    3780,  3779,  3786,  3787,  3788,  3789,  3790,  3791,  3792,  3793,
    3794,  3795,  3796,  3797,  3798,  3803,  3802,  3813,  3813,  3870,
    3869,  3926,  3926,  3948,  4007,  4057,  4082,  4081,  4107,  4130,
    4132,  4133,  4137,  4155,  4176,  4185,  4221,  4176,  4250,  4252,
    4253,  4257,  4258,  4263,  4274,  4262,  4325,  4324,  4338,  4339,
    4343,  4344,  4349,  4358,  4348,  4407,  4416,  4406,  4460,  4473,
    4478,  4477,  4515,  4516,  4521,  4520,  4554,  4554,  4573,  4572,
    4622,  4639,  4648,  4638,  4702,  4711,  4701,  4751,  4753,  4758,
    4760,  4762,  4779,  4784,  4790,  4797,  4798,  4806,  4812,  4821,
    4827,  4833,  4834,  4838,  4838,  4843,  4844,  4845,  4849,  4850,
    4851,  4854,  4856,  4860,  4861,  4862,  4866,  4867,  4868,  4869,
    4870,  4871,  4872,  4873,  4876,  4878,  4882,  4883,  4884,  4888,
    4889,  4890,  4891,  4892,  4895,  4897,  4901,  4902,  4903,  4907,
    4908,  4909,  4910,  4911,  4912,  4913,  4916,  4918,  4922,  4923,
    4924,  4928,  4929,  4930,  4935,  4943,  4951,  4959,  4971,  4983,
    4988,  4993,  5001,  5009,  5017,  5025,  5033,  5041,  5049,  5062,
    5075,  5089,  5094,  5107,  5108,  5159,  5160,  5163,  5178,  5196,
    5201,  5199,  5206,  5208,  5207,  5211,  5210,  5216,  5253,  5254,
    5259,  5258,  5277,  5296,  5295,  5312,  5316,  5324,  5323,  5326,
    5328,  5330,  5332,  5337,  5338,  5344,  5345,  5362,  5363,  5367,
    5368,  5372,  5391,  5401,  5412,  5421,  5422,  5438,  5440,  5439,
    5444,  5442,  5453,  5454,  5458,  5476,  5492,  5493,  5509,  5524,
    5546,  5547,  5552,  5551,  5575,  5585,  5607,  5606,  5624,  5623,
    5643,  5665,  5669,  5698,  5710,  5711,  5716,  5727,  5715,  5752,
    5753,  5757,  5770,  5791,  5804,  5830,  5831,  5836,  5835,  5872,
    5877,  5878,  5882,  5883,  5887,  5889,  5895,  5897,  5899,  5901,
    5903,  5905,  5915,  5930,  5914,  5944,  5945,  5949,  5950,  5954,
    5955,  5959,  5960,  5964,  5965,  5969,  5970,  5974,  5978,  5979,
    5982,  5984,  5988,  5989,  5993,  5994,  5995,  5999,  6004,  6009,
    6014,  6019,  6024,  6029,  6034,  6049,  6055,  6070,  6075,  6090,
    6096,  6114,  6119,  6124,  6129,  6134,  6140,  6139,  6165,  6166,
    6167,  6172,  6177,  6182,  6184,  6186,  6188,  6194,  6202,  6220,
    6237,  6263,  6281,  6282,  6283,  6284,  6285,  6286,  6287,  6288,
    6289,  6290,  6291,  6292,  6296,  6297,  6298,  6302,  6303,  6307,
    6308,  6309,  6310,  6315,  6322,  6323,  6327,  6328,  6332,  6333,
    6340,  6345,  6351,  6357,  6370,  6389,  6395,  6397,  6401,  6405,
    6406,  6410,  6415,  6414,  6437,  6438,  6439,  6440,  6445,  6449,
    6454,  6459,  6463,  6468,  6473,  6479,  6484,  6490,  6494,  6499,
    6504,  6522,  6524,  6526,  6542,  6544,  6549,  6554,  6566,  6571,
    6576,  6581,  6583,  6585,  6587,  6589,  6591,  6593,  6595,  6598,
    6597,  6602,  6601,  6605,  6607,  6616,  6617,  6618,  6623,  6624,
    6625,  6626,  6627,  6631,  6635,  6636,  6640,  6641,  6645,  6646,
    6647,  6648,  6649,  6653,  6654,  6655,  6656,  6657,  6661,  6666,
    6668,  6674,  6675,  6677,  6682,  6692,  6693,  6697,  6698,  6699,
    6707,  6708,  6712,  6713,  6717,  6718,  6719,  6723,  6724,  6725,
    6726,  6729,  6730,  6734,  6735,  6739,  6740,  6744,  6745,  6749,
    6750,  6751,  6752,  6753,  6754,  6760,  6766,  6775,  6784,  6785,
    6798,  6804,  6810,  6816,  6821,  6826,  6835,  6856,  6864,  6865,
    6870,  6871,  6875,  6883,  6887,  6888,  6892,  6893,  6897,  6906,
    6910,  6911,  6915,  6923,  6924,  6928,  6929,  6933,  6934,  6939,
    6940,  6944,  6951,  6960,  6965,  6973,  6974,  6975,  6976,  6977,
    6978,  6983,  6991,  6992,  6997,  6996,  7009,  7010,  7014,  7017,
    7018,  7019,  7020,  7024,  7032,  7039,  7040,  7044,  7054,  7055,
    7059,  7060,  7063,  7065,  7069,  7081,  7082,  7086,  7093,  7106,
    7107,  7109,  7111,  7117,  7122,  7128,  7134,  7141,  7151,  7152,
    7153,  7154,  7155,  7159,  7163,  7164,  7169,  7170,  7174,  7175,
    7179,  7180,  7181,  7185,  7186,  7190,  7194,  7201,  7205,  7209,
    7216,  7220,  7224,  7228,  7241,  7253,  7254,  7258,  7259,  7263,
    7264,  7268,  7269,  7273,  7274,  7278,  7279,  7283,  7284,  7288,
    7289,  7293,  7295,  7299,  7300,  7304,  7308,  7309,  7322,  7323,
    7324,  7328,  7329,  7333,  7339,  7353,  7354,  7358,  7359,  7363,
    7364,  7372,  7371,  7417,  7416,  7430,  7442,  7441,  7460,  7459,
    7478,  7477,  7496,  7490,  7510,  7509,  7548,  7553,  7558,  7563,
    7568,  7575,  7582,  7587,  7595,  7596,  7597,  7598,  7602,  7603,
    7615,  7616,  7620,  7621,  7624,  7626,  7634,  7642,  7644,  7646,
    7647,  7655,  7656,  7660,  7669,  7667,  7681,  7695,  7694,  7708,
    7706,  7720,  7727,  7738,  7739,  7767,  7774,  7778,  7783,  7782,
    7798,  7800,  7805,  7813,  7812,  7828,  7832,  7831,  7843,  7844,
    7848,  7863,  7864,  7868,  7877,  7881,  7886,  7892,  7891,  7902,
    7911,  7901,  7926,  7935,  7944,  7953,  7962,  7968,  7974,  7983,
    7992,  8020,  8041,  8051,  8055,  8060,  8061,  8064,  8066,  8067,
    8068,  8069,  8072,  8077,  8088,  8093,  8104,  8105,  8109,  8110,
    8114,  8115,  8116,  8120,  8121,  8126,  8134,  8135,  8136,  8137,
    8142,  8141,  8170,  8180,  8197,  8200,  8207,  8211,  8218,  8222,
    8228,  8232,  8239,  8244,  8247,  8254,  8257,  8264,  8267,  8274,
    8277,  8285,  8288,  8295,  8299,  8306,  8310,  8317,  8318,  8343,
    8344,  8345,  8350,  8355,  8363,  8362,  8374,  8375,  8376,  8381,
    8380,  8402,  8403,  8407,  8408,  8412,  8413,  8414,  8419,  8418,
    8440,  8449,  8448,  8475,  8476,  8480,  8481,  8485,  8486,  8487,
    8488,  8489,  8490,  8495,  8494,  8516,  8517,  8518,  8523,  8522,
    8528,  8535,  8540,  8548,  8549,  8553,  8567,  8566,  8579,  8580,
    8584,  8585,  8589,  8599,  8609,  8610,  8615,  8614,  8625,  8626,
    8630,  8631,  8635,  8645,  8656,  8655,  8663,  8663,  8674,  8675,
    8680,  8681,  8690,  8699,  8700,  8704,  8709,  8714,  8719,  8724,
    8723,  8743,  8751,  8743,  8758,  8759,  8760,  8761,  8762,  8766,
    8773,  8780,  8782,  8793,  8794,  8798,  8799,  8827,  8857,  8859,
    8865,  8875,  8876,  8877,  8892,  8899,  8924,  8930,  8936,  8937,
    8938,  8939,  8940,  8944,  8945,  8950,  9001,  9008,  9051,  9057,
    9063,  9069,  9075,  9081,  9087,  9093,  9097,  9103,  9109,  9115,
    9121,  9127,  9131,  9137,  9147,  9153,  9161,  9167,  9177,  9183,
    9192,  9202,  9208,  9218,  9224,  9233,  9237,  9243,  9249,  9255,
    9261,  9267,  9273,  9279,  9285,  9291,  9297,  9303,  9309,  9315,
    9321,  9325,  9326,  9330,  9331,  9335,  9336,  9340,  9341,  9345,
    9346,  9347,  9348,  9349,  9350,  9354,  9355,  9359,  9360,  9361,
    9362,  9363,  9364,  9376,  9377,  9378,  9379,  9380,  9386,  9390,
    9396,  9402,  9408,  9414,  9416,  9423,  9430,  9436,  9477,  9486,
    9493,  9501,  9507,  9514,  9520,  9534,  9541,  9557,  9563,  9569,
    9577,  9583,  9589,  9595,  9601,  9616,  9628,  9634,  9640,  9646,
    9652,  9658,  9664,  9670,  9676,  9682,  9688,  9694,  9700,  9706,
    9712,  9718,  9724,  9732,  9753,  9760,  9766,  9773,  9780,  9787,
    9794,  9800,  9806,  9811,  9817,  9824,  9830,  9836,  9842,  9848,
    9854,  9872,  9878,  9884,  9891,  9898,  9913,  9919,  9925,  9931,
    9937,  9944,  9950,  9956,  9962,  9968,  9974,  9981,  9994, 10000,
   10006, 10012, 10018, 10026, 10032, 10044, 10050, 10056, 10064, 10074,
   10080, 10096, 10102, 10109, 10116, 10123, 10130, 10137, 10141, 10161,
   10160, 10233, 10273, 10275, 10280, 10281, 10285, 10286, 10290, 10291,
   10295, 10302, 10310, 10336, 10342, 10348, 10354, 10360, 10366, 10375,
   10382, 10384, 10381, 10391, 10402, 10408, 10414, 10420, 10426, 10432,
   10438, 10444, 10450, 10457, 10456, 10476, 10475, 10490, 10501, 10509,
   10525, 10526, 10531, 10536, 10539, 10542, 10541, 10558, 10560, 10566,
   10565, 10582, 10584, 10586, 10588, 10590, 10592, 10594, 10596, 10598,
   10600, 10602, 10607, 10608, 10612, 10619, 10627, 10628, 10632, 10639,
   10647, 10648, 10652, 10653, 10657, 10665, 10676, 10677, 10686, 10697,
   10698, 10704, 10705, 10725, 10727, 10731, 10729, 10746, 10744, 10762,
   10760, 10767, 10776, 10774, 10792, 10791, 10801, 10812, 10810, 10829,
   10828, 10839, 10850, 10851, 10852, 10860, 10861, 10865, 10880, 10880,
   10895, 10935, 11008, 11019, 11024, 11016, 11043, 11063, 11071, 11063,
   11080, 11079, 11102, 11119, 11102, 11126, 11130, 11156, 11157, 11162,
   11165, 11166, 11167, 11171, 11172, 11177, 11176, 11182, 11181, 11189,
   11190, 11193, 11195, 11195, 11199, 11199, 11204, 11205, 11209, 11211,
   11216, 11217, 11221, 11232, 11245, 11246, 11247, 11248, 11249, 11250,
   11251, 11252, 11253, 11254, 11255, 11256, 11260, 11261, 11262, 11263,
   11264, 11265, 11266, 11267, 11268, 11272, 11273, 11274, 11275, 11278,
   11280, 11281, 11285, 11286, 11294, 11296, 11300, 11302, 11301, 11315,
   11318, 11317, 11332, 11338, 11353, 11355, 11359, 11361, 11366, 11367,
   11387, 11418, 11422, 11423, 11427, 11440, 11442, 11447, 11446, 11481,
   11483, 11488, 11489, 11490, 11495, 11501, 11505, 11506, 11510, 11521,
   11528, 11535, 11545, 11572, 11576, 11582, 11588, 11598, 11602, 11616,
   11617, 11618, 11619, 11620, 11621, 11625, 11626, 11627, 11628, 11629,
   11633, 11634, 11635, 11636, 11637, 11641, 11642, 11643, 11644, 11648,
   11653, 11654, 11657, 11660, 11659, 11693, 11694, 11698, 11706, 11719,
   11719, 11729, 11730, 11734, 11753, 11793, 11792, 11805, 11813, 11804,
   11815, 11827, 11839, 11838, 11856, 11855, 11866, 11867, 11866, 11883,
   11890, 11911, 11932, 11944, 11949, 11948, 11958, 11964, 11971, 11976,
   11981, 11991, 11992, 11996, 12007, 12020, 12021, 12025, 12036, 12037,
   12041, 12042, 12045, 12047, 12050, 12051, 12052, 12056, 12057, 12065,
   12073, 12064, 12083, 12090, 12082, 12100, 12112, 12113, 12126, 12130,
   12131, 12147, 12148, 12152, 12161, 12162, 12163, 12165, 12164, 12175,
   12176, 12180, 12181, 12183, 12182, 12186, 12185, 12191, 12192, 12196,
   12197, 12201, 12211, 12212, 12216, 12217, 12222, 12221, 12235, 12236,
   12240, 12245, 12253, 12254, 12262, 12264, 12264, 12272, 12280, 12271,
   12302, 12303, 12307, 12315, 12316, 12320, 12330, 12331, 12338, 12337,
   12353, 12352, 12366, 12365, 12377, 12376, 12390, 12391, 12395, 12408,
   12424, 12425, 12429, 12430, 12434, 12435, 12436, 12441, 12440, 12462,
   12464, 12467, 12469, 12472, 12473, 12476, 12480, 12484, 12488, 12492,
   12496, 12500, 12504, 12508, 12516, 12519, 12529, 12528, 12543, 12550,
   12558, 12566, 12574, 12582, 12590, 12597, 12599, 12601, 12610, 12614,
   12619, 12618, 12624, 12623, 12628, 12637, 12644, 12649, 12651, 12653,
   12655, 12657, 12665, 12676, 12684, 12686, 12694, 12701, 12708, 12718,
   12725, 12731, 12740, 12748, 12752, 12757, 12761, 12768, 12775, 12782,
   12789, 12796, 12803, 12810, 12816, 12823, 12830, 12835, 12840, 12848,
   12850, 12852, 12857, 12858, 12861, 12863, 12867, 12868, 12872, 12873,
   12877, 12878, 12882, 12883, 12887, 12888, 12891, 12893, 12900, 12911,
   12910, 12926, 12925, 12932, 12933, 12934, 12935, 12936, 12940, 12941,
   12946, 12950, 12956, 12962, 12984, 12985, 12986, 13001, 13000, 13013,
   13022, 13012, 13024, 13028, 13029, 13041, 13040, 13062, 13063, 13068,
   13070, 13072, 13074, 13076, 13078, 13080, 13082, 13084, 13086, 13088,
   13090, 13092, 13094, 13096, 13098, 13100, 13102, 13104, 13109, 13110,
   13115, 13114, 13124, 13125, 13129, 13129, 13131, 13132, 13133, 13138,
   13139, 13144, 13143, 13154, 13155, 13162, 13166, 13170, 13180, 13185,
   13197, 13207, 13208, 13209, 13215, 13227, 13239, 13249, 13259, 13226,
   13267, 13268, 13272, 13273, 13277, 13278, 13290, 13294, 13295, 13296,
   13299, 13301, 13305, 13306, 13310, 13315, 13322, 13327, 13334, 13336,
   13340, 13341, 13345, 13350, 13358, 13359, 13362, 13364, 13372, 13374,
   13378, 13379, 13380, 13384, 13386, 13391, 13392, 13401, 13402, 13406,
   13407, 13411, 13431, 13455, 13467, 13478, 13497, 13505, 13517, 13532,
   13553, 13554, 13555, 13564, 13565, 13566, 13567, 13574, 13580, 13586,
   13592, 13598, 13627, 13658, 13668, 13678, 13684, 13693, 13705, 13711,
   13717, 13733, 13734, 13738, 13747, 13763, 13767, 13818, 13822, 13840,
   13844, 13924, 13949, 13980, 13981, 13997, 14007, 14011, 14017, 14023,
   14033, 14039, 14048, 14058, 14059, 14089, 14102, 14118, 14134, 14151,
   14152, 14163, 14164, 14175, 14176, 14177, 14181, 14208, 14241, 14256,
   14257, 14258, 14259, 14260, 14261, 14262, 14263, 14264, 14265, 14266,
   14267, 14268, 14269, 14270, 14271, 14272, 14273, 14274, 14275, 14276,
   14277, 14278, 14279, 14280, 14281, 14282, 14283, 14284, 14285, 14286,
   14287, 14288, 14289, 14290, 14291, 14292, 14293, 14294, 14295, 14296,
   14297, 14298, 14299, 14300, 14301, 14302, 14303, 14304, 14305, 14315,
   14316, 14317, 14318, 14319, 14320, 14321, 14322, 14323, 14324, 14325,
   14326, 14327, 14328, 14329, 14330, 14331, 14332, 14333, 14334, 14335,
   14336, 14337, 14338, 14339, 14340, 14341, 14342, 14343, 14344, 14345,
   14346, 14347, 14348, 14349, 14350, 14351, 14352, 14353, 14354, 14355,
   14356, 14357, 14358, 14359, 14360, 14361, 14362, 14367, 14368, 14369,
   14370, 14371, 14372, 14373, 14374, 14375, 14376, 14377, 14378, 14379,
   14380, 14381, 14382, 14383, 14384, 14385, 14386, 14387, 14388, 14389,
   14390, 14391, 14392, 14393, 14394, 14395, 14396, 14397, 14398, 14399,
   14400, 14401, 14402, 14403, 14404, 14405, 14406, 14407, 14408, 14409,
   14410, 14411, 14412, 14413, 14414, 14415, 14416, 14417, 14418, 14419,
   14420, 14421, 14422, 14423, 14424, 14425, 14426, 14427, 14428, 14429,
   14430, 14431, 14432, 14433, 14434, 14435, 14436, 14437, 14438, 14439,
   14440, 14441, 14442, 14443, 14444, 14445, 14446, 14447, 14448, 14449,
   14450, 14451, 14452, 14453, 14454, 14455, 14456, 14457, 14458, 14459,
   14460, 14461, 14462, 14463, 14464, 14465, 14466, 14467, 14468, 14469,
   14470, 14471, 14472, 14473, 14474, 14475, 14476, 14477, 14478, 14479,
   14480, 14481, 14482, 14483, 14484, 14485, 14486, 14487, 14488, 14489,
   14490, 14491, 14492, 14493, 14494, 14495, 14496, 14497, 14498, 14499,
   14500, 14501, 14502, 14503, 14504, 14505, 14506, 14507, 14508, 14509,
   14510, 14511, 14512, 14513, 14514, 14515, 14516, 14517, 14518, 14519,
   14520, 14521, 14522, 14523, 14524, 14525, 14526, 14527, 14528, 14529,
   14530, 14531, 14532, 14533, 14534, 14535, 14536, 14537, 14538, 14539,
   14540, 14541, 14542, 14543, 14544, 14545, 14546, 14547, 14548, 14549,
   14550, 14551, 14552, 14553, 14554, 14555, 14556, 14557, 14558, 14559,
   14560, 14561, 14562, 14563, 14564, 14565, 14566, 14567, 14568, 14569,
   14570, 14571, 14572, 14573, 14574, 14575, 14576, 14577, 14578, 14579,
   14580, 14581, 14582, 14583, 14584, 14585, 14586, 14587, 14588, 14589,
   14590, 14591, 14592, 14593, 14594, 14595, 14596, 14597, 14598, 14599,
   14600, 14601, 14602, 14603, 14604, 14605, 14606, 14607, 14608, 14609,
   14610, 14611, 14612, 14613, 14614, 14615, 14616, 14617, 14618, 14619,
   14620, 14621, 14622, 14623, 14624, 14625, 14626, 14627, 14628, 14629,
   14630, 14631, 14632, 14633, 14645, 14644, 14659, 14658, 14686, 14687,
   14692, 14691, 14698, 14697, 14707, 14706, 14717, 14716, 14722, 14730,
   14732, 14737, 14737, 14746, 14745, 14759, 14758, 14763, 14767, 14768,
   14769, 14773, 14774, 14775, 14776, 14780, 14781, 14782, 14783, 14788,
   14822, 14821, 14921, 14932, 14945, 14961, 14974, 14996, 15031, 15073,
   15101, 15147, 15161, 15162, 15163, 15164, 15168, 15186, 15204, 15205,
   15209, 15210, 15211, 15212, 15216, 15217, 15235, 15248, 15249, 15250,
   15256, 15262, 15273, 15284, 15288, 15293, 15292, 15301, 15302, 15306,
   15307, 15311, 15324, 15325, 15326, 15331, 15335, 15346, 15350, 15361,
   15377, 15394, 15393, 15432, 15433, 15437, 15438, 15442, 15443, 15444,
   15445, 15447, 15446, 15460, 15461, 15462, 15463, 15464, 15470, 15470,
   15475, 15480, 15490, 15500, 15504, 15513, 15513, 15518, 15524, 15535,
   15546, 15554, 15556, 15560, 15567, 15574, 15576, 15580, 15581, 15586,
   15585, 15589, 15588, 15592, 15591, 15595, 15594, 15597, 15598, 15599,
   15600, 15601, 15602, 15603, 15604, 15605, 15606, 15607, 15608, 15609,
   15610, 15611, 15612, 15613, 15614, 15615, 15616, 15617, 15618, 15619,
   15620, 15621, 15622, 15626, 15627, 15631, 15632, 15636, 15646, 15656,
   15669, 15684, 15697, 15710, 15722, 15727, 15735, 15740, 15748, 15766,
   15786, 15798, 15811, 15820, 15824, 15828, 15829, 15833, 15860, 15862,
   15866, 15870, 15874, 15881, 15882, 15886, 15887, 15891, 15892, 15896,
   15897, 15903, 15909, 15915, 15925, 15924, 15934, 15935, 15940, 15941,
   15942, 15947, 15948, 15949, 15953, 15954, 15958, 15970, 15979, 15989,
   15998, 16012, 16013, 16018, 16017, 16033, 16034, 16035, 16039, 16040,
   16044, 16044, 16068, 16069, 16073, 16074, 16075, 16079, 16083, 16090,
   16093, 16091, 16107, 16114, 16135, 16152, 16154, 16158, 16159, 16163,
   16164, 16172, 16173, 16174, 16175, 16181, 16187, 16197, 16199, 16201,
   16206, 16207, 16208, 16209, 16210, 16214, 16215, 16216, 16217, 16218,
   16219, 16229, 16230, 16235, 16248, 16261, 16263, 16265, 16270, 16275,
   16277, 16279, 16285, 16286, 16288, 16294, 16293, 16311, 16312, 16316,
   16321, 16329, 16329, 16355, 16354, 16371, 16375, 16380, 16385, 16384,
   16396, 16397, 16399, 16401, 16419, 16425, 16430, 16412, 16493, 16511,
   16536, 16568, 16573, 16581, 16604, 16532, 16670, 16690, 16703, 16713,
   16669, 16734, 16738, 16742, 16746, 16750, 16754, 16761, 16768, 16775,
   16785, 16786, 16790, 16791, 16792, 16796, 16797, 16802, 16804, 16803,
   16809, 16810, 16814, 16824
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ACTION",
  "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALL", "ALTER", "ANALYSE_SYM", "ANALYZE_SYM",
  "AND_AND_SYM", "AND_SYM", "ANY_SYM", "ARCHIVED_SYM", "AS", "ASC",
  "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM", "AUTOEXTEND_SIZE_SYM",
  "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM",
  "BEGIN_SYM", "BETWEEN_SYM", "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM",
  "BIT_AND", "BIT_OR", "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM",
  "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM",
  "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED",
  "CHANGED_PAGE_BITMAPS_SYM", "CHARSET", "CHAR_SYM", "CHECKSUM_SYM",
  "CHECK_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM",
  "CLIENT_STATS_SYM", "CLOSE_SYM", "CLUSTERING_SYM", "COALESCE",
  "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM", "CONSISTENT_SYM",
  "CONSTRAINT", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM",
  "CONVERT_SYM", "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM",
  "CURDATE", "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM",
  "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL",
  "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM",
  "FETCH_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FLUSH_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GEOMETRYCOLLECTION", "GEOMETRY_SYM",
  "GET_FORMAT", "GET_SYM", "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM",
  "GROUP_CONCAT_SYM", "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING",
  "HELP_SYM", "HEX_NUM", "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM",
  "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM",
  "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM",
  "INDEX_STATS_SYM", "INFILE", "INITIAL_SIZE_SYM", "INNER_SYM",
  "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "INSERT_METHOD", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM", "KEYS",
  "KEY_BLOCK_SIZE", "KEY_SYM", "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM",
  "LE", "LEADING", "LEAVES", "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM",
  "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING",
  "LIST_SYM", "LOAD", "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM",
  "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM",
  "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG",
  "NULL_SYM", "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM",
  "OFFSET_SYM", "OLD_PASSWORD", "ON", "ONE_SYM", "ONLY_SYM", "OPEN_SYM",
  "OPTIMIZE", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM", "PARTITIONING_SYM",
  "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM", "PLUGIN_SYM", "PLUGINS_SYM",
  "POINT_SYM", "POLYGON", "PORT_SYM", "POSITION_SYM", "PRECISION",
  "PREPARE_SYM", "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES",
  "PROCEDURE_SYM", "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM",
  "PROFILES_SYM", "PROXY_SYM", "PURGE", "QUARTER_SYM", "QUERY_SYM",
  "QUICK", "RANGE_SYM", "READS_SYM", "READ_ONLY_SYM", "READ_SYM",
  "READ_WRITE_SYM", "REAL", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY",
  "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM",
  "RELAY_THREAD", "RELEASE_SYM", "RELOAD", "REMOVE_SYM", "RENAME",
  "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE",
  "REPLICATION", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM", "RESOURCES",
  "RESTORE_SYM", "RESTRICT", "RESUME_SYM", "RETURNED_SQLSTATE_SYM",
  "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM", "REVOKE", "RIGHT",
  "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM", "ROWS_SYM",
  "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS",
  "SQL_BEFORE_GTIDS", "SQL_BIG_RESULT", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM",
  "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD", "SSL_SYM", "STARTING",
  "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATS_AUTO_RECALC_SYM",
  "STATS_PERSISTENT_SYM", "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM",
  "NOLOCK_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM", "STORAGE_SYM",
  "STRAIGHT_JOIN", "STRING_SYM", "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM",
  "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING",
  "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM",
  "SYSDATE", "TABLES", "TABLESPACE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TABLE_STATS_SYM", "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY",
  "TEMPTABLE_SYM", "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM",
  "THEN_SYM", "THREAD_STATS_SYM", "TIMESTAMP", "TIMESTAMP_ADD",
  "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB", "TINYINT", "TINYTEXT",
  "TO_SYM", "TOKU_UNCOMPRESSED_SYM", "TOKU_ZLIB_SYM", "TOKU_QUICKLZ_SYM",
  "TOKU_LZMA_SYM", "TOKU_FAST_SYM", "TOKU_SMALL_SYM", "TRAILING",
  "TRANSACTION_SYM", "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM",
  "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM",
  "ULONGLONG_NUM", "UNCOMMITTED_SYM", "UNDEFINED_SYM",
  "UNDERSCORE_CHARSET", "UNDOFILE_SYM", "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM",
  "UNICODE_SYM", "UNINSTALL_SYM", "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM",
  "UNLOCK_SYM", "UNSIGNED", "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM",
  "USAGE", "USER", "USER_STATS_SYM", "USE_FRM", "USE_SYM", "USING",
  "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES",
  "VALUE_SYM", "VARBINARY", "VARCHAR", "VARIABLES", "VARIANCE_SYM",
  "VARYING", "VAR_SAMP_SYM", "VIEW_SYM", "WAIT_SYM", "WARNINGS",
  "WEEK_SYM", "WEIGHT_STRING_SYM", "WHEN_SYM", "WHERE", "WHILE_SYM",
  "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM", "WORK_SYM", "WRAPPER_SYM",
  "WRITE_SYM", "X509_SYM", "XA_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "'('", "')'", "','", "'!'", "'{'", "'}'", "';'", "'@'",
  "'.'", "':'", "$accept", "query", "$@1", "opt_end_of_input",
  "verb_clause", "statement", "deallocate", "deallocate_or_drop",
  "prepare", "prepare_src", "execute", "$@2", "execute_using",
  "execute_var_list", "execute_var_ident", "help", "$@3", "change", "$@4",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "master_file_def", "create", "$@5", "$@6", "$@7", "$@8", "$@9", "$@10",
  "$@11", "$@12", "$@13", "server_def", "server_options_list",
  "server_option", "event_tail", "$@14", "ev_schedule_time", "$@15",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@16",
  "ev_sql_stmt_inner", "clear_privileges", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@17",
  "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams", "sp_fdparam_list",
  "sp_fdparams", "sp_init_param", "sp_fdparam", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl", "$@18", "$@19", "$@20",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "$@21", "sp_proc_stmt",
  "sp_proc_stmt_if", "$@22", "sp_proc_stmt_statement", "$@23",
  "sp_proc_stmt_return", "$@24", "sp_proc_stmt_unlabeled", "$@25",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@26", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@27", "$@28", "$@29", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@30", "$@31",
  "searched_case_stmt", "$@32", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@33", "$@34",
  "searched_when_clause", "$@35", "$@36", "else_clause_opt",
  "sp_labeled_control", "$@37", "sp_opt_label", "sp_labeled_block", "$@38",
  "sp_unlabeled_block", "$@39", "sp_block_content", "$@40",
  "sp_unlabeled_control", "$@41", "$@42", "$@43", "$@44",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@45", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "ts_wait", "size_number", "create2", "create2a", "$@46",
  "create3", "$@47", "$@48", "opt_create_partitioning", "opt_partitioning",
  "partitioning", "$@49", "have_partitioning", "partition_entry", "$@50",
  "partition", "part_type_def", "$@51", "opt_linear", "opt_key_algo",
  "part_field_list", "part_field_item_list", "part_field_item",
  "part_column_list", "part_func", "sub_part_func", "opt_num_parts",
  "opt_sub_part", "$@52", "$@53", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@54", "part_name",
  "opt_part_values", "$@55", "$@56", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@57", "$@58",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@59", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "$@60", "$@61", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "$@62", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "opt_select_from", "udf_type",
  "create_field_list", "field_list", "field_list_item", "column_def",
  "key_def", "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "$@63", "type", "$@64", "$@65",
  "spatial_type", "char", "nchar", "varchar", "nvarchar", "int_type",
  "real_type", "float_options", "precision", "type_datetime_precision",
  "func_datetime_precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_attribute", "opt_attribute_list", "attribute",
  "type_with_opt_collate", "now", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "ascii", "unicode", "opt_binary", "opt_bin_mod",
  "ws_nweights", "$@66", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "normal_key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique_combo_clustering",
  "unique_combo_clustering", "unique_opt_clustering", "unique",
  "clustering", "fulltext", "spatial", "init_key_options", "key_alg",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "key_using_alg", "all_key_opt", "normal_key_opt", "spatial_key_opt",
  "fulltext_key_opt", "btree_or_rtree", "key_list", "key_part",
  "opt_ident", "opt_component", "string_list", "alter", "$@67", "$@68",
  "$@69", "$@70", "$@71", "$@72", "$@73", "alter_user_list",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "$@74", "$@75", "$@76",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "$@77", "add_part_extra", "reorg_partition_rule", "$@78",
  "reorg_parts_rule", "$@79", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item", "$@80", "$@81", "$@82",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "slave", "$@83", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "$@84", "opt_checksum_type", "repair",
  "$@85", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "analyze", "$@86", "binlog_base64_event", "check", "$@87",
  "opt_mi_check_type", "mi_check_types", "mi_check_type", "optimize",
  "$@88", "opt_no_write_to_binlog", "rename", "$@89", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@90",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@91",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@92", "cache_keys_spec", "$@93",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_paren_derived", "select_init2", "$@94",
  "select_part2", "$@95", "$@96", "select_into", "select_from",
  "select_options", "select_option_list", "select_option",
  "select_lock_type", "select_item_list", "select_item", "remember_name",
  "remember_end", "select_alias", "optional_braces", "expr", "bool_pri",
  "predicate", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "simple_expr", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@97", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@98", "$@99", "$@100",
  "variable", "$@101", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "$@102", "gorder_list",
  "in_sum_expr", "$@103", "cast_type", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "opt_expr", "opt_else", "when_list",
  "table_ref", "join_table_list", "esc_table_ref", "derived_table_list",
  "join_table", "$@104", "$@105", "$@106", "$@107", "$@108", "$@109",
  "$@110", "normal_join", "opt_use_partition", "use_partition",
  "table_factor", "$@111", "select_derived_union", "$@112", "$@113",
  "select_init2_derived", "select_part2_derived", "$@114", "$@115",
  "select_derived", "$@116", "select_derived2", "$@117", "$@118",
  "get_select_lex", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@119",
  "$@120", "index_hints_list", "opt_index_hints_list", "$@121",
  "opt_key_definition", "$@122", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "where_clause", "$@123", "having_clause", "$@124", "opt_escape",
  "group_clause", "group_list", "olap_opt", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@125", "order_list", "order_dir",
  "opt_limit_clause_init", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "delete_limit_clause", "ulong_num",
  "real_ulong_num", "ulonglong_num", "real_ulonglong_num", "dec_num_error",
  "dec_num", "procedure_analyse_clause", "$@126",
  "opt_procedure_analyse_params", "procedure_analyse_param",
  "select_var_list_init", "$@127", "select_var_list", "select_var_ident",
  "into", "$@128", "into_destination", "$@129", "$@130", "do", "$@131",
  "drop", "$@132", "$@133", "$@134", "$@135", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "if_exists", "opt_temporary", "drop_ts_options_list",
  "drop_ts_options", "drop_ts_option", "insert", "$@136", "$@137",
  "replace", "$@138", "$@139", "insert_lock_option", "replace_lock_option",
  "insert2", "insert_table", "insert_field_spec", "$@140", "fields",
  "insert_values", "$@141", "$@142", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "no_braces", "$@143",
  "opt_values", "values", "expr_or_default", "opt_insert_update", "$@144",
  "update", "$@145", "$@146", "update_list", "update_elem",
  "insert_update_list", "insert_update_elem", "opt_low_priority", "delete",
  "$@147", "single_multi", "$@148", "$@149", "$@150", "table_wild_list",
  "table_wild_one", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate", "$@151", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@152", "show_param",
  "$@153", "$@154", "show_engine_param", "master_or_binary", "opt_storage",
  "opt_db", "opt_full", "from_or_in", "binlog_in", "binlog_from",
  "wild_and_where", "describe", "$@155", "$@156", "explanable_command",
  "describe_command", "opt_extended_describe", "opt_describe_column",
  "flush", "$@157", "flush_options", "$@158", "$@159", "opt_flush_lock",
  "$@160", "flush_options_list", "flush_option", "opt_table_list", "reset",
  "$@161", "reset_options", "reset_option", "$@162", "slave_reset_options",
  "purge", "$@163", "purge_options", "purge_option",
  "purge_archive_option", "kill", "kill_option", "use", "load", "$@164",
  "$@165", "$@166", "$@167", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "opt_field_term", "field_term_list", "field_term",
  "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_ident", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "ident", "label_ident", "ident_or_text", "user", "keyword", "keyword_sp",
  "set", "$@168", "$@169",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@170", "$@171", "$@172",
  "start_option_value_list_following_option_type", "$@173",
  "option_value_list_continued", "option_value_list", "$@174", "$@175",
  "option_value", "$@176", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "$@177", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "isolation_level", "transaction_access_mode_types", "isolation_types",
  "text_or_password", "set_expr_or_default", "lock", "lock_variant",
  "$@178", "table_or_tables", "table_lock_list", "table_lock",
  "lock_option", "unlock", "unlock_variant", "handler", "$@179",
  "handler_read_or_scan", "handler_scan_function", "handler_rkey_function",
  "$@180", "handler_rkey_mode", "revoke", "$@181", "revoke_command",
  "grant", "$@182", "grant_command", "opt_table", "grant_privileges",
  "opt_privileges", "object_privilege_list", "object_privilege", "$@183",
  "$@184", "$@185", "$@186", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "grant_list",
  "grant_user", "opt_column_list", "column_list", "column_list_id",
  "require_clause", "grant_options", "opt_grant_option",
  "grant_option_list", "grant_option", "begin", "$@187", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_clause", "union_list", "$@188",
  "union_opt", "opt_union_order_or_limit", "union_order_or_limit", "$@189",
  "order_or_limit", "union_option", "query_specification",
  "query_expression_body", "$@190", "subselect", "subselect_start",
  "subselect_end", "opt_query_expression_options",
  "query_expression_option_list", "query_expression_option",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@191",
  "view_list_opt", "view_list", "view_select", "$@192", "view_select_aux",
  "$@193", "create_view_select_paren", "create_view_select", "$@194",
  "view_check_option", "trigger_tail", "$@195", "$@196", "$@197",
  "udf_tail", "sf_tail", "$@198", "$@199", "$@200", "$@201", "$@202",
  "sp_tail", "$@203", "$@204", "$@205", "$@206", "xa", "xid",
  "begin_or_start", "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "$@207", "opt_migrate", "install", "uninstall", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   124,    38,    45,
      43,    42,    47,    37,    94,   126,    40,    41,    44,    33,
     123,   125,    59,    64,    46,    58
};
# endif

#define YYPACT_NINF -3899

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-3899)))

#define YYTABLE_NINF -2663

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    4847,  2194,  1063, -3899,  -183,   181, 48755,   115,  1493,  1493,
     402,  2126, -3899, -3899, -3899, -3899, -3899,  3009, -3899, 48755,
    1063,   843, -3899, 24194, -3899, -3899,   689,   202,   210,   168,
    1063, -3899, 48755, -3899,   634,  1057,  1063, -3899, -3899, 42465,
   -3899,   402, 48755, -3899,   617, -3899, 42465,   -63,   688,   679,
     896,   391, -3899, 48755,  1358,   698,  1496,  1202, -3899, -3899,
    1098, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, 24825, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899,  1424, 48755,  1449, 48755, -3899,
    1431, 48755, 40578, 48755, -3899,  1144,  1557, -3899, -3899,  1622,
   -3899, -3899,  1493,   402, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899,  1100, -3899, -3899,  1214, -3899,
   -3899, -3899, -3899, -3899,  1853, -3899,  1561, -3899,  1724, 40578,
   -3899, 48755, -3899, -3899, -3899,   250, -3899,  1378, -3899,  1412,
    1735, -3899, -3899,  1951,  1346,  1827,  1846,  1039, 11364,  1801,
    1801,  1801, 48755,  1842,  1801,  1801, 48755, -3899,  1801, -3899,
    1801,  1493, -3899, -3899, -3899,  1993, -3899, 48755,  1741,   217,
     707, 40578,  1732, 48755, -3899, -3899, 11364, -3899,  1899, -3899,
   -3899,  1903,  1958, -3899, -3899,  1493,  2108,  1973,  1946, 48755,
   -3899, -3899,  1493,   231,  1299,  1570, -3899, -3899,  1706, -3899,
   -3899,   208, -3899, -3899, -3899,  2436, -3899, 26718,  6248,  1706,
    1091,  -129,  1091, -3899, -3899, 48755, -3899, -3899, -3899,  1885,
   -3899, -3899,   333,   333,   333, -3899,   333, -3899,   333, -3899,
     698,  1547, -3899, -3899,  1545, 48755,  1004,  2040,  1388, -3899,
   -3899,  1566,   992, -3899,  1612, 37433, -3899, 48755, -3899, -3899,
   -3899, -3899,  1860, -3899, -3899, -3899,  2751, -3899, 37433, 24194,
    1749,  2079, -3899, -3899, -3899, 24194,  1605, 48755, -3899, 24194,
   24194,   287,  1435,  1768, 48755, 48755,  2077, -3899,  2267, 37433,
    1838, -3899,   190,  -102,  1622,  2273, -3899,  1561, -3899, 48755,
   -3899, -3899, 48755, 48755, -3899, -3899, -3899, 43094,  1039,  1650,
    1656,  1661, 15914, -3899,  1668,  1670,  1687, 11364,  1693,  1695,
    1698,  1704,  1707,  1713,  1716,  1736,  1747,  1747,  1763,  1769,
    1771,  1776,  -181,  1782, -3899,  1784,  1791,  1793, -3899, -3899,
    1809,  1821,  1824,  1830, -3899,  1840,  1857,  1863, 12014,  1872,
    1895, -3899, 21031,  1901,  1907,  1911,  1918,  1920,  1922,  1924,
    1931,  1933, -3899, -3899, 11364,  1763, -3899, -3899,  1937, -3899,
    1969,  1972,  1978,  1985,  1989,  1991,  1997,  2003,  2005,  2009,
    2014,  2019,  2028,  2031,  2033,  2042,  2045,  1763, -3899,  1109,
    2052,  2056,  1151,  2059, -3899,  2061, -3899,   348,  2065,  1747,
    1763,  1763,  2074,  2086,  2095,  2097,  2102,  2109, 15914, 15914,
   15914, 11364, -3899, 48755, -3899, 48755, -3899,   464,  3044, -3899,
    3095, 15914,   186, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
    1664,  1844, -3899, -3899, -3899, -3899, -3899, -3899,  2122,  1770,
    2295, 48755, 48755, 48755,  2123, 48755, 48755, 40578,  1006, 48755,
   37433, -3899,  1801,  1932,  2506, 29878,  4386, -3899,   116, -3899,
   -3899, 48755, -3899, -3899, -3899, -3899,  2288,  2053,   464,  2590,
     198,  2526,  2657, 24194, -3899,    88, -3899,  -178,  2417, -3899,
    2695, -3899,  2460, -3899, -3899, 37433, 24194, -3899, -3899, -3899,
   21662, -3899, -3899, -3899,  2737, -3899,  2142, -3899, -3899,  1844,
    3901, -3899,  4864,  2325,  1435,  2204, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899,  2169,  2436, -3899, -3899,
   43723,   207,  2344,  2174,   429,   693, 34917,  1054,   787,   943,
   27350, 35546,  2176, -3899, -3899, -3899,   765,  2670, -3899,   -26,
     -26,  2193,  1848,   -26, 38062,  2573,   205, -3899,   417, -3899,
    2653, -3899, -3899,   -26, -3899, -3899,  2337,  2323, -3899, -3899,
     420,  1765, -3899,  2704, -3899,    43, -3899,  2348,   -26,   -26,
     -26,  2573,   -26,   205, -3899,  2599,  2728,   516,  -145, -3899,
   -3899, -3899, -3899,  2240, -3899,   928,  2810, -3899,  2251, -3899,
   -3899, 24194, -3899,  2288, -3899, -3899, -3899,  2256, -3899,  2537,
    2376, -3899, -3899,    37, -3899,  2270,     1,  2766, -3899, 40578,
    1422, 38691, -3899, -3899, -3899,  2816,  2832,  1747,  2296, -3899,
   -3899, -3899,  2954, -3899, -3899,  2318,  2862,  2862,  2862,  2972,
   -3899, -3899, -3899,  2330,  2587, -3899,  2509,  2366, -3899, 48755,
    1749, 24194,  2741,  2340, -3899, -3899,  2611, 11364, -3899, -3899,
    5829,   782, -3899, -3899,   255, -3899,  2933,  2566, -3899, -3899,
   -3899, -3899,  2836, -3899, -3899,  2954,  2897,  2862,  2790,  2365,
   -3899, -3899, -3899, -3899, -3899, -3899,   225, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899,  1721, -3899, -3899, -3899, -3899, -3899,
    1749, -3899, 24194, -3899, -3899, -3899, 24194, -3899,  2367, -3899,
    2363, -3899, 11364, 11364,   302,  2946,  3007,  3007,  3007,   464,
    2400, 11364, 11364, 11364, 11364, 11364, 11364, 11364,   329,  2379,
   -3899, -3899,   649, -3899,  2387, 11364, 11364, -3899, 11364, 11364,
   25456, -3899,  4049, 11364, 11364,   910,  2884, 11364, 11364, 11364,
   11364,  2851, 11364, 11364, 25456,  3027,  2390, -3899,  2386,   343,
   11364, 11364,   385, 11364, 11364, 11364, 11364, 11364, -3899, -3899,
   11364, 11364, 11364, 11364, 15914, 11364, 11364, 11364, 11364, 11364,
   11364,  2395, 11364,  3007,  3007, 11364, 11364,   942, -3899, -3899,
   11364,  2338,  2338, -3899, 11364,  8114, 11364, -3899, -3899, -3899,
    2398, -3899, -3899, -3899, 25456,  3007,  3007, 11364, 11364, 11364,
    2946,  2946,  2946,   192,  2399,   779, 11364, 27982,  2394, -3899,
   -3899, -3899, -3899, 11364, 11364, 11364, -3899, 15914, -3899, -3899,
    1631, -3899, -3899, -3899, 12664, 15914, 15914,  2404, 15914, 15914,
   15914, 15914, 15914,  2777, 15914, 15914, 16564, 17214, 15914, 15914,
   15914, 15914,  1281,  2946, 40578, 15914, 11364, -3899, -3899, 48755,
   -3899, -3899, -3899,  2403, 24194,  1006, -3899, -3899, -3899, -3899,
   -3899, -3899,  2406,  1006, -3899,  2902, -3899, -3899,  2410, 24194,
   -3899,  2409, -3899,  2786, -3899, -3899, -3899,  2788,  2794,  2795,
   -3899, -3899, -3899, -3899,  3028,  2797, -3899,  2801, -3899, -3899,
   -3899, -3899, -3899,  2435, -3899, -3899, 17864, 40578, -3899,  2438,
   -3899,  2935, -3899,  2685,  2636,  1858, -3899, -3899, -3899, -3899,
   -3899,  2723, -3899, -3899,  2556, -3899,  2731, -3899, -3899,   184,
   -3899,   103, -3899, -3899, -3899, -3899, -3899, -3899,  2732,  2456,
   -3899, -3899, -3899, 48755, -3899, 49384, -3899, 21662,  -183, -3899,
   -3899, -3899,  2835, -3899, -3899,   234,  2463, -3899, 24194, -3899,
      93,    93,  2721,   848, 40578, -3899, -3899,   157,   955,   197,
    2465,  2549,  2467, -3899,  2553, 24194, 24194, -3899, -3899, -3899,
    2729, -3899,  3109,  1299, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899,  2474,  2964,  2685,
    2756, -3899,  2757, -3899, 48755, -3899,  1138, -3899, -3899, -3899,
    2497, -3899, 11364, -3899,    40, -3899,   765, -3899, 48755, -3899,
   -3899, -3899, -3899, -3899,  3063, 11364, -3899, 37433,   -20,   958,
    1236,   765, -3899, -3899, -3899, -3899, -3899, 48755, 44352,  2498,
   -3899,  2909,  -183, 11364, -3899, -3899,  2512,  1561, 48755, 48755,
   48755, 24194, 48755, 24194, -3899,  1314,  1314, -3899, 36175, -3899,
   -3899, -3899, -3899,   -26, 48755, 48755,   -26, 37433, -3899, -3899,
     205, 48755,   -26, -3899,  2908,  2616, -3899, -3899, -3899,  2978,
   -3899, -3899,  2969,  2513, -3899,  2909, -3899,  2638,   205, -3899,
   -3899, -3899, -3899, -3899, 24194, -3899, -3899,   205, -3899,   205,
     205,   -26,   -26,  2568,  1091, -3899, -3899,  2672,  -129, -3899,
    1176,   333,  2774, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899,    74, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899,   199, -3899, -3899,
   -3899,  2050,  3034, -3899, 40578,  2397,  -107,  1867,  2397,  2094,
    -183,  1349, -3899,  1349, -3899, 37433,  2997,  4476,  1433, 24194,
   -3899, -3899,  2534, 44981, 24194, -3899, -3899, -3899,   174,  2539,
    2542,   464,  3030,  3032,  3033,  3037,  3038,  3040,  3047,  3049,
    3051,  3054,  3055,  3056,  3059,  3060,  3061,  3062,  3064,  3067,
    3068,  3070,  3071,  3077,  3080,  3081,  2554, -3899, -3899, -3899,
   -3899, 24194, -3899, -3899, -3899, -3899,  2648, -3899, -3899, -3899,
   -3899,  2157, -3899, -3899, -3899,   244,  2268,  2620,  2647,   128,
   37433,  3057, 48755, 48755,  1561, 48755, 48755, -3899, -3899,   487,
    2885,  2888,  2889,  2612, -3899,  2729, -3899,  -204, 48755,  3066,
   31772, -3899,   320,   839, -3899,  3007,  2615, -3899,  2617,  2618,
    2621, 11364,    69,  1505,   974,  1329,  1497,  1125,   366,   288,
   -3899,  2622,  2633, -3899,  2628, -3899, -3899,   401,   430,  1169,
    1173,  2630,  2631, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899,  3086, -3899,   491,  1521, -3899, -3899, -3899,
   -3899,  2641, -3899, -3899,  1186,   504,   511,   328,  2646,   513,
    1556,  1571,  2635, 25456, 48755,  3007,  2649,  1205,  1251,  3007,
    2650,   543,  1268,  1600,  1675,  1679,  1289,  1304,   562,  1683,
    3154,  1339,   564,   662,  1369,   712,   719, -3899,  1376,  2651,
    2652,   821,   318,  3007,  2654,   347,  2645,  2659,  1380,  9414,
   10064, 10714,  1104,   850, -3899,  2655, -3899,  2386,  2662,  2664,
     370,   124,  1382, -3899, 11364, -3899, -3899,   967,    99,  2709,
     284,  1236, -3899,  2813, 48755,  2350,   180, -3899, -3899, -3899,
   -3899, -3899, -3899,  1465, -3899,  2669, -3899,  2677,  2132,  2674,
   11364,  1008,  2674,  3184,   692,   692, 15914,  2901,  2353, 12014,
    1206, 12014,  1206,  2674,  2674,  2674, -3899, 15914,  2679, 15914,
   15914, -3899,  2946,   464,  2680,   809, 48755, -3899,  2406,  1107,
   -3899,   765, 37433,   163, 24194, 40578,  2683, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899,  2675, 24194,  2775,  2784,  2789,
   -3899, 30510, -3899, -3899, -3899, -3899, 30510,    13, -3899, -3899,
   -3899, -3899, -3899,  2796, -3899, -3899, -3899,  2699, -3899, 37433,
    2699, -3899, -3899,  2699, -3899, -3899,  2699,    77,  4105, -3899,
     300,   388,  2634,  2724, -3899, -3899, -3899, 24194, -3899,  3116,
     694, 24194,  2534,  2702, -3899, -3899, -3899, -3899, -3899,  2374,
    2815, -3899,  3343, -3899, 11364,  -183, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, 11364,  -183, -3899, 37433, 37433,
   24194, 24194,   913, -3899,  2530,  2710, -3899, -3899, -3899, -3899,
   -3899,  3901, 17864,  2707, 37433,   890, -3899, -3899, -3899, -3899,
   -3899,   125,   464, -3899,  2703,  5369, 43723,  8764, -3899, 39320,
   -3899,   464,   765,  2712,  2717, -3899, -3899,  3102,  1017, -3899,
    2725,  2726, -3899,  2714,  2715,  2718, 43723, 11364, -3899,   958,
   -3899, -3899, -3899, -3899,  8764,  -183,  3178, -3899,   464,  2734,
   48755, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899,   -90, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899,   -26, -3899, -3899, -3899, -3899, -3899,
    2960,  2573,  1765,  3178, -3899,   -26,   205, 24194,   -26,   -26,
   -3899, -3899,  3043,  2778, -3899,  3186, -3899, -3899, -3899, 48755,
    2678,  2903, -3899,  2739, -3899, -3899, 24194, -3899,  2740, -3899,
    3199,  3344,  2573, -3899, -3899, -3899,   765,   765,  3065, -3899,
    -183,  2882,  2886,  2892,  2895,  2900,  2929, -3899, -3899,  -183,
    -183, -3899, -3899,   765, -3899,  1383, -3899, -3899, -3899, -3899,
    -183,  -183,  -183,  -183,  2569,  -183,  -183,  1727, -3899, -3899,
     765,   765, -3899,   642, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899,  1171, -3899,  3010, -3899,  2464,   765,  3339,  3031,   765,
     765,  3339,   765,  3035,  3042,   765,   765,  2857,  3288,   765,
    3171,  2894,  2148,  3180,   765,  3050, -3899,  2898,  3310,   765,
     765,   765,   765,   765,  3339,  3069,  3402,   765, -3899,   765,
    3073,  3058,   233,  3076,  3079,   765,   765,   765,   765,   834,
   48755,   765,  3082,   765, -3899, -3899,  4335, -3899, -3899, -3899,
   -3899, -3899, -3899,   633, 22293, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899,  3084, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899,  2809, -3899, -3899, 11364,  2811,  2569,  -183,  2569,
    2569,  -183,  -183,  1249,  -183,  2569,  2569,  -183,  -183,  -183,
    -183,  -183,  -183,  -183,  2569,  2569,  -183,  1607,  -183,  2569,
    5829, -3899, -3899, -3899, -3899,   247,   765,   765,   765,   765,
   -3899,  2239, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   40578,  3182,  1766,   667, 40578, -3899, 48755, -3899,   382, 48755,
    2812,   577,  3123,  1016,  1016, -3899, 24194, 24194, 24194, 48755,
    2867, -3899, 31772, -3899, -3899,  1176, -3899,  2807, 13314, -3899,
    2826, -3899, 11364, -3899, -3899, -3899,   314, 11364, 11364,  3326,
    2355, -3899, 39949, -3899, -3899, -3899, 11364, 39949,  2355, 11364,
   -3899,  2831, -3899,  3241,  3242, -3899, -3899, -3899, -3899, 11364,
   11364, -3899, 11364, 11364, -3899, 11364, 11364, 11364, 11364, 11364,
   -3899, -3899, 15914, -3899,  2828,  2840, -3899, -3899, -3899,  2844,
   -3899, 11364, -3899, -3899, -3899, -3899, -3899, -3899, 11364, -3899,
   11364, -3899, 11364, 11364, -3899, 11364, 11364, -3899, -3899, -3899,
   13964, 11364, 11364,  2845, -3899, -3899, 11364, 11364, 11364, -3899,
   11364,   316, 11364,  1602, 11364,  1852, 11364, -3899, 11364, -3899,
   -3899, -3899, -3899, 11364,   374,  2374,  2569,  2846, -3899,  1738,
   -3899, -3899,  1440, -3899,   967,  2847, -3899, -3899,  1138, -3899,
   -3899, 40578, 11364, -3899, -3899, -3899, -3899, -3899, -3899, 15914,
     378,  2848, 15914, -3899,  3184,  2851,  2851,  2160, 11364,  1008,
    3184, 11364,  2849,  2854, -3899, 11364, 48755, -3899, -3899, -3899,
   -3899, 40578, -3899, -3899, -3899, -3899,   163, -3899,  2409, -3899,
    2534, -3899,  3324,  2858, -3899, -3899, -3899, -3899, -3899, -3899,
   48755, -3899,  2932, -3899, -3899, -3899, 22924, 22924, -3899, 22924,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899,  2573,  2530, -3899,  2859, -3899, -3899,  2611,
    2952,  2880,  3237, -3899, -3899, -3899, 48755, 15914, -3899, -3899,
   -3899, -3899, -3899, -3899,  3466,  2868,  2872,  3360,  2875,   464,
   -3899,   464, -3899,  2957, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899,  1078, -3899, -3899,  2881,  2881, 19759, -3899, -3899,
   -3899, 48755,  3367, -3899,  3327,  3335, 22924, 22924, 22924,  1060,
   -3899,   501, -3899,   903,  3289,  2573, -3899,  3337, 41207, -3899,
   32401, -3899, -3899, -3899, 15914,  1784, -3899,   464, -3899, -3899,
   -3899, -3899, -3899,   -20,  2979,  2980,   -36, -3899, -3899,  3285,
    3114, -3899, -3899, -3899,   765,   464, -3899,  2498,  2904, 28614,
   -3899, -3899,  1249, -3899,   271, -3899, 36175, 36175, -3899,  3173,
   -3899, -3899, -3899, -3899,  2724,   205, -3899, -3899,  3391, -3899,
    3392, -3899,  2910,  3397, -3899,  3174,  3090, -3899,  1101,  3318,
    3320, -3899,  3192,    65,  3192,  1101,  1101, 25456,  1176,  2729,
   -3899,  2569,  3248, -3899, -3899, -3899, 39320, 36804, -3899, -3899,
   -3899, -3899,  3467, -3899,  3468,  1613, -3899, -3899,  2015,  1110,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899,  2094,  2015,  2015,  1013, -3899,
     149, -3899, -3899, -3899, -3899,  3403, -3899, 26087,  1063, -3899,
     277, -3899, 26087, -3899,   174,   174, -3899, 45610, 26087,  1063,
    1249,  2569, 26087,  2569, 46239,  1063,  -183,  -183,  2308,   765,
    2569, -3899, -3899,  3330, 48755,  3334, 26087, 26087, -3899, 40578,
   48755, -3899,   765,  1487,  2569, 46868,  1249,  1249, 26087,  1063,
   25456,  1778, -3899,  -183,  1063, -3899, -3899, -3899, -3899, 24194,
    1063,  1063,  3283,  1819,  2233,  2448, -3899, -3899, -3899,  2569,
   46239, -3899, -3899,  6016, -3899, -3899, -3899, 19128, 48755,  1079,
     211, -3899,  2927,  2947,   147, -3899,  3155,  2949, 47497,   464,
    2569, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899,  -183,  2374,  2015,  2015,  2093, -3899,  3222,  3394,   765,
   -3899,  1871, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899,  3045, -3899,  3577,  3147,  2956, -3899, -3899,   251, -3899,
   -3899,  1112, 24194, 18497, -3899,  3213, -3899,  2762, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899,  2950,  1176,  2724,
    1407,  2724,  2965, -3899, 12014,  1393, -3899,   464, 11364,   464,
     477, -3899,  2966,  2966,  2968, -3899,  2970,  2966,  3369,  2968,
    3374,  2973,  2974,  1404,  2975,  2977,  1664, -3899, 11364, 11364,
    1416,   397,  1434,   534,   856,   861,   399, -3899,  1444,  3176,
   -3899, -3899,  1459,  1474,  1476,  1483,   881,  1528,  1740, 12014,
    1539,   322,   403, -3899,  1551,   914,   961,  1555, 11364,  1579,
   11364,  1581, 11364,  1617,  1666,  1677,  2971,  2971,   226, -3899,
    2981, -3899, -3899, -3899,  2982, -3899, -3899,  2169,  1440, -3899,
   -3899,  2984, -3899, -3899,  2983,   464,  2985, -3899, -3899, 11364,
   -3899,   186, -3899, -3899, 15914,   408,  2986, -3899,   464, -3899,
   -3899,  2988,  1664, -3899,   245, -3899, -3899, -3899, -3899,    36,
    3863, 30510, -3899,  1744, -3899, 37433,  2987, -3899,  2993,  3075,
    3083,  3085,  2990, 11364, -3899, -3899,  3250, 24194, -3899,  3401,
   -3899, -3899, -3899, -3899,  2995,  3001, -3899, -3899, -3899,  3184,
    3358,  3238, -3899, -3899,  2374, 48755, 37433, -3899,  2436, 25456,
   -3899,  3005, -3899,  3005,  -177,  3011,  1785, -3899, -3899, -3899,
    3000,  2204,  1797, -3899, 17864,  3281, 37433,  3464,  3469,  3470,
   -3899,  2724,  2724,   259,  3078,  3416, -3899, -3899, -3899, -3899,
   48126, -3899, -3899, -3899, -3899,  1018, -3899,  3018,  3019,   123,
    3252, -3899, -3899, -3899, -3899,  8764, -3899, -3899, -3899, -3899,
   -3899, -3899,  2573, -3899, -3899, -3899, -3899, -3899,  2573, -3899,
     -26,  -183,  -183,  1681,  -183,  3515,  3551, 11364,  -186,    99,
   -3899,  1174, -3899, -3899, -3899,  3425,  1101,  3192,  3192,  3430,
    3315,   819,  3053, -3899,   765, -3899,  2481, -3899,  2436, -3899,
   -3899, 11364, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899,  1171, -3899, -3899, -3899,
   -3899, -3899,  3039,  3431,  3437, -3899, 26087,   174, -3899, -3899,
   26087, 26087, -3899, -3899,    90, 46239, -3899, -3899, -3899, -3899,
   -3899, -3899,  3072, -3899, -3899,  2374, -3899, -3899, 36804,  -183,
   -3899, 26087,  3072, -3899, -3899,   185, -3899,  3074,  -183, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, 46239,
    3092, -3899,   332, -3899, -3899,  2108, -3899, 46239, -3899, -3899,
   -3899, 46239, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899,  3096,  2945,  2106, -3899,  3046,  3093, -3899,
   -3899, -3899, -3899, 48755, -3899, -3899, 24194, -3899, -3899, -3899,
    5665, 48755, 48755,  3679,    39,   303,  3137,  1928, 46239, -3899,
    3097, -3899,  3098, -3899,  1869, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899,  3099, 48755,  2015,  1974, -3899, -3899,  -183,  1112,
   -3899, -3899, -3899, -3899,  3336,  3338, 48755, -3899, -3899, -3899,
   -3899,  3207, -3899, 24194, -3899,  3233, -3899,  3100,   975,  4173,
   -3899,  3103,  3106,  3108, 31772,  2724,  3340, -3899, -3899,  2851,
   -3899,   464, 11364,  1332, -3899, -3899,   171,  3345, -3899,  1357,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899,  3101,  2851,  2851, -3899, -3899, 11364, -3899,  3669,
    3244, 11364, 11364, -3899, 11364, -3899,   962,  3111,  3104, -3899,
   -3899, -3899, -3899, 11364, -3899, -3899,  2851, -3899, 11364, -3899,
   -3899, 11364, -3899, 11364, 11364, -3899,  1696, -3899,  1705, -3899,
    1709, -3899, -3899, -3899,  2374,  3112,  3452, -3899, -3899, -3899,
    2374,  3265, -3899, -3899,  2374,  2569,  2497, -3899, -3899,   779,
   48755, -3899, -3899,  1878, -3899, -3899, 11364, -3899, 41207, -3899,
   -3899, -3899,  3446,  3714, -3899,  3305, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, 48755,  1194,  3089, 33030, 37433, 37433, 37433,
   14614,   464,  3581, -3899, -3899, -3899,  3401,  3495, -3899,    58,
   -3899, 48755,  3115,  1495, -3899,  1887, -3899, -3899,  3118, -3899,
    2169,  3113, -3899,   765, 14614,  2881,  3233, -3899, -3899,  -177,
   25456, 32401, -3899, -3899, 48755, -3899,  3538,  2365, 37433, 37433,
   37433,  2573,  3557,  2952,  2952, -3899, 29246, -3899, -3899,  3284,
   -3899, -3899, 33659, -3899, -3899, -3899, -3899, -3899, -3899, 28614,
   43723, -3899, -3899, -3899, -3899, -3899, -3899, -3899,  -183,  3607,
    3373,   464,  1138,  1049, -3899,  1176, -3899,  1101, -3899,  3520,
    3521,  1101, -3899, -3899, -3899, 25456,  2724, 14614, -3899,  2169,
     464,  3128,   332, -3899,   820, 11364, 26087, -3899, -3899, -3899,
    3131, -3899, -3899,  3654,  3655, -3899, 26087,  2157, 48755, -3899,
    3063, -3899, -3899, -3899,  3234, -3899,  5665, -3899, 25456, -3899,
   -3899, -3899, -3899, -3899, 48755, -3899, 24194, -3899, 19128, -3899,
    3135, -3899,  2966,  2966,  2966, -3899, -3899, -3899,  2968, -3899,
    2970,  3380, -3899,  2970,  2970, -3899, -3899, -3899, -3899, -3899,
     171,  1254, -3899, -3899,   171, -3899, -3899, -3899,   119,  1439,
    2970, -3899, -3899, -3899, -3899, -3899, -3899, -3899,  2966,  2968,
    2968, -3899, -3899,   171,  2966, -3899,  2966,  2855, -3899,   438,
      92,  2966,  2966,  2966,  3138,  3129, -3899,  1898, -3899,  3381,
   -3899, 11364, 11364,  3417, 48755,  3418, -3899,  3711,  3143, -3899,
   47497, -3899,  2569,  2094, -3899, -3899, -3899, -3899,  3306,  1386,
   -3899,  3333,  3156,  3157, -3899, -3899,  -183,  3159,  3160,  4335,
   -3899, -3899, -3899,  3788, -3899, 48755, 48755, 48755,  2807, -3899,
    3541,  1361,   464,  3163,  3164,  3165,  3185,  3795,   156, -3899,
    3797, 39949, -3899, -3899, -3899,  3187,  1913, -3899,  3188,  3189,
    1718, -3899,   333,  3190,  1725,  1003,  1915,  3505,  3582, -3899,
    3424, -3899,  1751,  1443,  1787,  1796,  1875,  1877, -3899, -3899,
   -3899, -3899, -3899,  3194, -3899, -3899,  1032, -3899,  3195,  1472,
      99, -3899, -3899,  1947, -3899, -3899, -3899,  3668,  3567, -3899,
    3643, -3899, -3899, -3899,  -152,  -152,  -152,  1784,   464,  1959,
   -3899, -3899, -3899, -3899,  3608, -3899, -3899,  3214,  3343, 48755,
   -3899,  3238, -3899,  2497, 25456, 14614,  3215,  3216, -3899,     1,
   -3899, -3899,  3209, -3899, -3899, 37433,  2365,  2365,  2365, -3899,
    3814,  3657, -3899, -3899, 40578,  3217, -3899, -3899,  3533, -3899,
   -3899, -3899, -3899,  -183,  3712, -3899, -3899, -3899,  2739,  2445,
    3266,  1101,  1101,  2720,  3268, 11364, 11364,  3228, -3899,  3340,
   -3899, -3899,   877,  2497, 11364, -3899,  2374,  3238, -3899,  1890,
    3229,  3230, 48755,  3231,  3235, -3899,  3575,  1079, -3899, -3899,
   -3899, 24194,  2855,  1063, -3899, -3899,  3072,  1078,  3232, -3899,
   48755,  3570, -3899, -3899, -3899, -3899,  1179, -3899,  3236,  1179,
    1179, -3899,  2344, -3899,  3271,   171, -3899, -3899,  3273, -3899,
   -3899, -3899,  1179,  3243,   171, -3899, -3899, -3899, -3899,  1179,
   -3899, 40578,  1757,  -183,  3325, -3899,  3291, -3899,  3766,  1606,
   -3899,  2855, -3899,  3636,  3637,  3532, -3899,   171, -3899, -3899,
    3861, -3899,   171,  3861,  1179,  3534, -3899,  1179, 48755, -3899,
   48755, -3899,  1152, -3899,   464,  2851,  3816, -3899, -3899,  3405,
    -183,  3757, -3899, -3899, -3899,  1963,  -183, -3899, -3899, -3899,
    3253,  3255, -3899, -3899, -3899,   303, -3899, 48755,  5665, -3899,
   -3899, -3899,  3213, -3899,  1234,  1979,   332,  3258,  1999,  2010,
   36175, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   39949, -3899,  3861, -3899,  3542, -3899, -3899, -3899, 11364, -3899,
   -3899, -3899, 11364, -3899, -3899,  3568,  3734, -3899, -3899, -3899,
   -3899, -3899, -3899,  3261, -3899,  2569,   903,   903, -3899, -3899,
   -3899, -3899, -3899,  3536,   645,  3292,  3292,  3292, -3899, 14614,
    3658,  3363, -3899, -3899,  3269,  3304, -3899, -3899,  1472, -3899,
   -3899, -3899, -3899,  2365, 11364, -3899,  3340,  2308, -3899, 29246,
   -3899, -3899,  -183,   779, -3899,  3316, -3899, -3899, -3899,  3317,
     464,   464, 48755,  3541, -3899,   929,  1472,   332, -3899,  2034,
   -3899, 48755, 48755,  2037, 48755, 48755,  2775,  2784,  2789,  1607,
    1607, -3899, -3899, -3899, -3899, -3899, -3899,  3683, -3899, -3899,
    2080, -3899,   716,  3550, -3899, -3899, -3899, -3899,  1179, -3899,
     333, -3899, -3899, -3899, -3899, -3899,   333, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899,  3566,  3321, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899,  3277, -3899, -3899, -3899, -3899,  1263,  3303, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899,  1445, 48755, 24194,
    3417,  3475, -3899,  3063, -3899,     1,   975,  3233, -3899,   393,
   48755, -3899,  3571,   108,   220, -3899, -3899, -3899,  3294,  3287,
     332,  1909, -3899, -3899, -3899,  3295, -3899, -3899, -3899,  3378,
    3383, -3899, -3899,  3386, -3899, -3899,   166,  2541, -3899, -3899,
   -3899, -3899,  3346, 24194, 15914,  3411, 48755,  1717,  2433, -3899,
    1517,   332, 11364,  2573, 36804, -3899, -3899, -3899, -3899, 11364,
    3300, 11364,  3301,  2104, -3899, -3899, -3899,   174,   174, -3899,
     929, -3899, -3899, -3899,  2112,  2114,   393,  2118,  2131, -3899,
   -3899, -3899,  1079,  3302, -3899, 48755, -3899, -3899, -3899,   278,
   -3899, -3899,  2133, -3899,  2136, -3899, -3899, -3899,  1263,  3308,
   -3899,  1604, -3899,  2204,  3432, -3899, 55045, -3899, -3899,  5665,
    3760,  1928, -3899, -3899, -3899, -3899, -3899,  3311,  2204,  -183,
     765, -3899,   393, -3899, -3899, -3899,   332,  3312,  3563, -3899,
     108, -3899, -3899, -3899,   220, -3899, -3899, -3899, 11364, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899,   151,  3585,  2569,  2569,
    2569,  2569,  2541, -3899, 25456,  2729, -3899,  2374, -3899,  2158,
   -3899, -3899, -3899,  3406,   765,  3822,  3827,   765,   765,   765,
     765,  3328,  2433, -3899,  3806, -3899, -3899, 11364, -3899, -3899,
     464,  3559, -3899,  3896,    99,   464, 48755,   464, 48755, -3899,
    3781,  3781, -3899,  3546,   393, -3899,   108,   220, -3899,  3238,
   -3899,  1022,  1022,   171,   333,   171, -3899,  3329,     1,  3916,
    3614,  3930, -3899, 11364,  3840,  3376, 48755,  1053, -3899, 56303,
   56303, 48755, -3899, -3899, -3899, -3899,  5369, -3899, -3899,    11,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899,  3969, -3899,  3347, -3899,  3356, -3899, -3899,  3711,  5665,
   -3899, -3899, -3899,  2569,   245, -3899, -3899, -3899,  1689,   245,
   -3899,   245, -3899,   332, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899,  3353, -3899,   765, -3899,  3364, -3899, -3899, 48755,  3359,
   -3899,  -183,   765,   765,   955,   955,  2374, 40578,  3479, -3899,
   -3899,   765,   332,  4001, -3899,   986,  3746, -3899,  2165,  2173,
    1374, -3899, -3899, -3899, -3899, -3899, -3899,  2199, -3899,  4012,
   -3899,   173,  3649,  3653, -3899, -3899, -3899, -3899, -3899,  3666,
   -3899,  3672,   464, 11364, -3899, 11364,  3407, -3899, -3899,  3836,
   48755, -3899, -3899, -3899, -3899, 11364, -3899, 55045, 55045, -3899,
   -3899, -3899, -3899,  4013, -3899, -3899, -3899,  3910, 55045, -3899,
    3906, -3899,     1, -3899, -3899, -3899, -3899, -3899, -3899, 25456,
   14614,  2308, -3899,  3411, -3899,  3412, -3899, -3899,   -72, -3899,
    -183,  -183, -3899, -3899, -3899, -3899, -3899,  2215, -3899, 40578,
   -3899, -3899,  4002,  4004,  3900,  4006,   986, -3899,  1405, -3899,
   -3899, -3899,  4010, -3899,  4014,  3413,  3414, -3899, -3899, -3899,
   -3899,  3473,  3934, -3899, -3899,   464,   464, -3899,    71, -3899,
   -3899,  3824,  3912, 11364,   464, 51900,  3419, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   55674, 11364, -3899,    11,  3969, -3899, -3899,  3918, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899,  2217, -3899, 15264, -3899,
   -3899, -3899, -3899, -3899, 40578, -3899,  3479, -3899,  3426,   333,
     333,  4026,   333, -3899,  4027,  4028,  1405, -3899, -3899, -3899,
   47497, 47497,  1022,  1022,  3456, 11364, 55045, -3899,  3925, -3899,
    3855,   464,  3796,  3429, -3899,  3427,   464,  3963, 56303, 56303,
    3625, -3899,  3356,  3628, -3899,  3412, -3899,  3443, -3899,  3184,
    2433, -3899, -3899,  3729, -3899, -3899,   333, -3899,   333,   333,
   -3899,  3450,  2227, -3899, -3899, -3899,    95, -3899,   464, 52529,
    4040, 48755, -3899,  3547, -3899, -3899, 11364,  3970, 41836, 53158,
    3461, -3899, -3899, -3899, -3899, 55045,  3892,  3896, -3899, 15264,
    3472, -3899, -3899,  3474,  3476, -3899, -3899, -3899, -3899, -3899,
   11364, -3899,  3972,  3573, -3899,  3478, -3899, 55045,   464, 55045,
   -3899, -3899,  3914,  3482,  1506, -3899,  3480, -3899, 55045, -3899,
    4080,  3746, -3899, -3899, -3899,  3729,   464,  4078, 55045, 48755,
   50013,  3981, 53787,  3945, 48755,  5665,  3947,  3948, -3899, -3899,
     333,  3915, -3899,  3583, -3899, 50642, -3899,  2230,  3698,  3519,
   -3899, -3899,  4019,  1874, -3899, -3899,  3782,  3498, 55045, 55045,
   -3899, -3899, -3899, -3899, 34288, -3899, -3899, -3899, -3899, -3899,
    1060,    38, 20390,  3665, 51271, 54416, -3899, -3899, -3899, 31141,
   -3899, -3899, -3899,  3955, -3899, 11364, -3899, -3899, -3899, -3899,
   -3899, 40578,  2229, -3899, -3899, 25456, -3899, 34288, -3899, -3899,
     464, -3899, -3899, 23561,  3500, -3899,   765, -3899, -3899, 25456,
   -3899, -3899, 14614, -3899, -3899
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2653,  1095,  2584,     0,     0,     0,     0,     0,     0,
    2586,   123,    63,  1718,  1838,  1839,  1622,  1650,     2,     0,
    1095,   269,   173,     0,    75,  1659,     0,  1901,     0,     0,
    1095,   483,     0,  1891,     0,     0,  1095,  1662,  1880,   246,
     173,  2586,     0,  1141,  2384,  1756,     0,     0,     0,  1739,
       0,     0,  1707,     0,     0,     0,     0,     3,     8,    19,
       0,    39,    24,    29,    14,    18,    13,    52,    46,    26,
      37,    10,    54,    55,    16,    43,    11,    12,    15,    35,
      42,    36,    38,    50,  1132,    22,    23,    30,    44,    59,
      20,    56,    53,    21,  1840,    25,    45,    40,    32,    60,
      33,    51,    34,    58,    28,    47,    27,     9,    17,    48,
      49,    41,    61,    31,    57,     0,   942,     0,     0,  1019,
       0,     0,     0,     0,   173,     0,   922,  2651,  2652,  2653,
    1097,  1096,     0,  2586,  2006,  1080,  1106,  2069,  2070,  2071,
    2072,  2073,  2074,  2075,  2077,  2076,  2020,  2078,  2080,  2079,
    2081,  2082,  2021,  2022,  2083,  2084,  2085,  2087,  2086,  2088,
    2023,  2024,  2089,  2090,  2091,  2092,  2093,  2025,  2026,  2094,
    2097,  2096,  2095,  2027,  2098,  2099,  2100,  2103,  2102,  2101,
    2028,  2104,  2029,  2105,  2106,  2107,  2108,  2109,  2110,  2111,
    2113,  2112,  2030,  2114,  2115,  2116,  2117,  2118,  2120,  2119,
    2121,  2122,  2123,  2031,  2124,  2125,  2126,  2127,  2128,  2129,
    2130,  2131,  2132,  2032,  2133,  2134,  2135,  2155,  2033,  2136,
    2139,  2138,  2137,  2140,  2141,  2142,  2144,  2143,  2145,  2146,
    2034,  2147,  2148,  2149,  2150,  2151,  2153,  2152,  2157,  2158,
    2159,  2035,  2036,  2154,  2156,  2363,  2160,  2162,  2161,  2163,
    2165,  2164,  2037,  2166,  2038,  2039,  2167,  2168,  2003,  2169,
    2004,  2171,  2173,  2174,  2170,  2175,  2180,  2040,  2172,  2176,
    2177,  2178,  2179,  2181,  2041,  2182,  2183,  2184,  2185,  2186,
    2187,  2188,  2189,  2190,  2191,  2213,  2202,  2204,  2195,  2197,
    2198,  2200,  2196,  2203,  2201,  2207,  2206,  2208,  2209,  2210,
    2211,  2212,  2205,  2193,  2199,  2194,  2214,  2215,  2192,  2216,
    2217,  2218,  2219,  2220,  2221,  2222,  2223,  2224,  2225,  2226,
    2228,  2227,  2229,  2230,  2231,  2232,  2233,  2234,  2236,  2235,
    2237,  2238,  2239,  2241,  2240,  2243,  2244,  2042,  2242,  2245,
    2246,  2247,  2248,  2249,  2250,  2043,  2044,  2045,  2251,  2252,
    2046,  2253,  2255,  2254,  2256,  2257,  2258,  2259,  2260,  2261,
    2262,  2047,  2048,  2263,  2264,  2265,  2266,  2267,  2268,  2269,
    2270,  2271,  2272,  2273,  2274,  2275,  2276,  2278,  2277,  2279,
    2280,  2281,  2282,  2283,  2284,  2285,  2049,  2286,  2050,  2287,
    2288,  2051,  2289,  2052,  2290,  2291,  2292,  2293,  2053,  2294,
    2295,  2296,  2298,  2299,  2297,  2300,  2054,  2301,  2302,  2303,
    2055,  2305,  2304,  2306,  2056,  2308,  2309,  2057,  2307,  2059,
    2310,  2311,  2058,  2060,  2312,  2313,  2314,  2315,  2316,  2318,
    2317,  2319,  2320,  2321,  2061,  2325,  2322,  2323,  2324,  2326,
    2062,  2327,  2328,  2329,  2330,  2331,  2333,  2332,  2334,  2335,
    2336,  2337,  2340,  2342,  2338,  2341,  2339,  2343,  2344,  2345,
    2346,  2347,  2350,  2351,  2352,  2353,  2354,  2355,  2356,  2357,
    2359,  2358,  2348,  2349,  2063,  2360,  2361,  2362,  2364,  2365,
    2367,  2366,  2064,  2065,  2368,  2369,  2068,  2370,  2371,  2372,
    2375,  2373,  2374,  2377,  2376,  2378,  2380,  2379,  2066,  2381,
    2067,  2382,  2383,   192,  2009,   175,  2010,  2019,     0,  2458,
    2457,  1064,  1081,  2587,  2588,   871,   578,   872,     0,     0,
     873,     0,   577,   870,   173,  2653,   128,     0,   574,   575,
       0,   864,   866,   867,   865,     0,     0,  1732,     0,  1648,
    1648,  1648,     0,     0,  1648,  1648,     0,  1651,  1648,   173,
    1648,     0,    68,  1847,   270,     0,  2495,     0,     0,     0,
    2002,     0,  1665,     0,  1902,  1903,     0,  1910,     0,  1911,
    1905,     0,  2458,  2452,  2455,     0,     0,     0,     0,     0,
     173,  1098,     0,  1716,     0,   236,   245,   247,   248,   244,
    2488,  2588,  2599,  1133,  1139,  1151,  2386,     0,  1818,   248,
    1051,  1034,  1051,  1740,  1737,     0,  2467,  2468,  2466,  1716,
    1904,  2710,     0,     0,     0,  2706,     0,  2711,     0,  1141,
       0,     0,     1,     5,     0,     0,  2150,  2036,  2255,  1831,
    1829,  1997,     0,   913,   943,     0,   918,     0,   916,  2015,
    2014,  2013,     0,   929,   928,   926,     0,   447,     0,     0,
    2662,     0,   920,  1078,  2585,     0,   194,     0,    77,     0,
       0,     0,  2591,     0,     0,     0,     0,   127,     0,     0,
       0,   124,  1166,  1166,  2653,  2655,  2657,   578,   576,     0,
     868,   869,     0,     0,  1736,  1735,  1734,     0,  1732,  2070,
    2020,  2082,     0,  1970,     0,     0,     0,  1420,     0,  2025,
       0,  2098,  2100,  2030,     0,     0,  1173,  1173,   737,     0,
       0,     0,  2122,  2123,  1976,     0,     0,     0,  1967,  1977,
    2036,  2162,  2163,     0,  1969,  2168,     0,     0,     0,     0,
    2186,  1974,     0,     0,  2223,  2225,     0,     0,  2229,  2230,
    2231,  2232,  1953,  1228,     0,   737,  1966,  1973,  2248,  1959,
    2256,  2261,  2262,     0,  2271,     0,     0,  2293,     0,  2299,
    2297,  2303,     0,     0,  2330,     0,     0,   737,  1952,  2350,
    2351,  2352,  2353,     0,  1968,  2063,  1975,     0,  2370,  1173,
     737,   737,     0,     0,     0,  2378,  2380,  2383,     0,     0,
       0,  2623,  1227,     0,  1385,     0,  1302,  1414,  1185,  1191,
    1205,     0,  1220,  1238,  1239,  1241,  1340,  1240,  1246,  1245,
    1623,  1963,  1244,  1243,  1964,  1965,  1237,  1987,  2009,  1986,
       0,     0,     0,     0,     0,     0,     0,     0,  1652,     0,
       0,  1634,  1648,    70,     0,     0,     0,  1999,  1529,  2470,
    2471,     0,    76,  1667,  1668,  1666,  1018,     0,  1900,     0,
    1914,     0,     0,     0,  1093,   493,   484,     0,     0,  1813,
       0,  1812,     0,  1892,  2600,     0,     0,  1069,  1670,  1717,
       0,  1669,  1888,  1886,     0,  1884,  1881,  1883,   237,     0,
       0,   267,     0,  2594,  2591,  2601,  2636,  2631,  2630,  2633,
    2634,  1157,  2635,  1156,  2632,  2629,  1166,  1152,  1154,  1155,
       0,   781,     0,     0,  2408,  2409,  2236,  2256,  2410,  2348,
       0,     0,  2429,  2385,  2394,  2390,     0,     0,   781,  1826,
    1826,     0,     0,  1826,     0,  1564,  1816,  1819,     0,  2412,
    1788,   862,   861,  1826,   860,  2413,  1812,     0,  1764,  1776,
       0,  1741,  1781,     0,  2414,     0,  1815,     0,  1826,  1826,
    1826,  1564,  1826,     0,  1757,     0,     0,     0,     0,   243,
    1056,  1055,  1030,  1052,  1053,     0,     0,  1033,  1035,  1036,
    1032,     0,  2723,  1018,  1958,  1957,  2007,  2707,  1956,  2715,
    2717,  2703,  2705,  2712,  1135,     0,  2605,     6,    62,     0,
       0,  1844,  2660,  2661,  2659,   797,     0,  1173,  2016,  2654,
     176,   927,     0,   448,   176,     0,     0,     0,     0,     0,
     449,   450,   382,   931,     0,   911,     0,     0,   923,     0,
    2662,     0,     0,  1108,  1110,  1109,  1126,   196,   193,   174,
       0,  1066,  1641,  1643,  1083,  2590,     0,     0,  2592,  2596,
    1226,  1225,     0,   121,   126,     0,     0,     0,  2562,   125,
    2556,  2658,  1166,  1166,  1166,  2650,     0,  2638,  2645,  2646,
    2649,  2648,  2647,  2644,     0,  2637,  2640,  2641,  2643,  2642,
    2662,  2656,     0,   874,   874,   874,     0,  1719,  1722,  1726,
    1730,  1733,     0,     0,  1534,  1259,  1534,  1534,  1534,  1421,
       0,     0,     0,     0,     0,     0,     0,     0,  1534,     0,
    1296,  1269,     0,  1297,     0,     0,     0,  1978,     0,     0,
       0,  2623,     0,     0,     0,     0,  1390,     0,     0,     0,
    2623,     0,     0,     0,     0,     0,  1416,  1418,  1986,  1534,
       0,     0,  1534,     0,     0,     0,     0,     0,  1178,   777,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1534,  1534,     0,     0,  1534,  1310,  1980,
       0,     0,     0,  1979,     0,     0,     0,  1972,  1971,  1954,
       0,  1313,  1315,  1314,     0,  1534,  1534,     0,     0,     0,
    1249,  1248,  1250,     0,     0,     0,     0,     0,     0,  1224,
    1223,  1222,  1221,     0,     0,     0,  1229,     0,  1230,  1231,
       0,  1232,  1233,  1234,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1251,     0,     0,     0,  1955,  1349,     0,
    1649,  1629,  1636,  1631,     0,  1652,  1632,  1640,   462,   461,
    1657,  1658,  1638,  1653,  1654,     0,  1637,  2554,  1633,     0,
    1624,     0,    69,     0,  1877,  1870,  1875,     0,     0,     0,
    1866,  1874,  1868,  1867,     0,     0,  1876,     0,  1869,  1873,
    1872,  1871,  1848,  1852,  1858,  1849,     0,     0,   268,   271,
     273,     0,   276,  2505,  2520,  2521,  2517,  2522,  2540,  2523,
    2527,     0,  2519,  2511,     0,  2526,     0,  2515,  2524,     0,
    2509,     0,  2525,  2530,  2541,  2513,  2518,  2496,     0,  2503,
    2507,  1530,  1531,     0,  2469,     0,  1998,     0,     0,  1116,
    1915,  1916,  1912,  2453,  2454,  1529,  2456,  2459,     0,   494,
       0,     0,   505,     0,     0,    65,    66,     0,     0,     0,
    1100,     0,  1099,  1103,     0,     0,     0,  1673,  1663,  1672,
    1455,  1887,  1889,     0,   235,   260,   255,   263,   257,   259,
     258,   264,   265,   266,   261,   256,   262,   249,     0,  2505,
       0,  2489,     0,  2595,     0,  2597,  2614,  1140,  2602,  1163,
    1142,  1162,     0,  1153,     0,  2388,     0,   780,     0,   783,
     785,  1692,  1693,   784,   793,     0,   782,     0,     0,     0,
    2415,     0,   789,   791,   790,  2424,   788,     0,     0,  2399,
    2420,  1822,     0,     0,  1796,  1787,     0,   578,     0,     0,
       0,     0,     0,     0,  1758,     0,     0,   621,     0,  1780,
    1565,  1820,  1821,  1826,     0,     0,  1826,     0,  1800,  1793,
    1816,     0,  1826,  1753,     0,     0,  1745,  1750,  1746,     0,
    1752,  1751,  1754,  1742,  1743,  1822,  1769,  1794,  1816,  1799,
    1798,  1797,  1779,  1786,     0,  1768,  1775,     0,  1784,  1816,
    1816,  1826,  1826,  1057,     0,  1040,  1041,     0,     0,  1738,
    1458,     0,     0,  2704,  2718,  2702,  2713,  2714,  2701,  1136,
    2606,  1134,  2607,     0,     7,     4,  1843,  1833,  1834,  1835,
    1836,  1837,  1832,  1830,  1845,  1846,   798,   797,   569,   572,
     571,     0,     0,  2018,     0,   919,     0,   436,   917,     0,
       0,   414,   393,   414,   451,     0,     0,   797,     0,     0,
     924,   921,  1079,     0,     0,   482,  1126,  1112,  1128,     0,
     197,   199,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    78,    79,   101,  1068,
    1067,     0,  1065,  1091,  1090,  1088,     0,  1089,  1087,  1082,
    1084,  1085,  2589,  2593,   579,   797,   424,     0,   385,     0,
       0,     0,     0,     0,   578,     0,     0,  2639,   110,   875,
       0,     0,     0,  1724,  1645,  1455,  1647,  1997,     0,     0,
       0,  1728,     0,     0,  1535,  1534,     0,  1399,     0,     0,
       0,     0,  1422,     0,     0,     0,     0,     0,     0,     0,
    1370,     0,  1399,  1174,     0,   738,  1320,     0,     0,     0,
       0,     0,     0,  1505,  1506,  1507,  1508,  1516,  1509,  1510,
    1511,  1518,  1523,  1512,  1513,  1519,  1520,  1521,  1514,  1522,
    1517,  1515,  1524,     0,  1504,     0,     0,  1528,  1525,  1527,
    1526,     0,  1391,  1383,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1534,     0,     0,     0,  1534,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1332,     0,     0,
       0,     0,     0,  1534,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1292,     0,  1989,  1988,     0,     0,
       0,   830,     0,  1253,     0,  1252,  1467,     0,  2608,  2624,
       0,  2415,  1386,  1388,     0,  1176,  1175,  1177,  1188,  1181,
    1186,  1179,  1183,     0,  1235,  2077,  1189,     0,     0,  1217,
    2623,  1543,  1218,  1203,  1208,  1209,     0,  1206,  1207,     0,
    1211,     0,  1210,  1214,  1215,  1216,  1219,     0,     0,     0,
       0,  1242,  1247,  1415,  1166,  1990,     0,  1626,  1639,  1814,
    1655,  1694,     0,  1020,     0,     0,    71,    73,  1863,  1860,
    1859,  1861,  1865,  1864,  1862,     0,  1878,  2122,  2350,  2353,
     280,     0,   253,   252,   254,   277,     0,     0,  2506,  2504,
    2538,  2537,  2542,     0,  2539,  2535,  2528,  2563,  2532,     0,
    2563,  2534,  2533,  2563,  2529,  2536,  2563,  2501,     0,  1533,
    2158,  2240,     0,  1536,  2473,  1660,  2722,     0,  1913,     0,
       0,     0,  1094,     0,  1166,   492,   491,   490,   489,     0,
     507,   487,   495,    67,     0,     0,  1895,  1600,  1601,  1597,
    1595,  1596,  1894,  1598,  1599,     0,     0,  1893,     0,     0,
       0,     0,  1071,  1671,     0,     0,  1644,  1456,  1890,  1885,
    1882,     0,     0,  2504,     0,  2501,  2598,  2616,  2615,  2603,
    1166,  1555,  1167,  1167,  1986,     0,     0,     0,  2431,     0,
    2426,  2425,     0,     0,     0,  2444,  2427,     0,     0,  2393,
    2432,  2433,  2436,     0,     0,     0,     0,     0,  2430,  2348,
    2395,  2396,  2401,  2391,     0,     0,  1824,  1827,  1828,     0,
       0,  1808,  1802,  1801,  1791,  1803,  1792,  1811,  1810,  1809,
    1766,  1765,  1575,  1576,  1574,  1568,  1569,  1573,  1572,  1761,
    1817,  1807,  1805,  1789,  1826,  1806,  1804,  1747,  1748,  1749,
       0,  1564,     0,  1824,  1795,  1826,  1816,     0,  1826,  1826,
    1783,  1785,     0,  1043,  1054,  1038,  1037,  1476,  1475,     0,
    1429,     0,  1431,  1428,  1427,  1426,     0,  1475,  2708,  2716,
    2720,     0,  1564,  2613,  2611,   570,  1694,  1694,     0,  2017,
       0,     0,     0,     0,     0,     0,     0,   177,   186,     0,
       0,   391,   392,  1694,   390,   437,   438,   441,   442,   443,
       0,     0,     0,     0,     0,     0,     0,     0,   130,   444,
    1694,  1694,   387,   415,   416,   419,   420,   421,   422,   423,
     383,     0,   388,     0,   932,  1016,  1694,  1016,     0,  1694,
    1694,  1016,  1694,     0,     0,  1694,  1694,     0,     0,  1694,
       0,     0,  1016,     0,  1694,     0,  1003,     0,     0,  1694,
    1694,  1694,  1694,  1694,  1016,     0,     0,  1694,   482,  1694,
       0,     0,  1026,     0,     0,  1694,  1694,  1694,  1694,     0,
       0,  1694,     0,  1694,   950,  1002,   582,   608,   609,   912,
     949,   951,   963,   478,     0,   981,  1005,  1006,  1004,  2663,
    2664,  2665,   934,  1115,  1107,  1114,  1111,  1126,  1124,  1113,
     857,   856,     0,  1127,   195,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1642,  1092,  1086,   122,   797,  1694,  1694,  1694,  1694,
     389,   425,   426,   429,   430,   431,   432,   435,   433,   434,
       0,     0,   401,     0,     0,  2557,     0,  2696,     0,     0,
       0,   175,   580,     0,     0,   876,     0,     0,     0,     0,
       0,  1720,     0,  2000,  1727,  1458,  1731,  1730,     0,  1316,
       0,  1363,     0,  1365,  1366,  1367,     0,     0,     0,     0,
       0,  1317,     0,  1267,  1318,  1319,     0,     0,     0,     0,
    1369,     0,   739,     0,     0,  1270,  1271,  1264,  1256,     0,
       0,  1342,     0,     0,  1272,     0,     0,     0,     0,     0,
    1343,  1417,     0,  1419,  1990,     0,  1375,  1324,  1277,     0,
    1373,     0,  1278,  1344,  1345,  1346,  1326,  1327,     0,  1348,
       0,  1328,     0,     0,  1331,     0,     0,  1280,  1379,  1377,
       0,     0,     0,     0,  1381,  1282,     0,     0,     0,  1281,
       0,     0,     0,     0,     0,     0,     0,  1284,     0,  1265,
    1378,  1380,  1334,     0,     0,     0,     0,     0,  1293,     0,
    2617,  1466,  2625,  1467,     0,     0,  2619,  2609,  2614,  2622,
    1257,     0,     0,  1991,  1182,  1187,  1180,  1184,  2623,     0,
       0,     0,     0,  1201,  1200,     0,     0,     0,  2623,  1543,
    1204,     0,     0,  1359,  1360,  1412,     0,  1630,  1627,  1656,
    1695,     0,  2555,  1022,  1021,  1635,  1020,    74,     0,  1857,
    1879,  1850,     0,   272,   281,   274,   278,   279,   275,  2531,
       0,  2512,     0,  2516,  2510,  2514,     0,     0,  2502,     0,
    2508,  2483,  2477,  2484,  2486,  2480,  2485,  2487,  2478,  2479,
    2474,  2481,  1537,  1566,     0,  1117,  1119,  1120,  1118,  1126,
       0,     0,  2462,  2463,  2461,  2460,   497,     0,  1586,  1587,
    1585,  1588,   506,  1589,     0,   518,     0,     0,     0,  1899,
    1898,  1897,  1896,     0,  1101,  1104,  1105,  1076,  1075,  1077,
    1070,  1072,  1073,   562,  1677,     0,     0,     0,  1683,  1664,
    1674,     0,     0,   250,     0,     0,     0,     0,     0,     0,
    1161,  1458,  1615,  1158,  1146,  1566,  1556,  1145,  1168,  1164,
       0,  2387,  2389,  2450,  2451,  2448,  2449,  2447,  2419,   796,
     795,   794,   792,     0,     0,     0,     0,  2438,  2439,     0,
       0,  2416,  2417,  2418,     0,  2422,  2398,  2399,  2400,     0,
    2421,  1823,     0,  1770,     0,  1790,     0,     0,  1763,     0,
    1782,  1744,  1772,  1762,  1536,  1816,  1759,  1760,     0,  1063,
       0,  1059,  1058,     0,  1031,  1045,     0,  1475,  1458,     0,
       0,  1452,  1477,     0,  1477,  1458,  1458,     0,  1458,  1455,
    1472,     0,     0,  2719,  1557,  2612,     0,     0,   915,   180,
     183,   181,     0,   182,     0,     0,   446,   445,     0,  1814,
     439,   134,   133,   135,   136,  1583,  1584,  1580,  1581,  1579,
    1582,   138,   137,   132,   930,     0,     0,     0,  1814,   417,
     394,   395,   398,   399,   400,     0,  1017,   905,  1095,   985,
       0,   660,   905,   853,   858,   858,   983,     0,     0,  1095,
       0,     0,     0,     0,     0,  1095,     0,     0,     0,  1694,
       0,   996,   945,     0,     0,     0,     0,     0,   997,     0,
       0,   946,  1694,     0,     0,     0,     0,     0,     0,  1095,
       0,     0,   480,     0,  1095,   482,  1029,  1028,  1027,     0,
    1095,  1095,     0,     0,     0,     0,   614,   615,   613,     0,
       0,   606,   583,   797,   947,   479,   948,   659,     0,  1023,
     656,   662,  1993,  2667,     0,   936,   938,     0,  1496,   198,
     102,   100,    82,  2005,    86,    88,    81,   106,  1593,  1594,
    1592,  1590,  1591,   107,    84,    85,    87,    91,    90,    92,
      93,    96,    97,    94,    89,    95,    83,    98,   108,   109,
      80,     0,     0,     0,     0,  1814,   427,     0,     0,  1694,
     384,   402,   403,   406,   407,   408,   409,   410,   413,   411,
     412,     0,  2558,  2560,     0,     0,   378,   377,     0,   139,
    2690,     0,     0,   659,   111,   478,   581,   584,   898,   900,
     899,   890,   889,   112,   115,   118,  1646,  1730,  1458,  1536,
    1998,  1536,     0,  1729,     0,     0,  1364,  1400,     0,  1423,
       0,  1261,   751,   751,   735,  1408,   731,   751,  1404,   735,
    1406,     0,     0,     0,     0,     0,  1371,  1368,     0,     0,
       0,     0,     0,  1394,     0,     0,     0,  1266,     0,  1354,
    1376,  1374,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1382,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   819,   825,
     828,   829,   831,   823,     0,  1336,  1254,  1166,  2626,  2628,
    1137,     0,  2618,  2620,   907,  1387,     0,  1198,  1194,     0,
    1192,  1542,  1213,  1212,     0,     0,     0,  1202,  1167,  1350,
    1166,     0,  1413,  1992,  1007,   460,   620,  1625,    72,  1853,
       0,     0,  2567,     0,  2566,     0,  2550,  2553,  1997,     0,
       0,     0,     0,     0,  2472,  1567,  1704,     0,  1126,  1130,
    2008,  1906,  2464,  2465,     0,   498,   499,   501,  1167,   515,
     493,     0,   485,   488,     0,   497,     0,  1074,  1151,     0,
    1696,  1681,  1688,  1682,     0,     0,     0,  1680,  1982,  1981,
    1988,  2601,     0,  1502,     0,     0,     0,     0,     0,     0,
    2604,  1536,  1536,  1609,     0,     0,  1143,  1148,  1144,  1147,
       0,  1165,  1172,  1171,  1983,  1990,  2428,     0,     0,     0,
       0,  2443,  2437,  2434,  2435,     0,  2397,  2403,  2402,  2405,
    2407,  1825,  1564,  1778,  1777,  1571,  1570,  1755,  1564,  1774,
    1826,     0,     0,     0,     0,     0,  1047,     0,     0,  2608,
    1470,     0,  1454,  1453,  1478,     0,  1458,  1477,  1477,     0,
    1434,  1433,  1708,  1711,     0,  1432,  1529,  1460,  1151,  2709,
    2721,     0,   619,   618,   185,   184,   190,   191,   452,   463,
     464,   440,   131,   453,   454,   418,     0,   396,   933,   661,
     906,   968,     0,     0,     0,   655,   905,   858,   874,   859,
     905,   905,  1012,  1013,     0,     0,   593,   590,   987,   602,
     966,   957,   967,   978,   980,     0,   592,   616,     0,     0,
     604,     0,   952,   994,   995,  1020,   587,     0,     0,   635,
     636,   634,   610,   617,  1014,  1015,   588,   589,   989,     0,
    1551,  1553,  1561,   595,   594,     0,   591,     0,   965,  1000,
     973,     0,   627,   625,   622,   624,   623,   626,   628,   629,
     630,   631,   632,   633,   605,   597,   596,   599,   598,   601,
     600,   603,   962,     0,  1016,  1016,   982,     0,   643,   644,
     646,   647,  1996,     0,  1025,   984,     0,   648,   657,   649,
       0,     0,     0,     0,     0,     0,     0,   144,     0,  1499,
       0,  1500,  1497,  1498,     0,   103,   105,   459,   458,   457,
     456,   428,     0,     0,     0,  1814,   404,  2559,     0,     0,
    2697,   381,   379,   380,     0,     0,   200,   641,   642,   640,
     639,     0,   467,     0,   465,     0,   477,     0,  1917,   797,
     585,     0,     0,     0,     0,  1536,  1555,  2001,  1723,     0,
    1294,  1424,     0,     0,   752,  1401,   805,     0,  1410,     0,
    1411,   733,   732,  1403,  1405,  1409,  1407,  1260,  1268,  1341,
    1263,  1262,     0,     0,     0,  1300,  1322,     0,  1301,     0,
    1392,     0,     0,  1274,     0,  1276,     0,     0,  1356,  1325,
    1347,  1303,  1329,     0,  1279,  1255,     0,  1304,     0,  1309,
    1307,     0,  1283,     0,     0,  1290,     0,  1288,     0,  1289,
       0,  1291,  1333,  1335,     0,     0,   830,   816,   817,   818,
       0,   820,   822,   824,     0,     0,  1468,  2627,  1138,     0,
       0,  1389,  1190,     0,  1199,  1196,     0,  1193,  1168,  1361,
    1351,  1628,  1009,  1008,  1855,     0,  1851,   289,   284,   292,
     286,   288,   287,   293,   294,   295,   296,   290,   285,   291,
     283,   282,  2564,     0,  2575,     0,     0,     0,     0,     0,
       0,  1538,     0,  1661,  1121,  1126,  1130,     0,  1122,  1917,
     502,     0,     0,     0,   522,     0,   520,   496,     0,  1102,
    1166,  1678,  1690,     0,  1698,     0,     0,  1675,  1685,     0,
       0,     0,  1684,   482,     0,   251,     0,  2494,     0,     0,
       0,  1566,  1544,     0,     0,  1621,     0,  1616,  1159,     0,
    1170,  1169,     0,  2446,  2445,  2441,  2440,  2442,  2423,     0,
       0,  1771,  1773,  1767,  1062,  1061,  1060,  1044,     0,     0,
    1049,  1039,  2614,  1529,  1462,  1458,  1430,  1458,  1441,     0,
       0,  1458,  1437,  1435,  1439,     0,  1536,     0,  1494,  1166,
    1985,  1558,  1561,   397,   970,     0,   905,   854,   874,   855,
       0,   874,   874,     0,     0,   956,     0,  1083,     0,   961,
     793,   611,   993,   992,     0,   612,     0,   954,     0,  1562,
    1563,  1554,   481,   953,   975,   959,  1878,   986,   659,  1024,
     835,   727,   676,   667,   751,   670,   669,   713,   735,   681,
     731,   729,   699,   731,   731,   706,   705,   723,   709,   689,
     805,   805,   688,   726,   805,   710,   708,   712,     0,   714,
     731,   719,   707,   711,   728,   704,   701,   725,   751,   735,
     735,   685,   724,   805,     0,   717,   751,   755,   687,   805,
     812,     0,     0,   751,   753,  1995,  2669,     0,  2671,     0,
     154,     0,     0,   935,     0,   147,   145,   156,     0,  1129,
       0,    99,     0,     0,   386,   455,   405,  2561,     0,   211,
    1166,     0,     0,   201,   203,   204,     0,     0,     0,   580,
    1919,  1918,   466,   565,   586,     0,     0,     0,  1730,  1725,
    1577,     0,  1425,     0,     0,     0,     0,   799,   810,   808,
     802,     0,   806,   807,  1402,     0,     0,  1372,     0,     0,
       0,  1395,     0,     0,     0,     0,     0,     0,     0,  1258,
       0,  1352,     0,     0,     0,     0,     0,     0,  1287,  1285,
    1286,   814,  1338,     0,   827,   821,   819,   826,     0,  1566,
    2608,   908,  1195,     0,  1362,  1011,  1010,     0,     0,  2565,
       0,  2500,  2552,  2551,  2568,  2568,  2568,  1703,  1702,     0,
    1701,  1705,  1123,  1131,     0,   500,   503,     0,   495,     0,
     519,     0,   486,   563,     0,     0,     0,  1699,  1687,  2605,
    1676,  1679,  1990,  1457,  1503,     0,  2491,  2492,  2490,  1150,
       0,  1539,  1620,  1617,     0,  1610,  1612,  1614,     0,  1984,
    2404,  2406,  1046,     0,     0,  1042,  1463,  1461,  1471,     0,
    1426,  1458,  1458,     0,  1426,     0,     0,     0,  1710,  1555,
    1712,  1459,  1491,  1473,     0,  1560,     0,     0,   969,     0,
       0,     0,     0,     0,     0,   999,     0,  1023,   958,   979,
    1001,     0,   755,  1095,  1552,   974,   976,  1071,     0,   645,
       0,   839,   675,   668,   686,   684,   740,   730,     0,   740,
     740,   695,   713,   690,     0,   805,   703,   694,   715,   718,
     720,   722,   740,     0,   805,   683,   682,   692,   679,   740,
     763,     0,     0,     0,     0,   759,     0,   833,     0,     0,
     663,   756,   758,     0,   766,     0,   716,   805,   672,   813,
     812,   674,   805,   812,   740,     0,   754,   740,     0,  2668,
       0,  2666,     0,   155,   143,     0,     0,   937,   939,     0,
       0,   940,  1125,  1501,   104,     0,     0,   214,   212,   213,
       0,   207,   209,   204,  2684,     0,  2691,     0,     0,  2689,
     468,   470,   478,   566,     0,     0,  1561,   903,     0,     0,
       0,  1721,  1295,   749,   747,   750,   748,   801,   800,   804,
       0,   803,   812,   736,     0,  1298,  1299,  1323,     0,  1393,
    1384,  1321,     0,  1275,  1353,     0,     0,  1330,  1305,  1308,
    1306,  1311,  1312,     0,  1337,     0,  1158,  1158,   637,  2621,
    1197,  1856,  1854,     0,     0,  2573,  2573,  2573,  2482,     0,
       0,     0,  1166,   508,     0,   525,   524,   521,  1566,  1689,
    1691,  1697,  1686,  2493,     0,  1540,  1555,   786,  1613,     0,
    1160,  1048,     0,     0,  1442,     0,  1446,  1451,  1447,     0,
    1438,  1436,     0,  1577,  1495,     0,  1566,  1561,   972,     0,
     658,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   998,  1960,   988,   482,   990,   955,     0,   960,   607,
       0,   838,     0,   843,   744,   745,   746,   696,   741,   743,
       0,   698,   666,   691,   721,   697,     0,   693,   680,   769,
     770,   772,   771,   768,   778,   761,   779,     0,     0,   773,
     774,   775,   757,   765,   767,   760,   671,   673,   677,   678,
     664,     0,   665,  1994,  2670,  2678,     0,  2680,  2673,   141,
     146,   157,   158,   925,   129,  2688,  2698,   211,     0,     0,
     152,     0,   202,   793,   205,  2605,  1917,     0,   473,   877,
       0,   902,     0,   879,   881,  1578,   811,   809,     0,  1396,
    1561,     0,  1355,  1357,   815,     0,  1469,   638,  2576,     0,
       0,  2572,  2570,     0,  2571,  2569,  2543,     0,  2498,  2499,
    2497,  1700,     0,     0,     0,   516,     0,     0,   550,   564,
    1548,  1561,     0,  1566,     0,  1618,  1611,  1050,  1464,     0,
       0,     0,     0,     0,  1709,  1483,  1484,     0,     0,  1489,
    1493,  1474,  1559,   971,     0,     0,   877,     0,     0,  1962,
    1961,   964,  1023,     0,   836,     0,   840,   841,   842,     0,
     834,   742,     0,   909,     0,   762,   764,  1141,     0,     0,
    2676,     0,  2672,  2601,   148,   941,   317,   178,   208,     0,
       0,   144,   153,  2692,   776,   471,   469,     0,  2601,     0,
    1694,   113,   878,   894,   893,   883,  1561,     0,     0,   116,
     880,   896,   887,   119,   882,   895,   885,   734,     0,  1398,
    1273,  1339,  2549,  2548,  2547,  2544,     0,     0,     0,     0,
       0,     0,  2574,  2578,     0,  1455,  1167,     0,   509,     0,
     512,   514,   528,     0,  1694,     0,     0,  1694,  1694,  1694,
    1694,   543,   551,   553,     0,  1549,  1550,     0,  1545,  1547,
    1541,  1602,   787,  1920,  2608,  1443,     0,  1448,     0,  1440,
    1479,  1479,  1490,     0,   877,   650,   879,   881,   991,     0,
     837,     0,     0,   805,     0,   805,  2679,     0,  2605,     0,
       0,     0,  2674,     0,   150,   343,     0,   329,   315,     0,
       0,     0,   319,   159,   162,   160,     0,   161,   167,     0,
     168,   169,   170,   171,   172,   163,   341,   342,   166,   164,
     165,     0,  2011,     0,  2012,  2699,   210,  1166,   156,     0,
     475,   474,   892,     0,  1007,   884,   901,   904,     0,  1007,
     888,  1007,   886,  1561,  2545,  2579,  2582,  2580,  2581,  2583,
    2577,  1706,  1714,     0,  1907,     0,   517,   510,     0,     0,
     526,     0,  1694,  1694,     0,     0,     0,     0,     0,   523,
     552,  1694,  1561,     0,  1149,     0,  1928,  1465,     0,     0,
       0,  1487,  1485,   654,   653,   651,   652,     0,   849,     0,
     848,     0,   845,   844,   700,   910,   702,  2677,  2675,     0,
    2681,     0,   149,     0,   142,     0,     0,   328,   331,     0,
       0,   334,   324,   323,   325,     0,   318,   317,   317,   371,
     322,   368,   367,   360,   188,   187,   179,     0,   317,  2685,
       0,  2693,  2605,   891,   114,   897,   117,   120,  1397,     0,
       0,   786,   504,   516,   513,   536,   529,   532,     0,   561,
       0,     0,   557,   558,   556,   554,   547,     0,   545,     0,
    1546,  1603,     0,     0,     0,     0,  1921,  1923,     0,  1619,
    1445,  1450,     0,  1480,     0,     0,     0,   977,   851,   852,
     850,     0,     0,  2682,  2683,   151,   344,   355,   358,   350,
     330,     0,     0,     0,   320,   317,     0,   304,   302,   303,
     309,   310,   311,   312,   313,   314,   305,   308,   306,   307,
     317,     0,   219,     0,     0,   189,  2700,     0,   158,   178,
     476,  1713,  1715,  1908,   511,   536,     0,   534,     0,   530,
     527,   531,   559,   560,     0,   544,     0,   555,     0,     0,
       0,     0,     0,  1922,     0,     0,  1929,  1931,  1482,  1481,
    1496,     0,     0,     0,     0,     0,   317,   351,     0,   326,
       0,   335,     0,     0,   217,   374,   372,   215,   362,   362,
       0,   140,  2694,  1934,   533,     0,   541,   537,   539,   542,
     550,   549,   546,  1605,  1926,  1927,     0,  1924,     0,     0,
    1930,     0,     0,   847,   846,   352,   358,   348,   356,   317,
       0,     0,   316,     0,   370,   218,     0,     0,     0,   317,
       0,   361,   363,   365,  2686,   317,     0,  1920,   535,     0,
       0,   548,  1608,     0,  1606,  1925,  1933,  1932,  1488,  1486,
       0,   349,     0,     0,   347,   327,   332,   317,   375,   317,
     229,   228,     0,   221,   297,   369,     0,   220,   317,  2695,
       0,  1928,   540,   538,  1604,     0,   353,     0,   317,     0,
     317,     0,   317,     0,     0,     0,     0,     0,   216,  2687,
       0,  1936,  1607,     0,   345,   317,   333,   338,     0,     0,
     224,   298,   299,     0,   226,  1935,     0,  1940,   317,   317,
     334,   337,   376,   373,     0,   300,   222,   223,   234,   233,
       0,     0,     0,  1947,   317,   317,   339,   242,   240,   317,
     230,   238,   232,     0,   239,     0,   227,  1938,  1939,  1937,
    1942,     0,     0,  1944,  1945,     0,  1909,     0,   225,   241,
     301,  1946,  1941,     0,  1948,  1950,     0,   231,  1943,     0,
    1166,  1949,     0,  1167,  1951
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3899, -3899, -3899, -3899, -3899, -1868, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899,  1795, -3899, -3899, -3899, -3899, -3899,
    1994, -3899,   669, -1881, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899,   666,  1591,  3485, -3899,   404,
   -3899,   110, -3899, -3899, -3899, -3274,   -25,  -216, -3899, -3899,
     334,    24,  3166,  -210, -3898, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899,   418,   415, -3899, -3899,   236, -3899,
   -3899, -1355, -3899, -3899, -3899, -3899, -3899, -3899, -3899,  -413,
    -368,  1950, -3899, -3899, -3899,  4130, -3899,  3578, -3899, -1788,
    2287, -3899, -3899, -3899, -3899, -3899,  2364, -1724, -3899, -3899,
   -3899,  1328, -3899, -3899, -3899, -3899,  -765,   135, -3899,   136,
   -3899,   137, -3899,   139, -3899,   141,   143,   144,   145, -3899,
     148, -3899, -3899,  -366, -3899, -3899, -3899, -3899,   150, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899,  -261, -3899, -3899,  -151,
   -3899, -3899,  -258,   155, -3899,  -227,   158, -3899,   160, -3899,
    -167, -3899,  -165, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899,  3168, -3899, -3899, -3899,
   -1959, -3899, -3899, -2209,  2687, -3899, -1741, -3899, -3899, -1931,
   -3899, -3899, -1757,   937, -3899, -3899,   854,   729, -3899, -1438,
   -1961, -1948, -3899, -3899, -3899, -2068, -2064, -1423, -1415, -2382,
   -3899, -3899, -3899,   265, -3899, -3899, -2633,  2103,  2690, -3899,
   -2039, -3899, -3899,  1163, -3899, -3899,  1340,   631,  1337, -3899,
     932,  2893, -1242, -3899, -3899, -3899, -3899, -3899, -3899,     7,
     243,   -75, -3899, -3435,   638, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -2664, -3899, -3899, -3899,  -249, -3899, -3899,
    -164, -3899, -3899,  -209, -3899,   121, -2374, -3899, -3899, -3899,
   -3899,  2656, -1372, -3899,  3708, -3899,  -572,   739,  2134, -2505,
   -1449, -3899,  -900,  -899, -2553, -3899, -3899, -3899, -1938,  1113,
    1516, -3899,   836,  2135, -1962, -3899,  1595, -3899, -3899,   860,
   -3899, -2840, -3899, -3899, -3899,   816, -3899,   822, -3899, -3899,
   -3899, -1402,   786, -2616,  1373,  -436, -3899,   364, -2453, -2620,
   -3899,   592, -3899,   544, -3592, -3382, -3899,  -592, -2158, -2478,
     -45, -3899, -3899,   556, -3220,  1722, -3899, -3899, -3899, -3258,
   -1713,  1453, -3899, -3899,  1030, -3899, -1351,  1028, -3899, -3899,
   -3899,  1037, -3899,   132, -3899, -3899, -3899, -3899, -2900, -3899,
   -3899, -1510, -2357, -3899, -3899,    12, -3899,  3736,  3740,  4264,
    4265, -1033, -2757, -2542,   142,   140, -3899, -3899, -3899,  2681,
   -1241,   219,   212,   209,  2088,  -521,   338, -2469, -3899,   394,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899,  2178, -1497, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -2479, -2482, -3899, -3899,
    1646, -3899, -3899, -3899, -1955, -1477, -1474, -1950,  -520, -2227,
   -3422, -3899, -3899, -3899, -3899, -3899, -3899,  2814, -3899, -3899,
   -3899, -3899, -3899,  3692, -3899,  2821, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899,   629,  1866, -3899, -3899, -3899, -3899, -3899,
   -3899,   912,  2719, -3899, -3899, -3899,   -11, -3899, -3899, -3899,
   -3899,  2422, -3899, -3899, -3899, -3899,  2770, -3899, -3899, -3899,
   -3899, -3899, -3899,  1438, -3899,  1908, -3899, -1484, -3899, -3899,
    1020,  -986,  1859,  3690,  1998, -3899, -3899,  -611, -3899, -3899,
   -3899, -1688, -1409, -3899,  3420, -1301, -2638,  2411,  -125, -1874,
    1066,   580,  3627, -3899, -1142, -1059, -3899, -3899,  -661, -3899,
   -3899, -3899,  -624, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899,  1475, -3899, -3899, -3899, -3899, -1218,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899,  1375, -3899,  2090,
   -3899,  -511, -3899,  3196, -3899, -3899, -3899, -2399, -2013,  1794,
     964, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -1581, -3899, -2448, -3899, -3899, -3899, -3899, -3899,  2008, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -1848, -3899, -1986,   194,
   -3899,   313, -3899, -3899, -3899, -3899, -3899, -3899, -3899,   -84,
     847,   -83, -2679, -1087,  1767, -3899, -3899, -1287,  3239, -2380,
   -3899, -3899, -3899,  1990, -3899, -3899, -3899, -3899, -3899,   933,
   -2987,  2842, -3899, -3899, -3240,  -907, -2332,  -877, -3899, -2421,
     480, -1830, -1816,  -663, -1323, -1316, -3899, -3899, -3899, -3899,
    -179, -3899, -3899, -3899,   499,  1886, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899,  -579,  -817, -3899,
   -3899,  2140,  2487, -3899,  3107, -3899, -1052,  3354, -3899, -3899,
    3355, -3899, -3899, -3899, -3899,  3026,  3003,  1952, -3899, -3899,
   -2255, -3899, -3899,  1914, -3899,   753,  -896, -1817,  1046, -3899,
   -3899,  1048, -3302, -3899, -3899,  3366, -3899, -3899, -3899,   988,
   -3899,    55,  3748,  3368, -3899, -3899, -3899, -3899, -3899, -3899,
    2752, -1049,  3671, -3899, -3899, -3899, -3899, -3899, -3899,  2391,
   -3899, -3899, -3899, -3899, -3899, -3899,  2938,  3767,  -595, -1349,
   -3899,  -755,  2911,  2396,  -866, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
    2562,   966, -3899, -3899, -3899,  3015, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899,  1084,  -103, -3899,    50,  -131, -3899,
     -23, -3899, -3899, -3899, -3899, -3899,  -212, -3899, -3899,  -215,
   -3899,  -984, -1389,   681, -1244, -2106, -3899,  1077,  3008, -2706,
    -687, -1156, -1158, -2043,   253, -3899, -3899,  2890,  1413,   127,
    -423,  -389,    -6, -2461,  -110,  -575, -3899,  1044, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,  1902, -3899,
   -3899, -3899,  1052, -3899,  3803, -3899,  2660, -1362,  3809, -3899,
    -576,  2479,  1912,  1930, -3899, -3899,  1938, -1835, -3899, -3899,
   -3899,   159, -3899,  2552, -3899, -3899, -3899, -3899, -3899, -3899,
   -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
    2519,  3511,  3048, -3899,  2577, -3899, -3899, -3899, -3899, -3899,
     330, -3899,    34, -3899, -2725,  2829,   299, -3899,  1147,  -617,
    -865, -3899, -3899,   331, -3899, -3899,  1734,  3831,  3540, -3899,
   -3899, -3899, -3899, -3899, -2829,  -871, -3899, -3461, -2889, -1703,
   -3899, -3899, -2221, -3057, -3899, -3899, -1045, -3899, -3899, -3899,
   -3899, -2105, -3899, -3899, -3899,   138,  3903,  3904, -3899, -3899,
    -226, -3899,  -435, -3899, -3899, -3899, -3899, -3899, -3899, -3899,
     387,   699, -3899, -3899,  3753, -3899, -3899, -3899, -3899,  3761,
   -3899, -3899, -3899, -3899, -3899,  3762, -3899, -3899, -3899, -3899,
   -3899,  1690, -3899, -3899, -3899, -3899, -3899, -3899, -3899, -3899
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    56,   624,  1495,    57,    58,    59,    60,    61,  1335,
      62,   833,  1252,  1796,  1797,    63,   561,    64,  1030,  1566,
    1567,  3114,  3115,  1568,    65,  2192,  3151,  4194,  3152,  4199,
    3153,  4201,  1585,   525,   526,  2037,  2038,  1055,  3135,  3473,
    4044,  3477,  4154,  4264,  4051,  2655,  3741,  4045,  4046,  4163,
     556,  2190,  1515,  4185,  2017,  4286,  2018,    66,   656,  1028,
    1539,  1540,  3492,  3493,  3758,  3494,  3750,  3751,  3752,  3753,
    4469,  4355,  4427,  4470,  4525,  4554,  4560,  4502,  4569,  4570,
    4571,  4558,   879,  4572,    67,   587,   588,   881,  1367,  1810,
    1368,    68,    69,   555,  1278,  1279,  1280,  1281,  2368,  1811,
    2363,  2364,  3270,  4503,  4556,  4575,  4356,  4357,  4271,  4358,
    4166,  4359,  4275,  4360,  4169,  4361,  4362,  4363,  4364,  4461,
    4365,  4270,  4495,  4352,  4353,  4463,  4537,  4551,  4366,  4176,
    4265,  4414,  4177,  4266,  4456,  4348,  4457,  4490,  4533,  4349,
    4415,  4493,  4418,  4367,  4373,  4471,  4368,  4374,  4369,  4181,
    4282,  4372,  4280,  4371,  4467,  4466,  4521,  2718,  3134,   643,
     644,   667,  2182,   645,  1044,  1001,  1517,  2050,  2051,  2570,
    2571,  2700,  2701,  2702,  2042,  2043,  2044,  2170,  2171,  2172,
    2024,  2025,  2026,  1521,  2021,  2022,   646,  1002,  1012,  2045,
    2046,  2047,  2706,  2174,  2175,  2176,  2177,  1240,  1241,  2988,
    2724,  3144,  3945,  3502,  4058,  4292,  3145,  3146,  2645,  3055,
    2128,    70,   576,   856,  1332,  2416,  1333,  2418,  2874,  2875,
    2876,  1855,  1856,  3823,  1860,  2415,  3985,  4303,  4099,  4100,
    2878,  4098,  2882,  3295,  3296,  3589,  3825,  3988,  4308,  4219,
    4390,  4306,  4386,  4307,  4388,  4480,  4437,  4438,  4229,  4317,
    4318,  4394,  4440,  4111,  4112,  4113,  2438,  2888,  3828,  3764,
    2164,  1507,  1508,   527,   528,   529,   664,  2725,  2105,  2726,
    2727,  3083,  2107,  2108,  2845,  1426,  3074,  3042,  3806,  3141,
    3087,  3088,  3089,  3090,  3091,  3097,  3005,  2580,  2581,  2650,
    3100,  3943,  3678,  3693,  3458,  3459,  3460,  3461,  3462,  3463,
    3464,  3170,  3171,  3168,  1103,  3887,  3888,  3889,  3164,  3165,
    3727,  3710,  3711,  3712,  3944,   796,  3905,  3521,  1393,  1394,
    3995,  1404,  1405,  2470,  1910,  2471,  1511,  3522,  3523,  3524,
    3721,  3225,  3803,  3231,  3232,  3233,  2808,  2809,  2810,  2811,
    2812,  2307,  3713,  3099,  3671,  3880,  3883,  4030,  4252,  2582,
    3006,  2583,  3010,   953,   530,  3714,   532,   533,   534,  2584,
    2585,  1599,  1600,  4061,  4069,  4073,  4062,  4074,  4070,  4063,
    4064,  4065,  4076,  4072,  2731,  3765,  3766,  2999,  3241,  4032,
      71,  1527,   995,  1004,  1000,  1020,   650,  2122,  1013,  2656,
    3107,  3933,   633,  2109,  3663,  3387,  3667,  2110,  3021,  2111,
    3374,  3648,  2112,  3404,  3665,  3877,  3022,  3023,  2113,  2114,
    2115,  3386,  3396,  4022,  3251,  3252,  3253,  2586,   125,  2355,
    3095,  2629,    72,  1473,    73,   967,   968,   969,  2514,  2515,
    2956,  3350,  3625,   962,   963,   964,  1983,  2512,    74,   659,
    1572,    75,  1345,  2430,  2431,  2432,    76,  1021,    77,    78,
     660,  1579,  1580,  1581,    79,  1328,   132,    80,   866,  1340,
    1342,  1343,    81,   655,  1022,  1023,  1024,  1025,  2124,    82,
    1847,  2395,  2396,  2397,  2398,  1536,  2657,  1537,  1538,  2133,
    3288,    83,    84,   621,  2315,   593,   885,   594,   595,  1901,
    2453,  3807,   896,   897,   898,  2916,  1380,  1381,  1382,  2458,
    2921,  1100,   797,   798,   799,   800,  1194,  1195,  3715,   801,
    1204,  1757,   802,   803,   804,   805,   806,   807,  1784,  3197,
    3198,  3541,  2342,  2343,  2344,   808,  2229,  3182,  2243,   809,
    1187,  1742,  1673,  3533,  3190,  3788,  3959,  1616,  2212,  2761,
    2841,  2309,  1125,  1126,  1090,  2219,  1622,  1990,  1991,  1992,
    1993,  1994,  3636,  3635,  3637,  3999,  3845,  4001,  3849,  2526,
    1886,  1887,  1995,  1996,  2958,  3843,  4124,  2310,  2311,  2312,
    3559,  2959,  3355,  2977,  2978,  3856,  2517,  1997,  2965,  4241,
    4008,  4009,  4336,  4335,  4010,  3854,  3855,  3641,  3642,  3110,
    3111,  3112,  2902,  1663,  1664,  1671,  1313,  1314,  1617,  2393,
    2863,  3836,  3992,  2333,  3611,  3990,  4118,  2118,  3050,  3051,
    2455,  2456,  2981,  3371,  3401,  1429,  3808,  2865,  1955,  1956,
    3771,  4559,  2813,  2673,  2989,  2413,  1874,  4234,  4398,  4483,
    4484,  3325,  3326,  3615,  3616,  2457,  2913,  3327,  3837,  4123,
      85,   538,    86,  1794,  2348,  2844,  1249,  2360,  1032,  1347,
    1603,  1604,   821,   551,  1242,  1243,  1244,    87,   562,  2394,
      88,   583,  1884,   846,   870,  1348,  1349,  2439,  2889,  2896,
    2440,  2901,  3599,  2891,  3301,  3302,  2350,  2351,  2892,  3304,
    3596,  3579,  3580,  3283,  3820,    89,   609,  3366,  2972,  2973,
    4211,  4212,   871,    90,   537,  1077,  2739,  1609,  2200,  1078,
    1079,  2203,   687,   688,    91,   971,   604,  1452,  1453,  1454,
    1971,    92,   598,   954,  2942,  2948,  1950,   862,  1245,  1433,
     957,  1434,  1936,  2493,  1414,    93,   991,   990,  1502,    94,
     629,  1503,    95,   834,  1272,  1806,  2849,  3256,  3567,  1273,
    1274,  2361,    96,   584,   876,   877,  1352,  1889,    97,   578,
     863,  1877,  1866,    98,   566,    99,   100,   850,  3289,  4301,
    4433,   570,  1849,  1322,  3503,  4236,  4326,  4327,  4329,  4406,
    4407,  4477,  4547,  4579,  4563,  4582,  4583,  4586,  4594,  4595,
     811,   977,   812,  3871,   813,   814,   815,  2897,  2898,  3372,
     816,  2899,   817,  3000,  1033,  1606,   559,   504,  2662,   640,
     978,  2871,   819,  4183,   998,  1048,   506,   507,   101,   597,
     900,  1384,   913,  1409,  1399,  1408,  1930,  2487,  1933,  2488,
    2489,  3339,  2938,  3340,  2939,   958,  1926,  1385,  2940,  1934,
    1386,  1919,  1920,  1921,  1922,  2932,  1916,  2468,   102,   573,
     853,   511,  1326,  1327,  2404,   103,   608,   104,  1315,  1843,
    1844,  2390,  2862,  2391,   105,   882,  1371,   106,   836,  1307,
    2379,  1308,  1819,  1309,  1310,  1833,  1827,  1836,  1830,  4086,
    3975,  3976,  2859,  1248,  1049,  1050,  2371,  2853,  2854,  3815,
    3978,  3571,  4092,  4093,   107,   133,   514,   662,  1039,  1374,
     108,   109,   110,   111,  1377,  1490,  2449,  1491,  2316,  1492,
    1493,  2004,  1899,  1738,  1739,  3239,  1184,  1185,  2319,  2817,
    2818,   899,   671,  1065,  1057,   126,   127,   128,   674,   675,
     129,  1017,  1018,  2653,  3103,  3467,  3731,  3732,  3927,  4043,
    4039,  4040,  4037,  4042,  1059,  3939,  4377,  4508,  1060,  1061,
    3136,  3941,  4189,  4379,  4475,  1062,  2715,  3489,  4047,  4288,
     112,   979,   618,  1488,  1483,  1485,  2000,  2533,   113,   114
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     505,   651,  1042,   956,  1497,   911,   952,  1504,   984,   553,
    1395,  1398,   642,   552,  1378,  1872,  1726,   560,  1725,   575,
    1410,   916,  1873,   531,  2201,   582,   577,   810,  2132,  2459,
     503,  1611,  1813,   589,  1678,  2317,   592,  2461,  1850,  1957,
     589,  1601,  1602,  2412,  1462,  1127,  1931,   610,  1430,  2622,
    2116,  2687,  2129,  2117,  1415,  1748,  3036,  1424,  1812,  2983,
     999,  2864,  1756,  2895,  2762,  3640,  1642,  1438,  1085,  2764,
    3354,  2651,  3312,  1014,  1430,  2945,  2946,  2970,  2106,  2027,
    1031,  1034,  1459,  1460,  1461,  1700,  1463,  2362,   631,  1858,
    2573,  1964,  3148,  2579,  2028,  1509,  1510,  2823,  2048,  2490,
    2048,  2511,  2029,  2574,  2443,  1072,  2049,  2588,  2049,  1975,
     634,  2592,   505,  3008,  2707,   505,   641,   647,  2708,  2961,
    1978,  1979,  2607,  2918,  2949,  3032,  3719,  2971,  3037,  2847,
    3274,   135,  3645,  3166,  2618,  2005,  1311,  3173,  3832,  1222,
    1189,  1190,   636,  3175,  2304,   638,  1758,  1759,  2173,  2530,
    1762,  1763,  1764,  1765,  1479,  1767,  1768,  1770,  1772,  1773,
    1774,  1775,  1776,  2178,  1180,  1181,  1182,  1853,   512,  3510,
    3660,  2179,  3681,  3686,  2040,  2183,  3687,  1223,  3778,  3236,
    3688,  3317,  3560,  4085,  2993,  2994,  4059,  1864,   574,  2536,
    2537,  1790,  2741,  3517,   581,  3697,  1189,  1190,  1464,  3737,
    1052,  3718,  3335,   571,  2561,  3518,  2548,  2819,  1189,  1190,
     607,  1834,  3859,  2454,  2353,  3969,   918,   902,  2217,  3519,
    4416,  2704,  3150,  2566,  2567,   661,  3254,  1875,  3011,  3104,
    1905,   918,   902,  3383,  2705,  3873,  2353,  1058,  1066,  2587,
    2696,  1412,  2590,  2591,  4416,  2593,  4389,  3227,  2596,  2597,
    1831,  3380,  2600,  2626,  1311,  1247,  2056,  2609,  1224,  1456,
    3457,   115,  2613,  2614,  2615,  2616,  2617,   652,  2550, -2610,
    2621, -1532,  2623,  2376,  3002,  1312,   558,  2496,  2632,  2633,
    2634,  2635,  1320,  3500,  2639,   839,  2641,  4285,   564,  1486,
    1341,   653,   965,  3830,  3814,  4277,  2433,  4339,  4059,   676,
    1189,  1190,  2569,  3172,  1189,  1190,  1053,  2661,  4577,  2664,
    2665,  3119,  3120,  1573,  1614,  2675,  2676,  2966,  2451,  2019,
     567, -2546,  3904,  1506,  2684,  2685,  1317,  3471,  2967,  2689,
    1189,  1190,  1189,  1190,  1189,  1190,  1189,  1190,  1189,  1190,
    3002,  1614,  1428,  1035,  1189,  1190,   515,   630,  1913,  2691,
    2692,  2693,  2694,  3399,  -914,  1614,  3228,  1329,   868,  3156,
    1330,  3158,  4060,  1189,  1190,  2452, -2025, -2610,  1506,   974,
     134,  1506,  1107,  1914,   590,   134,   117,  2366,  1471, -2610,
    3131,  2023,  1189,  1190,  1167,  2929,  1189,  1190,  1227,  2305,
    2716,  1594,  2627,  1312,  1189,  1190,  3469,  1614,  1431,  -567,
   -1730,  3970,  -568,  2130,  3323,  3352,  2930,  4141,  2806,   666,
     136,  1016,  2717,  1189,  1190,  1189,  1190,  1189,  1190,  1189,
    1190,  1595,   508,  1641,  1189,  1190,   606,  3893,   600,  2131,
    1574,  2435,  2436,  2943,  1575,  2807,  3897,  1127,  2912,   568,
    2931,  1615,  1532,  3470, -1730,  1576,  1189,  1190,  1432,  1071,
    2202,   842,  2001,  1480,  4278, -2475,  1354,  4186,   648,  3916,
    3517,  3353,  3400,  2041,  3918,  1108,  3003,  1472,  1630,  3306,
    3472,  4059,  3518,  1054,  4060,  1334,  2814, -2610,  2367,  2020,
    1189,  1190,  1685,  1321,  4055,  2377,  3519,  3132,  1435,  1487,
    1907,  1441,  3126,  1189,  1190,   966,  1590,  1998,   918,   902,
    4578,  1191,  3501,  2001,  1192,  1927,  1331,  1189,  1190,  2798,
     601,  2281,  3208,   641, -2662,   647,   869,  3981,  3358, -1532,
    1189,  1190,  2081,  2968,  1689,  4035,  3951,  1189,  1190,  1189,
    1190,  3321,  3322,  1915,  4285,  4340,   824,  3378,  2969,  1753,
     647,  3381,  3382, -2476,  2462,  3014,   975,  1056,  1064,  3018,
    3390,   837,  3574,  3575,  3576,   641,  3662,   847,  2497,  1189,
    1190,  1168,  2606,  3034,  3035,  1225,  1457,  1959, -2475,  1191,
    1962,  3384,  1192,   864,  4385,  3048,  1966,  1577,  1189,  1190,
    1189,  1190,  1625,  1626,  1761,  1531,  3058,  2027, -2165,  1814,
    1467,   912,  1376,  3606,  3607,  3608,  1413,  4291,  1053,   972,
    4138,  1782,  2028,  1666,  2651,  1980,  1981,  1509,  1510,  2573,
    2029,  2997,  1680,  2572,  2354,  3105,  2003,  4012,   565,   988,
    2048,  3651,  2574,  2378,  1693,  1694,  1695,  2504,  2049,   641,
     670,  1003,  1699,  2707,  4279,  1597,  2354,  2708,   840,  3307,
    3096,  3324,   641,   631,  3504,  2911,  1036,  4060,  1813,   631,
    3379,  1029,  3853,   631,   631, -1532, -2476,  2106,  1043,  1003,
    3255,  1191,  3593,   641,  1192,  1191,  4052,  2040,  1192,  2960,
    1793,  3809,  1578,  1073,  1812,  1832,  1074,  1075,  1189,  1190,
    2651,  1080,  3229,  3004,  3973,  1509,  1510,  4258,  1906, -2025,
    2218,  1191,  4347,  1191,  1192,  1191,  1192,  1191,  1192,  1191,
    1192,  2979,  1192,  1016,  4247,  1191,  3336,  2334,  1192,  3969,
     832,   572,  1977,  3237,   510,  2331,  4455,  1237,  2337,  1835,
    4079,  2340,  1865,  4054,  1191,  3155,  1128,  1192,  1189,  1190,
    3689,  3643,  4068,  2173,   854,  1189,  1190,  2349,  3163,  1854,
    2704,   867,  3485,  1191,  2703,  3779,  1192,  1191,  2178,  1852,
    1192,  4119,  2184,  2705,  2161,  1191,  2179,  1193,  1192,  2709,
    3520,  3017,  1876,  3019,  3121,  1054,  1882,  2710, -1532,  2919,
    3030,  3498,  2306,   883,  1191,  3509,  1191,  1192,  1191,  1192,
    1191,  1192,  3029,  1192,  3043,  1191,  3998,  1186,  1192,  1188,
   -2546,  3054,  2991,  2005,  3674,  3038,  1396,  2996,  2628, -1814,
    1401,  1406,  3675,  3076,  3078,  3080, -2662,  1191,  3393,  3081,
    1192,  1571,  1070,  1193,  1427,  1231,   505,  1233, -2546,  1003,
     505,   641,  1912,   505,   641,  1193,  4196,  2995,  3694,  1282,
    3116,  4380,  1206,  3695,  3696,  1316,  3699,  1189,  1190,  1733,
    1734,  1191,   569,  3724,  1192,  1940,  1232,   631,  3133,  3993,
    1236,  -914, -2188,  1246,  1191,  1189,  1190,  1192,   669,   641,
     631, -2025,  1963, -1532,   631,  3230,  1189,  1190,  1191,   523,
    2748,  1192,  1189,  1190,  2023,  4142,  3118,  1189,  1190,  1496,
    3833,  1191,  3124,   830,  1192,  4254,   976,  4256,  1191,  2944,
    1191,  1192,  2227,  1192,   912,  3970,  -567,  1189,  1190,  -568,
     641,  1169,  1015,  1571,   641,   641,  3659,  3650,  1026,  3630,
    4026, -2165,  3189,  3634,   865,  2869,  3486,  1193,   641,  2007,
    1191,  1193, -2475,  1192,  1391,  3666,  1468,  1591,  1592,  1593,
    1189,  1190,  2895,  4542,   509,  2320,  2228,   510,  3857,  1191,
    1436,  1191,  1192,  1442,  1192,   554, -2306,  1193,  2976,  1193,
    2053,  1193, -2475,  1193,  1614,  1193,  2041,  1569,  3629,  3672,
    3673,  1193,  3633,  4298,  3248,   631,  2282,  3172,  2208,  3209,
    3172,  3172,  2636,  2193,  1987,  1733,  2247,  1189,  1190,  2401,
    1193,  3359,  3360,   641,  1336,  1505,  3639,  3172,  3392,  3609,
    1189,  1190,  4320,  1275,  2285,  2286,  2253,  2194,  4382,  1193,
    3971,  3698,  1238,  1193,  3292,  3537,  3717,  3720,  3722,  3723,
   -2476,  1193,  1634,   505,  2226,   631,  2473,  2302,  2303,  1189,
    1190,  1667,  2189,  2088,  1668,  2828,  2829,  3520,  1209,   513,
    1193,  2721,  1193,  3162,  1193,  2573,  1193,  3373,  2040,  1191,
   -2476,  1193,  1192,  1530,  3186,  3187,  3193,  3194,  2574,  2233,
    3210,  3211,  3716,  3227,  3600,  3245,  3246,  2707,  1861,  1469,
    2711,  2708,  2728,  1193,  2500, -1492,   631,  2193,  3297,  1311,
    1607,  2091,  3346,  4248,  3009,  3009,  1867,  1743,  2234, -1997,
    1224,  1713,  3960, -2165,  3163,   563,  2446,  3093,  2427,  1191,
    1470,  2194,  1192,  2914,  1430,  2535,  1191,  1193,  2498,  1192,
    3338,   579, -1492,  1862,  1128,  4027,  1325,  1957,  1957,  2503,
    1193,  2027,  2506,  2507,  1781,  2402,  3315,  4005,  1128,  1344,
    1189,  1190,  2579,  1350,  1193,  1430,  2028,  2362,  3991,  3946,
    -472,  3626,  2572, -1841,  2029,  2607,   596,  1193,  4322,  2240,
    1868,  1189,  1190,  3082,  1193,  2048,  1193,  1988, -1532,  4323,
    1897,  1989,  2245,  2049,  4006,  2339,  2950,  2637,  2743,  2246,
    3972,  2249,  3228, -1814,  2704,  2523,  2116,  1815,  1727,  2117,
     946,   619,  2332,  4003,  2883, -2188,  1193,  2705,  3973,   602,
    2915,   641,  1226,  3846,  3847,  1189,  1190,  2827,  3363,  1189,
    1190,  2261, -2392,  2779,  2106,  1193,  2040,  1193,  1191,  1570,
    3500,  1192,  1189,  1190, -1532,  1814,  4028,  1917,  1312,  3389,
    2268,  3646,  2272,  1391,  4152,  2356,  1191,  2352,   641,  1192,
    2712,  1189,  1190,  1785,  1863,   603,  2729,  1191,   631,  4191,
    1192,   657,  1873,  1191,  3137,  4237,  1192,  1869,  1191, -1532,
   -1841,  1192,  4253,   631,  1397,  2023,  4268,  1392,  2832,  2833,
    1873,  1873,  1736,  2427,  2372, -1532,  2317,  2173,  1191,  1239,
   -1532,  1192,  3094,  2703,   684,  1509,  1510,  1189,  1190, -2306,
    1128,   641,  2178,  2519,  3603,  3974,  3517,  1898,  2709,  1726,
    2179,  2643, -1532,  2826,  1189,  1190,  2710,  1101,  3518, -1532,
    2568,  1191,   605,  2836,  1192,  1193,  1635,  2296,  2447,  1475,
    4603, -1532,  3519,  2423,  2424,  1189,  1190,  1839,  3538,  1842,
    2273,   631, -1532,  1777,   918,  3682,   992, -1532,  1870,  2445,
    1189,  1190,   631,  2403,   685,  1598, -1532,  2041,   641,  1605,
    2428,  1216,  1217,  1218,  1219,  1220,  1221,   130,  1191,   631,
     631,  1192,  2023,  2651,   620,  1193,  1206, -2188,  2879,  3955,
    2484,  1191,  1193,  3138,  1192,  1189,  1190,   623,   872,  1171,
    2275,   841,  4324,  3782, -2392,  2651,  1238,  2276,  1896,  1726,
    2668,  2974,  4203,  1238,  2040,   668,  1904,  1873,  1873,  1918,
    1191,  4249,  1908,  1192,  3286,  1189,  1190,  1225,  2477,   611,
    3948,   641,  1189,  1190,  1045, -1532,  1189,  1190,  1189,  1190,
     828,  1928,   912,  2023,  2009,  3558,  4269,  2520,  3551,  1189,
    1190,  4232,   505,   505,   505,   631,   505,   631, -1532,  3501,
    1189,  1190,  1958,  3364,   131,  1737,  2521, -1532,  1960,   505,
    1571,   641,  1189,  1190,  2669,   505,  2378,  2522,   612,  1923,
    2313, -2306,  1941,  1942,  1943,  1846,  1945,  4238, -1841,  4239,
    1189,  1190,   886,  3513,  1193,  2345,   686, -1532,   631,  1961,
    1189,  1190,  1726,  2346,  3052,  1965,  3647,  1238,  1669,  2280,
    1238,  1670,  1193,  4250,  4135,  1189,  1190, -1841,  3513,  3300,
   -1492,  1191,  2730,  1193,  1192,  2041,  2209,  1787,  3229,  1193,
    1189,  1190,  1189,  1190,  1193,  2428,   622,  3009,  2298,  1189,
    1190,   625,  1191,  4251,  3191,  1192, -1814, -1532,   641,  3192,
    1924,   613,  4453,  4454,  1193,  2429,  4122, -1842,  3385,   641,
    2523,  1189,  1190,   631,  1778,  2220,   960,  2125,   631,  3203,
   -1532,  2670,  4007,    43,   946,  3139,  1392,  1871,  4325,  1937,
   -1814,   946,  1209,   993,  1189,  1190,  1191,  1193,  1779,  1192,
    1191,    13,  3397,  1192,  1235,  1189,  1190,  1476,  2572,  2119,
    3403,  1571,  3213,  1191,  3405,   631,  1192,  1189,  1190,  3369,
    1350,  1189,  1190,  4057,  1987,  2606,   994,  1513, -1532,   887,
    4332,  2023,  1191,   632,   641,  1192,   505,   505,  2935,  2191,
     505,  4526,  4244,  1947,  1193,  1189,  1190,  1189,  1190,  1350,
     509, -1841,  1080,   510,  2207,   961,   873,  1193,   635,  3214,
    4527,  3478,  2671,  2314,  3514,  2023,  2187,  2188,  1189,  1190,
    3747,  2221,  3956,  1239, -1842,  3925,  4333,  -472,  1191,  3748,
    1239,  1192,  2524,  1189,  1190,   946,  1193,   637,   946,  3514,
   -1532,  4387,  3140,  2324,  4391,  1191,  2478,  2039,  1192,  1987,
   -1841,  3792,  3116, -1532,   888,  1948,  4149,   580,    25,  2341,
    1813,  4121,  1159,  2041,  2345,  2451,  1191,  4150,  3884,  1192,
    3039, -1532,  3332, -1532,  1944,  2120,  1946,  1128,  2254,  3747,
    2429,  1191,  1189,  1190,  1192,  2357,  1812,  2703,  3748,  3368,
     649,  3157,  3244,  1189,  1190,  3515, -1532, -1532,  4272,  4273,
   -1532, -1532,  2709,  2525,  1163,  3587,    55,  2433,  2831,  1238,
    2710,  1780,  1189,  1190,  1925,   874,  1191,  1976,  2766,  1192,
    3526,  1189,  1190, -1166,  1239,  1189,  1190,  1239,   714,  2407,
    3909,  1726,  2773,  3303,  1189,  1190,  3925,  1193,  2323,  2986,
    1428,  1189,  1190,  1238,  3910,  3040,  1191,  1988,   117,  1192,
    3588,  2297,  4334,  1191,   657,  1160,  1192,  1191,  1193,  1191,
    1192,   614,  1192,  4019,  4020,  2788,  4397,  1189,  1190,  3749,
    1191,  4478,  2225,  1192,  3885,   591,  3566,  1443,  3565,   658,
    2347,  1191,  2121,   615,  1192,   663,   641,  2127,   631,   641,
     875,  2040,   719,  1191,  1037,  2800,  1192,  1164,  3926,  2472,
     631,  2869,  1193,  1189,  1190,  1282,  1193,  1444,  1873,  1749,
    1282,  1191,  1189,  1190,  1192,  3886,  2235,   616,  3570,  1193,
    2236,  1191,  1988,   641,  1192,  3356,  1989,  2325,  3749,  2941,
    3858,  2672, -1842,  2244,  2842,  4021,  1191,  1949,  1193,  1192,
    1085,   631,  1590,  3520,  2166,   631,  3041,  1218,  1219,  1220,
    1221,  1191,  2257,  1191,  1192,  2987,  1192,  2317,  1445,   843,
    1191, -1842,  1446,  1192,  3683,  3455,    37,   654,  1189,  1190,
     661,  1038,   641,   641,   631,   631,   617,   946,  4151,  3554,
    3947,  3900,  1191,  3556,  1193,  1192,  1128,  1594,   641,   731,
    3989,  1189,  1190,  1189,  1190,    43,  2040,   911,  2258,  2555,
     912,  1193,  3053,   641,  3901,  1191,  1189,  1190,  1192,  4038,
     258,   946,   260,   916,  3516,  2262,  1191,  1596,  4011,  1192,
     912,  4404,  1193, -1814,   677,  1189,  1190,  3016,  1191,  3911,
     665,  1192,  1191,  2222,  2495,  1192,  2266,  1193,   523,  3516,
    2555,  3902,  2699,  3075,  1522,  1523,   844,   889,   890,  2166,
     892,  2267,   894,  3046,  3047,  1417,  1191,  4405,  1191,  1192,
    4102,  1192,   522,  2556,   679,   858,  1239,  4472,  4472,   895,
     747,   631,  1193,  1548,  1549,  3965,  2223,  1226,  3621,  1191,
     859,  4103,  1192,  2518,  1588, -1842,  2271,  1040,  1041,   586,
     631,  2557,  2420,  1750,  1191,  2555,   586,  1192,  2023,  2040,
    1239,  2248,  1193,  2422,  2556,   860,  3028,  3917,  3772,  1193,
    3919, -1730,  1447,  1193,  1418,  1193,  2274,   845,  3676,    52,
     515,  3679,  3680,  2277, -1814,   820,  1193,  2289, -1814,  2308,
    1378,  2549,  2557,  -206, -1842,  3341,   509,  1193,  3692,   510,
    3160,  3342,  2326,  1191,  1419,  2802,  1192,  2699,   825,  1193,
    3690,  3179,  2166,  3691,  1191, -1730,   682,  1192,  2327,  2556,
    2558,  2742,  2491,  3185,  3475,  1430,  3627,  1193,    55,  3957,
    2697,  1430,  3511,  1191,  2713,   683,  1192,  1193,  3367,  3476,
    2041,  3188,  1191,  2248,  3343,  1192,  1191,  2557,  1448,  1192,
    3798,  3195,  1193,   851,  2638,  1191,  3528,  3529,  1192,  2023,
    2399,  2558,  1191,  2023,  1325,  1192,  3199,  1193,  2652,  1193,
     918,   902,  1396,   838,  1564,  1565,  1193,  1396,  1139,  3543,
    2167,  3200,  2006,  3201,  1040,  1041,  1238,   835,  1191,  2373,
    3202,  1192,  2374,  1344,  2426,  2375,  1867,  2539,  1193,   849,
    1158,  2559,  4115,  4116,  2224,  1226,  2546,  2547,   852,  2329,
    2699,  1449,  1726,  1172,  1173,   855,  2558,  2551,  2552,  2553,
    2554,  1193,  2562,  2563,  1191,  4117,   857,  1192,  2241,  1226,
     869,  2166,  1193,  1191,   641,  3204,  1192,  2834,   641,   878,
    2714,  2576,  2559,   505,  1193,  2041,  3207,   880,  1193,   776,
     631,   631,   631,  2737,   986,   515,  2740,   987,  3212,   989,
    1868,  2030,  3215,  2250,  1226,   115,  2023,  1726,  1751,  2974,
     996,  2824,  1193,  2719,  1193,  1573,   641,  1814,  2251,  1683,
     841,   641,  4215,  2576,  1752,  2167,  3217,  1238,  3219,  1191,
    2505,  1238,  1192,   516,  1005,  1193,   258,  2559,   260,  4294,
    1726,  2846,  3052,  4193,  4296,  1019,  4297,  2263,  1226,  2529,
    1193,  1027,  1191,   861,  1191,  1192,  1420,  1192,  4206,  4207,
    4208,  4209,  1016,  1450,  3221,  2663,  1046,  1191,  2663,  2663,
    1192,  2663,  1206,  1047,  2663,  2663,  2663,  2663,  2663,  2663,
    2663,  4216,  1051,  2663,   115,  2663,  1191,  4221,  2041,  1192,
    4224,  4225,  4226,  4227,   946,  2603,  1082,  1869,  4276,  1193,
    1206,   116,  1083,   980,   981,  1451,   982,  1084,   983,  2031,
    1193,  3299,  1226,  3222,  1086,   641,  1087,  2166,  3243,  1821,
     117,   517,  2264,  1226,  3223,  2023,  2265,  1226,  2167,  1193,
    2269,  1226,  1574,  1088,  1238,  2130,  1575,  2603,  1193,  1091,
    2843,  1092,  1193,  3548,  1093,   641,  2166,  1576,  3653,  3654,
    1094,  1193,  3549,  1095,  2555,  -863,  3550,  3077,  1193,  1096,
    2560,  2131,  1097,  4293,  2852,  3787,  1189,  1190,   918,   902,
    2858,  2858,  3791,  2858,  2564,  2565,   585,  2130,  1870,  4549,
    4550,  1957,  1098,  1239,  1193,  2816,  1226,  3205,  1226,  2752,
     118,  3272,  3273,  1099,  1421,   946, -1814,   976,  3797,   946,
    2877,  2560,  1822,  2131,   518,  4310,  4311,  3595,  1823,  1102,
    4314,  2860,  3872,  2861,  4319,  1104,  2753,  1105,  2556,   119,
    1193,  2317,  1106,  1422,  1229, -1814,  2472,  1396,  1109,  1193,
    1110,  2900,  3309,  3310,  3799,  2903,  1726,  1111,  3303,  1112,
    2858,  2858,  2858,  3800,  3313,  3314,  2557,  2167,   886,  2733,
    2734,  2735,  2923,  1238,  2925,  1113,  2560,  1647,  1824,  3157,
    3872,  1618,  1619,  1620,  1423,  1230,  2754,  1114,  1209,  2755,
    1115,  2023,   120,  1631,  1825,  2010,  1116,  2756,  2032,  1577,
    2907,  2908,  2909,   912,  1239,  1193,  1117,  2033,  1239,  2011,
    1958,  1958,  1234,  1206,  2034,  1867,  1209,  4130,  4131,  2846,
    2023,  1311,   946,  1118,  1686,  3966,  3967,  1690,  1193,  1119,
    1193,  4104,  2605,   119,  4214,  2558,  3481,  3482,  1122,  3125,
    2168,  1727,  3801,  1193,  3802,  3562,  1226,  -659,  1709,  1710,
     641,   641,  1714,  -659,  3590,  3591,  1251,  3860,  2604,  2576,
    1253,  1123,  1193,  4105,  2519,  3729,  3730,  1129,  3789,  1318,
    1728,  1729,  2577,  1130,  2605,  1323,  4080,  1131,  1651,  1868,
    3775,  3784,  3793,  1226,  1132,  1254,  1133,  3001,  1134,  2555,
    1135,  2652,  3079,  1255,  1578,   887,  2652,  1136,  3015,  1137,
   -1532,  3013,  2652,  1140,  3025,  2922,  2652,  2408,  3024,  2035,
   -1814,  1239,  3007,  2167,  3810,  1226,  2559,  1871,  3024,  1238,
    2652,  2652,   121,   641,  3024,   519,  3818,  3819,  3049,  3045,
    3934,  2565,  2652,  3057,  1727,  1141,  1211,  1212,  1142,  3060,
    3061,   946,  2167,   631,  1143,   520,  3949,  3950,  1238,  2857,
    2857,  1144,  2857,  2556,  3024,  1145, -1532,  1146,  1256,  1319,
    1312,  2652,  3092,  1147,  1211,  1212,  3953,  3950,  3929,  1148,
     888,  1149,  3113,  -659,  2012,  1150,  2409,  3954,  3950,   517,
    1151,  2557,  4106,  1257,  1652,  1152,  2168,  1258,  1655, -1532,
     521, -1532,  -573,   122,  1153,  1656,   522,  1154,  2520,  1155,
    2169,  4013,  3591,  3536,  4016,  3950,  1324, -1532,  1156,  1209,
    2555,  1157, -1532,  2130,  2036,  2168,  1337,  2521,  1161,  2857,
    2857,  2857,  1162,  2757,  1259,  1165, -1532,  1166,  2522,  1253,
    1239,  1170,  4071,  4075, -1532,  2341,   631,  2652,   523,  2131,
    1174, -1532,  1260,  3026,  3027,  1338,   524,  4024,  4025,  4604,
    2558,  2013,  1175, -1532,  1254,  3563,  1261,  2410,   123,  1339,
   -1018,  1176,  1255,  1177, -1532,  4087,  4107,   911,  1178, -1532,
    3056,  4129,  3314,  1657,  2556,  1179,  2014,  1006, -1532,  4133,
    3950,  4134,  3950,   916,  4108,  4136,  3950,   946,  1228,  1214,
    1215,  1216,  1217,  1218,  1219,  1220,  1221,  2519,  4137,  3950,
    4143,  4144,  2557,  4145,  4144,  1262,  1351,  4109,  2059,  2060,
    1353,  2523,  1373,  2381,   124,  1376,   946,  1214,  1215,  1216,
    1217,  1218,  1219,  1220,  1221,  4217,  4218,  1256,  1007,  1659,
    1379,  2559,  4330,  3314,  3844,  2560,  2015,  2382,  3117,  2519,
    4331,  3314,  -797,  -797,  2062,  1387,  2169, -1532,  1388,  4071,
    1407,  2383,  1257,  4075,  -797,  1411,  1258,  1211,  1212,  1416,
    2065,  1428,  2384,  1437,  2758,  1282,  4337,  3591,  2066,   641,
   -1532,  2558,  4088,  4089,  2578,  2169,  1239,  4090,  4091, -1532,
    1439,   631,  4395,  4396,  4434,  4435,  1440,  1189,  1190,  1455,
    -659,  1458,  2068,  1259,  4489,  3480,  4592,  4593,  1465,  2877,
     641,  3700,  3059,  1727,  1466,  1239,  1506,  2695,  1474, -1532,
    2069,  1260,  2385,  2386,  1008,  4071,  4075,  1477,  1128,  1478,
     641,  4312,  4313,  2524,  1481,  1261,  4033,  1482,  1873,  1873,
    2016,  2520,  4033,  1263,  3331,  1484,  2759,  1489,  1396,  2074,
    2387,  1494,  1264,  4370,   515,  2879,  3780,  3701,  1716,  1717,
    2521,  3702,  2559,  3703,  3612,  3613,  1726,  1265,  4213, -1532,
    1506,  2522,  1512,   889,   890,   891,   892,   893,   894,  1514,
    2760,  3979,  3980,  2520,  1262,  1266,  2411,  1660,  3816,  3817,
    1516,   946, -1532,   520,  1519,   895,  1643,  1644,  1645,  1646,
    1647,  1520,  2521,  1662,  2525,  3142,  1524,  4110,  1525,  3704,
    1526,  1528,  1529,  2522,  1533,  3768,  3769,  2388,  1534,  1582,
    2210,  2078,  1216,  1217,  1218,  1219,  1220,  1221,  1267,  2079,
    2652,  1535,  1583,  2433,  2652,  2652,  1584,  1587,  -659,  3024,
   -1532,  2434,  1589,  1590,  -659,  1608,  2080,  1610,  1224,  1614,
    2576,  1621,   641,  1672,  2523,  2652,  1633,   822,   823,  1268,
    2560,   826,   827,  2577,  1636,   829,  1682,   831,  1683,  2389,
    1684,  1206,  1707,  3024,  1766,  1724,  1735,  3330,  1744,   509,
    1760,  3024,   510,  1269,  1789,  3024,  -659,  1786,  1792,  1791,
    2255,  4459,  1795,  1270,  2259,  1798,  2523,  1799,  1648,  1649,
    1650,  1651, -1532,  1800,  1801,  2082,  1803,  1802,  3344,  3345,
    1804,  3347,  1263,  1805, -1532, -1532,  1816,  3409,  2283,  3848,
     631,  1264,  1818,  2083,  1817,  3465,  3466,  1820,  1826,  1828,
    1829,  1837,  3024, -1532,  1838, -1532,  1265,  1271,  1009,  1848,
    -832,  1851,  1859,  1878,  1879,  1880,   539,  3484,  1881,  1885,
    3285,  1888,  1891,  1892,  1266,  1894,  1895,  1205, -1532, -1532,
    3495,  3863, -1532, -1532,  -659,  1909,  2524,   631,  2435,  2436,
     517,  1726,  4520,  4213,  4522,  1900,  1932,  2087,  3508,  2059,
    2060,  2560,  1935,  1939,  1967,  2089,  3391,  1968,  1969,  1970,
    4255,  1972,  1974,  4535,  1982,  3395,  1985,  1267,  1999,  2008,
    2054,  1010,  1378,  1011,  2130,   540,  2437,  1652,  2524,  1653,
    1654,  1655,  1571,  -797,  -797,  2062,  2134,  1378,  1656,  2136,
    2135,  2137,  2138,  4564,  4565,  -797,  2139,  2140,  1268,  2141,
    2131,  2065,  2160,  1196,  1197,   541,  2142,  2525,  2143,  2066,
    2144,  1040,  1041,  2145,  2146,  2147,  3617,  3705,  2148,  2149,
    2150,  2151,  1269,  2152,  3706,  2095,  2153,  2154,  1191,  2155,
    2156,  1192,  1270,  2068,  3561,  1206,  2157,  1209,   542,  2158,
    2159,  1198,  2923,  3891,  3892,  3994,  2162,  1506,  2180,  2525,
    2181,  2069,  1199,  2186,  2196,  3487,  3895,  2197,  2198,  2205,
    2199,  3707,  2211,  3898,  2213,  2214,  1657,  2852,  2215,  2230,
    1316,   641,   641,   641,  2231,  2232,  1271,  2237,  2238,  2239,
    2074,  2252,  2096,  2097,  2098,  2877,  2248,   543,  3920,  2242,
    2099,  3922,  1200,  2287,  1206,  2322,  2256,  2260,  2278,  2279,
    2318,  2284,  2299,  1201,  2900,  3602,  2100,  2288,  3604,  2300,
    2101,  2301,   641,   641,   641, -1236,  1206,  4300,  1221,  1250,
     641,  1658,  1659,  2328,  1206,  2338,  2843, -1358,  1107,  4439,
    1202,  2358,  3708,   912,   912,  1548,  1549,  1159,  1207,  2369,
    4014,  4015,  1163,  4017,  4018,  2370,  2392,  2400,  2406,  3410,
    2414,  -659,  2078,  2103,  2417,  2444,  2441,  2460,  2474,  1727,
    2079,   693,  1208,  2475,  3062,  3754,  3063,  2476,  2481,  2482,
    2652,  2492,  2483,  2479,  2480,  2922,  2499,  2080,  2513,  2516,
    2652,  2494,  3024,  3709,  2527,  1211,  1212,  2528,  2531,  2532,
    2722,  2534,  1727,  4114,  1203,  2540,  3497,  2270,  3024,  2541,
     631,  2545,  2652,  2575,  1726,  2542,  4584,  3064,  2543,  2538,
    3149,  1396,   -64,  2544,  2576,  4444,  4445,   544,  4447,  3196,
    4439,  2589,  2598,  2599,  2601,  2594,  4146,  1726,   818,  4596,
    3065,  1209,  2595,  2608,  2010,  1726,  2082,  4584,  2602,  3866,
    2610,  1726,  2611,  4596,   520,  2612,   714,   523,  2011,  2620,
    2625,  1040,  1041,  2654,  2083,  2658,   818,  2660,  2720,  2619,
    2698,  2742,  4485,  2624,  4486,  4487,  2630,  3066,   505,  2631,
    1660,  2738,  2640,  2746,  3113,  3622,  1564,  1565,  2767,  2751,
    2768,  2769,  2346,  2850,  1193,  1661,  1662,  2780,   545,  4284,
    1209,  2781,  2793,  2815,  2822,  2830,  2839,  2855,  3738,  3767,
    3767,  3767,  2840,   718,  3838,  2870,  2851,  2867,  2087,  2872,
     719,  2873,  1209,  2880,  2881,   641,  2089,  4114,  1854,  2884,
    1209,  2885,  2886,  4376,  4287,  1210,  2904,  2890,  2906,  2452,
    2451,  2905,  2927,  2928,  1917,  1918,  2947,  -659,   724,  1215,
    1216,  1217,  1218,  1219,  1220,  1221,  4545,  2508,  2509,  2510,
    2951,  2952,  2937,   546,  2666,  2667,  2954,  2674,  2953,   547,
    2677,  2678,  2679,  2680,  2681,  2682,  2683,  2955,  2957,  2686,
    2962,  2688,  2963,  2964,  4576,  2980,  2998,  2984,  2985,  1211,
    1212,  3101,   818,  3826,   548,  3031,  2095,   818,  1727,  3033,
    4423,  2472,  1213,  3102,  3106,  3108,  3122,  3128,  3127,   641,
    3123,  3129,  3130,  2088,  3154,  4423,  2206,   731,   641,   549,
    3174,   693,  3163,  2012,  3167,  3176,  3169,  3224,   818,  3282,
    3177,  3178,  3180,  3759,  3181,   550,  3287,  1329,  3294,  3234,
    3235,  3238,  3242,  3247,   818,  3250,  3280,  3240,  1211,  1212,
    3277,  3275,  3290,  2096,  2097,  2098,  3767,  3276,  3278,  3291,
    3279,  2099,  3876,  3305,  3311,   631,  3316,  3318,  3308,  3329,
    1211,  1212,  3319,  3320,  3881,  3333,  3334,  2100,  1211,  1212,
    1396,  2101,   742,  3337,  3348,  3328,  3349,  3357,   818,   818,
     818,   818,  3361,   745,  3362,  3375,  3376,   746,   747,  3866,
    2013,   818,  3377,  3407,  4423,   641,   714,  3984,  3394,  3468,
    4600,  3365,  3474,  3496,  4506,  3490,  2433,  3491,  3525,  3994,
    4509,  3067,  1040,  1041,  2103,  2014,  3531,  2305,  2001,  3532,
    3388,  3229,  3923,  2081,  3924,  2056,  3568,  3581,  3540,  3617,
    3572,  3605,  1214,  1215,  1216,  1217,  1218,  1219,  1220,  1221,
    3398,  3408,  3406,  4529,  3479,  3483,  3480,  3499,  3527,  3505,
    3841,  3495,  3506,   718,  3507,  4423,  3583,  4423,  3539,  3552,
     719,  3594,  3586,  3610,  1958,  3592,  3623,  3618,  3624,  2723,
    4423,  4287,  3631,  3632,   641,  2015,  3644,  3652,  3655,  3656,
    3661,  3670,  3677,  3728,  3725,  3733,  3736,  3739,   724,  3740,
    3742,  1214,  1215,  1216,  1217,  1218,  1219,  1220,  1221,  4423,
    4423,  3755,  3746,  3756,  4588,  3757,  3760,  3761,  3763,  3770,
    3773,  3774,  3775,  1214,  1215,  1216,  1217,  1218,  1219,  1220,
    1221,  1214,  1215,  1216,  1217,  1218,  1219,  1220,  1221,  3777,
    3903,  3781,  3776,   641,  3783,  3785,  3786,  3790,  3794,  3795,
    3796,  3804,  3811,  3805,  3812,  4114,  2903,  3813,  3821,  3068,
    3069,  3070,  3071,  3072,  3073,  3767,  3767,   731,  3767,  3767,
    3822,  3834,  3831,  3332,  3819,  3839,  3840,  3931,  3835,  2016,
   -1444,  3842, -1449,  3935,  3852,  3861,  3862,  3864,   768,  3879,
    3882,  3865,  3890,  3867,  1396,  3716,  3868,  3894,  3907,  3896,
    3908,  3913,  3914,  4573,  3915,  3719,  3930,  3921,  3104,  3932,
    3936,  3962,   774,  3937,  3952,  3958,  3963,   776,  3964,  3983,
     777,  3968,  3987,  3982,  3874,  3986,  3977,   818,  3257,  4029,
    4000,  4002,   742,  4023,   745,  3784,  4573,  4041,  3258,  4053,
    4036,  4082,  4049,   631,  4067,  4078,  4083,   746,   747,  4084,
    3259,  4077,  4081,  4094,  3767,  4097,  4126,  4128,  4139,  4153,
    4187,  4198,  3260,  3261,  3262,  4148,  1355,  4222,  4190,  4197,
    4205,  4220,  4223,  4231,  3869,  3870,  1356,  4233,  3263,  3997,
    4235,  4240,   818,   818,  4228,  3096,  4257,   631,  1357,  4259,
    4101,   818,   818,   818,   818,   818,   818,   818,   641,  4260,
    1358,  1359,  1360,  4261,  4263,   818,   818,  -346,   818,   818,
    4281,  4299,  4283,   818,   818,  4305,  1361,   818,   818,   818,
     818,  4302,   818,   818,  4316,  4321,  4328,  4338,  4341,  4140,
     818,   818,  4342,   818,   818,   818,   818,   818,  4347,  4350,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,  4343,   818,  4375,  -364,   818,   818,  4344,  4378,  4399,
     818,  4400,  4401,  4402,   818,   818,   818,  4408,  4385,  4410,
    4411,  4409,  4289,  4413,  4419,  4420,  4430,   818,   818,   818,
    4412,  4424,  4443,  4446,  4448,  4449,   818,  4455,  4460,  4462,
    4464,  4465, -2369,   818,   818,   818,  4468,   818,  1727,  4474,
    4476,  4479,  4482,  4494,   818,   818,   818,  4488,   818,   818,
     818,   818,   818,  4497,   818,   818,   818,   818,   818,   818,
     818,   818,  4499,  4507,  4510,   818,   818,  4315,  1284,  4513,
    2903,  4514,  2903,  4523,  4515,  4517,  4519,  4530,   768,  4518,
    4524,  4534,  4528,  3867,  4538,  4540,  3868,  4543,  4544,  4548,
    4546,  4552,  4553,  4555,  4562,  4561,  4585,  4589,  4599,  3745,
    4267,  3744,   774,  2848,  2690,  4274,  2992,   776,  1063,  3940,
     777,  4188,  4431,  4290,  1643,  1644,  1645,  1646,  1647,  4432,
    1518,  3938,  3942,  4048,  4597,  4557,   599,   959,  2442,  3271,
    2365,  4164,  4165,  4167,  4566,  4168,  4192,  4170,  3264,  4171,
    4172,  4173,  4050,   848,  4174,  4491,  4175,  4417,  4492,  2059,
    2060,  4178,  4473,  1285,  4179,  3265,  4180,  4429,  4428,  2846,
    2052,  4056,  4101,  1586,  3869,  3870,  2644,  2104,  3402,  3824,
    3293,   641,  3298,  3585,  1857,  4304,  1362,  4096,  4384,  3827,
    4512,  4481,  4442,  4230,  1286,  2062,  4095,   678,  3762,  3147,
    2642,  2165,  3488,  1363,  3669,  3098,  3657,  3684,  1287,  2649,
    3726,  2065,  4031,  3685,  3875,  3912,  4383,  3899,  2982,  2066,
    3226,  3555,  3557,  3553,  4351,  4243,  1648,  1649,  1650,  1651,
     681,  1288,   818,   680,  1289,   535,   536,  4246,  4245,  4200,
    2195,  4195,  2732,  2068,  4441,   818,  4202,  1290,  4066,  3086,
    4034,  2646,  1986,  1727,   970,  1984,  3878,  1506,  2887,  3658,
    2163,  2069,  2425,   818,  2126,  3284,  3582,  2868,  2910,  1291,
     985,  2450,  2821,   641,  3564,  3249,  3266,  1383,  2765,  3628,
    1681,  2820,  2975,  4132,  1089,  4242,  4451,  3743,  4452,  2837,
    2074,  3664,  3267,  4004,  1292,  2002,  4532,  1632,  3996,  2736,
    2917,  1293,  1788,  1845,  1498,  1499,  2866,  3829,  4309,  1883,
    2893,  3598,  3597,  3638,  4381,  1121,  1500,   973,  1501,  1081,
    2204,  2059,  2060,  2501,  1951,   955,  1973,  2359,  1890,  2502,
    1364,  1138,  3668,  3584,  4511,  1652,  4403,  1653,  1654,  1655,
    4531,  4598,  1294,  4450,  4601,  3906,  1656,  3601,   641,  2936,
    1903,  3620,  2934,  1372,  3268,  -797,  -797,  2062,  1283,  1284,
     914,  2321,  2078,  2405,  3113,  3113,   915,  -797,  2486,  2933,
    2079,  2926,  3269,  2065,  2448,  2380,  4204,  1893,  1183,  2185,
    3569,  2066,   884,  4210,  1375,  4147,  1067,  2080,   672,   673,
       0,  3928,  1365,     0,  1068,  1069,     0,  4392,  4393,     0,
       0,     0,     0,     0,     0,  2068,     0,     0,     0,     0,
    1366,     0,     0,     0,     0,  4496,     0,     0,     0,  1506,
       0,     0,  4504,  2069,  1657,     0,     0,     0,     0,     0,
       0,  4591,     0,     0,     0,  4602,     0,     0,     0,     0,
       0,     0,  2055,     0,  1285,     0,  2082,  2056,     0,  2057,
       0,  2058,  2074,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2059,  2060,  2083,     0,     0,     0,     0,     0,
       0,   818,     0,  4536,  1295,  1286,     0,     0,  4541,  1658,
    1659,     0,     0,     0,     0,     0,     0,     0,     0,  1287,
       0,     0,     0,  2061,  1297,     0,     0,     0,  2062,  2063,
       0,     0,  1298,     0,     0,     0,  2064,     0,  4574,     0,
    1299,     0,  1288,     0,  2065,  1289,  1727,     0,  2087,     0,
       0,     0,  2066,     0,  2078,     0,  2089,     0,  1290,     0,
       0,  2067,  2079,     0,     0,   641,     0,     0,  1300,  1727,
       0,  4574,     0,     0,     0,     0,  2068,  1727,     0,  2080,
    1291,  1301,  1302,  1727,     0,     0,     0,     0,     0,     0,
    1506,     0,     0,     0,  2069,     0,     0,     0,     0,   818,
     818,   818,  2070,  2071,     0,  1292,     0,     0,     0,  2072,
       0,     0,  1293,     0,   818,     0,     0,  2073,     0,     0,
       0,  -944,     0,  2074,     0,     0,  2095,     0,     0,     0,
       0,     0,     0,  1303,  2075,     0,     0,     0,  2082,     0,
     818,     0,     0,     0,  1541,     0,   818,     0,     0,   818,
       0,   818,     0,  1294,  2076,     0,  2083,   818,  1660,   818,
     818,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1304,     0,     0,  1661,  1662,     0,     0,     0,     0,     0,
       0,     0,     0,  2096,  2097,  2098,     0,     0,     0,     0,
       0,  2099,  1305,  2077,  1306,  2078,     0,     0,     0,  1612,
    1613,     0,     0,  2079,     0,     0,     0,  2100,  1623,  1624,
    2087,  2101,  1627,  1628,  1629,     0,     0,     0,  2089,     0,
    2080,     0,  1637,  1638,     0,  1639,  1640,     0,     0,     0,
    1665,     0,     0,     0,  1674,  1675,  1676,  1677,     0,  1679,
       0,     0,     0,  2081,   818,     0,     0,  1687,  1688,     0,
    1691,  1692,     0,     0,  2103,   818,     0,  1696,  1697,  1698,
       0,     0,  1701,  1702,  1703,  1704,  1705,  1706,     0,  1708,
       0,     0,  1711,  1712,     0,     0,     0,  1715,     0,  2082,
       0,  1718,  1722,  1723,     0,  1295,     0,   818,  2095,  1296,
       0,     0,     0,     0,  1730,  1731,  1732,  2083,     0,     0,
       0,  2084,     0,  1740,     0,  1297,     0,   818,     0,     0,
    1745,  1746,  1747,  1298,   818,     0,     0,     0,     0,     0,
       0,  1299,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2085,
       0,     0,     0,  1783,  2086,  2096,  2097,  2098,     0,  1300,
       1,  2087,     2,  2099,     0,     0,  2088,     0,     0,  2089,
       0,     0,  1301,  1302,     0,     0,  1369,  1284,     3,  2100,
       0,     0,     4,  2101,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     5,     6,     0,     0,
    2090,     0,     0,     0,     7,     0,     0,     0,     0,     8,
       9,     0,     0,     0,  2091,  2092,  2093,  2094,     0,     0,
       0,     0,     0,     0,  1303,     0,  2103,    10,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2095,
       0,     0,     0,     0,     0,    11,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1304,  1285,     0,     0,     0,     0,    12,     0,     0,
       0,     0,     0,     0,     0,     0,    13,    14,    15,     0,
       0,     0,     0,  1305,     0,  1306,     0,     0,     0,    16,
      17,     0,     0,  1286,     0,     0,  2096,  2097,  2098,     0,
       0,     0,    18,     0,  2099,     0,     0,  1287,     0,  1902,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    2100,     0,  1911,     0,  2101,   818,     0,     0,     0,     0,
    1288,     0,     0,  1289,    20,     0,     0,     0,     0,     0,
    1938,     0,     0,     0,     0,     0,  1290,     0,     0,    21,
       0,    22,     0,     0,  2102,     0,    23,     0,     0,    24,
       0,     0,     0,     0,     0,     0,     0,  2103,  1291,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    25,     0,    26,     0,     0,     0,     0,
    4184,     0,     0,  1292,     0,     0,     0,     0,   818,     0,
    1293,     0,   818,    27,     0,     0,     0,   818,   818,     0,
       0,     0,     0,     0,     0,     0,   818,     0,     0,   818,
      28,     0,     0,     0,    29,     0,     0,     0,  -944,   818,
     818,     0,   818,   818,     0,   818,   818,   818,   818,   818,
       0,  1294,   818,     0,     0,     0,     0,     0,     0,     0,
       0,   818,     0,     0,     0,     0,     0,     0,   818,     0,
     818,     0,   818,   818,     0,   818,   818,     0,     0,     0,
     818,   818,   818,     0,     0,     0,   818,   818,   818,     0,
     818,     0,   818,     0,   818,     0,   818,     0,   818,     0,
       0,     0,     0,   818,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4184,  4184,     0,     0,     0,     0,     0,
       0,     0,   818,     0,     0,     0,     0,     0,     0,   818,
      30,     0,   818,     0,     0,     0,     0,     0,   818,     0,
       0,   818,     0,     0,     0,   818,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2216,     0,
      32,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1295,     0,     0,     0,  1370,     0,     0,
       0,     0,     0,    34,     0,     0,    35,     0,    36,     0,
       0,    37,     0,  1297,    38,    39,     0,   818,     0,     0,
       0,  1298,     0,     0,    40,     0,    41,     0,     0,  1299,
       0,     0,     0,     0,    42,     0,     0,     0,     0,     0,
      43,  4184,  4184,     0,     0,     0,     0,     0,    44,     0,
       0,     0,  4184,    45,     0,    46,     0,  1300,     0,     0,
       0,     0,     0,     0,     0,     0,  2291,  2293,  2295,     0,
    1301,  1302,     0,     0,   818,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    47,     0,     0,     0,     0,
       0,     0,     0,     0,    48,     0,     0,     0,     0,     0,
       0,     0,     1,     0,     2,     0,     0,  2330,     0,     0,
       0,     0,     0,     0,     0,     0,  2335,     0,  2336,  4184,
       0,     0,  1303,     0,     4,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4184,     0,     0,     0,     5,     6,
       0,     0,     0,     0,     0,    49,     7,     0,     0,     0,
       0,     8,     9,     0,     0,     0,     0,    50,  2990,  1304,
       0,    51,     0,     0,    52,     0,     0,     0,     0,    10,
      53,     0,     0,     0,     0,     0,  2990,  2990,     0,     0,
    4184,  1305,     0,  1306,     0,     0,     0,    11,     0,     0,
       0,     0,  4184,  4184,     0,     0,     0,     0,    54,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    12,
       0,  2419,     0,    55,     0,     0,     0,     0,    13,    14,
      15,     0,  2421,  4184,     0,     0,     0,     0,     0,     0,
       0,    16,    17,  4184,     0,     0,     0,     0,     0,  4184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2467,     0,     0,     0,    19,     0,
       0,  4184,     0,  4184,     0,     0,     0,     0,     0,     0,
       0,     0,  4184,     0,  2485,     0,    20,     0,     0,     0,
       0,  2467,  4184,     0,  4184,     0,  4184,     0,     0,     0,
       0,    21,     0,    22,     0,     0,     0,     0,    23,  4184,
       0,    24,     0,  2990,  2990,     0,     0,     0,     0,     0,
       0,     0,  4184,  4184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    25,     0,    26,  4184,  4184,
       0,     0,     0,  4184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    27,     0,     0,     0,     0,
       0,     0,     0,     0,   818,     0,     0,     0,   818,     0,
       0,     0,    28,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   818,   818,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   818,
       0,     0,     0,     0,     0,     0,     0,     0,   818,     0,
     818,     0,   818,     0,     0,     0,     0,     0,  3411,  3412,
       0,     0,     0,     0,  3413,     0,  3414,     0,  3415,  3416,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   818,
       0,     0,     0,     0,   818,     0,  3417,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   818,     0,     0,     0,     0,     0,    31,
       0,     0,  2659,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    32,     0,     0,     0,  3418,     0,     0,  3419,
       0,     0,     0,    33,     0,     0,     0,  3420,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  3421,     0,    35,     0,
      36,     0,     0,    37,     0,     0,    38,    39,     0,     0,
       0,     0,     0,  3422,     0,   818,    40,     0,    41,     0,
       0,     0,     0,     0,     0,  2745,    42,     0,     0,  2747,
       0,     0,    43,     0,  2749,  2750,     0,   818,     0,  3423,
      44,  3424,     0,  2763,     0,    45,     0,    46,     0,     0,
       0,     0,     0,     0,  3425,  3426,  2770,  2771,     0,  2772,
       0,   818,  2774,  2775,  2776,  2777,  2778,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    47,  2782,     0,
       0,     0,     0,     0,     0,  2783,    48,  2784,     0,  2785,
    2786,     0,  2787,     0,     0,     0,  3427,  2790,  2791,  2792,
       0,     0,     0,  2794,  2795,  2796,     0,  2797,     0,  2799,
       0,  2801,     0,  2803,     0,  2804,     0,     0,     0,     0,
    2805,     0,     0,     0,     0,     0,  3428,     0,     0,     0,
       0,     0,     0,     0,     0,  3429,  3430,    49,  3431,  2825,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    50,
       0,     0,     0,    51,     0,  2835,    52,     0,  2838,     0,
       0,     0,    53,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3432,  3433,  3434,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      54,     0,     0,  3435,  3436,  3437,     0,     0,     0,     0,
    3438,     0,     0,  3439,  2990,    55,     0,     0,     0,     0,
       0,     0,  3084,     0,     0,     0,     0,  2056,     0,  2057,
    3440,  3441,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2059,  2060,     0,     0,     0,     0,     0,     0,
       0,     0,   818,     0,     0,  1542,     0,     0,     0,     0,
       0,     0,     0,  3442,  3443,     0,     0,     0,     0,     0,
       0,     0,     0,  2061,     0,     0,     0,   818,  2062,     0,
       0,   818,   818,     0,   818,     0,     0,     0,  3444,     0,
       0,     0,     0,   818,  2065,     0,     0,     0,   818,     0,
       0,   818,  2066,   818,   818,     0,     0,     0,     0,     0,
       0,  2067,     0,     0,     0,     0,  1543,  1544,  1545,  1546,
    1547,  1548,  1549,  1550,  1551,  1552,  2068,  1553,  1554,  1555,
    1556,  1557,  1558,  1559,  1560,  1561,   818,  1562,  1563,     0,
    1506,     0,  3445,     0,  2069,     0,  3446,     0,     0,     0,
       0,     0,  2070,     0,     0,     0,     0,     0,  3447,  3085,
       0,     0,     0,     0,     0,     0,     0,  2073,     0,     0,
     818,     0,     0,  2074,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   818,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2076,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3448,
       0,     0,     0,  3449,     0,     0,  3450,  3451,  3452,  3453,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2078,     0,     0,     0,     0,
       0,     0,     0,  2079,     0,     0,     0,   818,     0,     0,
       0,     0,  1564,  1565,     0,   818,     0,     0,     0,     0,
    2080,     0,     0,     0,     0,  3454,  3455,     0,     0,     0,
       0,     0,   859,   917,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2081,     0,     0,     0,     0,     0,     0,
    3456,     0,     0,     0,     0,     0,     0,     0,   918,   902,
       0,     0,     0,     0,     0,   919,     0,     0,     0,     0,
       0,   920,     0,     0,     0,     0,     0,     0,     0,  2082,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,     0,   922,  2083,     0,     0,
       0,  2084,     0,     0,     0,     0,   923,     0,     0,     0,
       0,   818,   818,     0,     0,     0,     0,     0,     0,     0,
       0,  3159,     0,     0,     0,  3161,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2086,  3183,  3184,     0,     0,     0,
       0,  2087,     0,     0, -1814,   924,     0,     0,     0,  2089,
     925,     0,     0,   926,     0,     0,  3206,     0,     0,     0,
       0,     0,     0,     0,     0,  3216,     0,  3218,     0,  3220,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   927,     0,   928,     0,     0,     0,     0,     0,
       0,   929,     0,   930,     0,  2092,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   931,   932,   933,  2095,
       0,     0,     0,     0,     0,   818,     0,     0,     0,     0,
    3281,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   934,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   935,     0,     0,   818,   818,     0,     0,     0,
       0,     0,     0,     0,   818,     0,  2096,  2097,  2098,     0,
       0,     0,     0,     0,  2099,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
    2100,     0,  2467,     0,  2101,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3351,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2103,  3370,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     937,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   938,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   939,   940,     0,     0,   941,
     942,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   818,     0,
     943,     0,   818,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   818,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   818,     0,   944,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   945,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -2411,     0,     0,     0,     0,   946,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3512,
       0,     0,     0,     0,   947,   948,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   949,     0,     0,     0,     0,
       0,     0,     0,     0,  3530,     0,     0,     0,  3534,  3535,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3542,     0,     0,     0,     0,  3544,     0,     0,  3545,     0,
    3546,  3547,     0,     0,     0,     0,     0,     0,     0,   950,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -2411,     0,     0,     0,     0,     0,   951,     0,     0,     0,
       0,     0,     0,     0,   818,     0,     0,     0,     0,     0,
       0,     0,   818,     0,     0,     0,     0,     0,     0,   818,
       0,   818,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3578,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3578,     0,     0,     0,     0,  4182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   818,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3578,     0,     0,     0,     0,     0,
       0,     0,  3649,     0,     0,     0,     0,   818,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   818,     0,     0,     0,     0,     0,  4182,
    4182,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4295,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3734,  3735,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   818,     0,   818,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   818,     0,  4182,  4182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     818,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3578,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   818,     0,  4182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4182,   818,  3850,  3851,     0,     0,     0,     0,     0,     0,
       0,  3370,     0,     0,     0,     0,     0,     0,   818,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   818,  4182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4182,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4182,
       0,     0,     0,     0,     0,     0,   818,     0,     0,  4182,
       0,     0,     0,     0,     0,  4182,     0,     0,     0,   818,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     818,     0,     0,     0,     0,     0,     0,  4182,     0,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,  4182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4182,     0,
    4182,     0,  4182,     0,     0,  3370,     0,     0,     0,  3961,
       0,     0,     0,     0,     0,  4182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4182,  4182,
       0,     0,     0,     0,     0,     0,  3578,     0,     0,     0,
       0,     0,     0,     0,  4182,  4182,     0,     0,     0,  4182,
       0,  3370,     0,     0,     0,   818,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   818,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4120,
       0,     0,     0,     0,     0,     0,  4125,     0,  4127,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3370,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4262,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4345,     0,  4346,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4354,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3578,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4421,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4426,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4458,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4516,     0,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,  1719,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,  4590,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,  3578,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,   728,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,  1720,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,   744,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,  1721,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,  2463,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,  2464,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,  2465,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,   728,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,   744,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,  2466,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,  2290,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,   728,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,   744,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,  2292,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,   728,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,   744,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,  2294,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,   728,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,   744,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,   728,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,   744,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,   728,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,   744,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
    1120,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,  1754,     0,   143,     0,
       0,     0,  1755,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,   728,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,     0,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,  2744,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,   744,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,  2789,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,   744,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,  3577,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,   728,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,   744,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,   728,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,  4436,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,     0,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,   728,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,     0,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,  1769,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,     0,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   689,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   690,     0,   147,   148,
     149,   150,   691,   152,     0,   153,     0,     0,   692,   154,
     693,   694,   695,   155,   696,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,   697,   698,   163,
     164,     0,   165,   166,   699,   700,   168,     0,   169,   170,
     171,   172,   173,     0,   701,   175,     0,   702,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   703,   193,     0,   704,
     705,   194,     0,     0,   195,   706,   196,   707,     0,   197,
     708,   709,     0,   198,   199,   200,   710,   711,   712,     0,
       0,     0,     0,   713,   203,   714,     0,     0,   715,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   716,     0,   231,   232,   233,   234,
     235,   717,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   720,   243,     0,   244,     0,
     245,     0,   246,   721,   248,   722,     0,   250,     0,   251,
       0,   723,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   725,   258,   259,   260,   726,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     727,   266,   267,  1771,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,   729,   277,   278,
       0,     0,     0,     0,     0,   730,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,   732,   306,   307,   308,   309,   733,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     734,   317,     0,     0,   735,   319,   736,   320,     0,   321,
     737,   738,   739,   740,   741,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
     743,     0,   745,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   748,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,   749,   350,   351,     0,   352,   353,   750,   355,   356,
     357,   358,   751,   752,   361,   753,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   754,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   755,   756,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     757,     0,   758,   398,   399,   400,   401,   402,   759,   760,
     405,   406,   407,   408,     0,   761,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,   762,
     763,   440,   441,     0,   442,   443,   764,   445,   446,   447,
     765,   766,   448,   449,   450,   451,   767,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,   769,   770,   771,   772,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
     773,   774,   775,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   778,   488,   489,     0,     0,   779,
     780,   781,   782,   490,     0,     0,   491,   783,     0,   784,
     492,   493,   494,   785,   786,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   787,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   790,
     791,     0,     0,   792,   793,     0,     0,   794,   795,   137,
       0,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
     693,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   192,   193,     0,     0,
       0,   194,     0,     0,   195,     0,   196,     0,     0,   197,
       0,     0,     0,   198,   199,   200,     0,     0,  1807,     0,
       0,     0,     0,   202,   203,   714,     0,     0,     0,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,     0,     0,   231,   232,   233,   234,
     235,     0,   718,   236,   237,     0,   238,   239,   240,   719,
       0,   241,     0,     0,     0,   242,   243,     0,   244,     0,
     245,     0,   246,   247,   248,   249,     0,   250,     0,   251,
       0,     0,     0,   252,   253,     0,   254,   724,     0,   255,
     256,     0,     0,     0,   257,   258,   259,   260,     0,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
       0,   266,   267,     0,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,     0,   277,   278,
       0,     0,     0,     0,     0,   279,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,   731,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,     0,   306,   307,   308,   309,     0,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     316,   317,     0,     0,   318,   319,     0,   320,     0,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,   742,   331,   332,     0,     0,   333,   334,   335,   336,
       0,     0,     0,   337,   338,     0,   746,   747,   339,     0,
     340,   341,   342,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,     0,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     397,     0,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,     0,
       0,   440,   441,     0,   442,   443,   444,   445,   446,   447,
       0,     0,   448,   449,   450,   451,     0,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   768,   459,   460,
       0,   461,  1808,   463,   464,  1809,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
       0,   774,   474,   475,   476,   477,   776,   478,   479,   777,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   487,   488,   489,     0,     0,     0,
       0,     0,     0,   490,     0,     0,   491,     0,     0,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   502,
       0,     0,   137,     0,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,   794,   795,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,   188,  2577,   189,   190,   191,   192,
     193,     0,     0,     0,   194,     0,     0,   195,     0,   196,
       0,     0,   197,     0,     0,     0,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,   203,     0,     0,
       0,     0,   204,   205,     0,   206,     0,     0,     0,   207,
       0,   208,   209,   210,   211,   212,     0,     0,     0,   213,
       0,     0,   214,   215,   216,     0,     0,     0,   217,     0,
     218,   219,     0,   220,   221,   222,     0,     0,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,     0,   238,
     239,   240,     0,     0,   241,     0,     0,     0,   242,   243,
       0,   244,   517,   245,     0,   246,   247,   248,   249,     0,
     250,     0,   251,     0,     0,     0,   252,   253,     0,   254,
       0,     0,   255,   256,     0,     0,     0,   257,   258,   259,
     260,     0,     0,   261,   262,   263,  2130,   264,     0,   265,
       0,     0,     0,     0,   266,   267,     0,     0,     0,   268,
       0,     0,     0,   269,   270,     0,   271,   272,     0,     0,
       0,   273,  2131,     0,   274,   275,     0,     0,   276,     0,
       0,   277,   278,     0,  3143,     0,     0,     0,   279,   280,
       0,   281,     0,   282,     0,   283,   284,     0,     0,     0,
       0,     0,     0,     0,   285,     0,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,     0,   303,   304,   305,     0,   306,   307,
     308,   309,     0,   310,   311,     0,     0,     0,     0,   312,
     313,   314,   315,   316,   317,     0,     0,   318,   319,     0,
     320,     0,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,     0,   331,   332,     0,     0,   333,
     334,   335,   336,     0,     0,     0,   337,   338,     0,     0,
       0,   339,     0,   340,   341,   342,     0,   343,   344,   345,
       0,   346,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   347,   348,   349,     0,   350,   351,  2088,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,     0,   391,     0,   392,   393,     0,   394,
     395,   396,     0,   397,     0,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,     0,   409,   410,
    -478,     0,     0,   411,   412,   413,   414,     0,     0,     0,
     415,     0,     0,     0,   416,     0,   417,   418,   419,   420,
       0,   421,   422,   423,   424,   425,   520,     0,     0,     0,
       0,   426,   427,   428,     0,   429,   430,     0,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,     0,     0,     0,   440,   441,     0,   442,   443,   444,
     445,   446,   447,     0,     0,   448,   449,   450,   451,     0,
     452,   453,     0,     0,   454,   455,   456,   457,   458,     0,
       0,   459,   460,     0,   461,   462,   463,   464,   465,     0,
       0,     0,     0,   466,   467,   468,   469,   470,   471,     0,
     472,   473,     0,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,   480,   481,     0,   482,   483,     0,     0,
     484,     0,     0,   485,     0,   486,     0,   487,   488,   489,
       0,     0,     0,     0,     0,     0,   490,     0,     0,   491,
       0,     0,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,     0,   497,   498,     0,   499,   500,   501,
       0,     0,   502,   137,     0,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,   145,     0,     0,
     146,  2648,   147,   148,   149,   150,   151,   152,     0,   153,
       0,     0,     0,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,   160,   161,     0,     0,
     162,     0,     0,   163,   164,     0,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,     0,   174,   175,
       0,   176,   177,     0,   178,   179,   180,   181,   182,   183,
     184,   185,   186,     0,   187,   188,  2577,   189,   190,   191,
     192,   193,     0,     0,     0,   194,     0,     0,   195,     0,
     196,     0,     0,   197,     0,     0,     0,   198,   199,   200,
       0,     0,   201,     0,     0,     0,     0,   202,   203,     0,
       0,     0,     0,   204,   205,     0,   206,     0,     0,     0,
     207,     0,   208,   209,   210,   211,   212,     0,     0,     0,
     213,     0,     0,   214,   215,   216,     0,     0,     0,   217,
       0,   218,   219,     0,   220,   221,   222,     0,     0,   223,
     224,     0,   225,   226,   227,   228,   229,   230,     0,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,   239,   240,     0,     0,   241,     0,     0,     0,   242,
     243,     0,   244,   517,   245,     0,   246,   247,   248,   249,
       0,   250,     0,   251,     0,     0,     0,   252,   253,     0,
     254,     0,     0,   255,   256,     0,     0,     0,   257,   258,
     259,   260,     0,     0,   261,   262,   263,  2130,   264,     0,
     265,     0,     0,     0,     0,   266,   267,     0,     0,     0,
     268,     0,     0,     0,   269,   270,     0,   271,   272,     0,
       0,     0,   273,  2131,     0,   274,   275,     0,     0,   276,
       0,     0,   277,   278,     0,     0,     0,     0,     0,   279,
     280,     0,   281,     0,   282,     0,   283,   284,     0,     0,
       0,     0,     0,     0,     0,   285,     0,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,     0,   303,   304,   305,     0,   306,
     307,   308,   309,     0,   310,   311,     0,     0,     0,     0,
     312,   313,   314,   315,   316,   317,     0,     0,   318,   319,
       0,   320,     0,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,     0,     0,   331,   332,     0,     0,
     333,   334,   335,   336,     0,     0,     0,   337,   338,     0,
       0,     0,   339,     0,   340,   341,   342,     0,   343,   344,
     345,     0,   346,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   347,   348,   349,     0,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,     0,     0,   390,     0,   391,     0,   392,   393,     0,
     394,   395,   396,     0,   397,     0,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,     0,   411,   412,   413,   414,     0,     0,
       0,   415,     0,     0,     0,   416,     0,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,   520,     0,     0,
       0,     0,   426,   427,   428,     0,   429,   430,     0,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,     0,     0,     0,   440,   441,     0,   442,   443,
     444,   445,   446,   447,     0,     0,   448,   449,   450,   451,
       0,   452,   453,     0,     0,   454,   455,   456,   457,   458,
       0,     0,   459,   460,     0,   461,   462,   463,   464,   465,
       0,     0,     0,     0,   466,   467,   468,   469,   470,   471,
       0,   472,   473,     0,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,   480,   481,     0,   482,   483,     0,
       0,   484,     0,     0,   485,     0,   486,     0,   487,   488,
     489,     0,     0,     0,     0,     0,     0,   490,     0,     0,
     491,     0,     0,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,     0,   497,   498,     0,   499,   500,
     501,     0,     0,   502,   137,     0,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,   145,     0,
       0,   146,  2648,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,     0,   187,   188,     0,   189,   190,
     191,   192,   193,     0,     0,     0,   194,     0,     0,   195,
       0,   196,     0,     0,   197,     0,     0,     0,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,   203,
       0,     0,     0,     0,   204,   205,     0,   206,     0,     0,
       0,   207,     0,   208,   209,   210,   211,   212,     0,     0,
       0,   213,     0,     0,   214,   215,   216,     0,     0,     0,
     217,     0,   218,   219,     0,   220,   221,   222,     0,     0,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,   239,   240,     0,     0,   241,     0,     0,     0,
     242,   243,     0,   244,     0,   245,     0,   246,   247,   248,
     249,     0,   250,     0,   251,     0,     0,     0,   252,   253,
       0,   254,     0,     0,   255,   256,     0,     0,     0,   257,
     258,   259,   260,     0,     0,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,     0,   266,   267,     0,     0,
       0,   268,     0,     0,     0,   269,   270,     0,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,     0,     0,
     276,     0,     0,   277,   278,     0,     0,     0,     0,     0,
     279,   280,     0,   281,     0,   282,     0,   283,   284,     0,
       0,     0,     0,     0,     0,     0,   285,     0,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,     0,   303,   304,   305,     0,
     306,   307,   308,   309,     0,   310,   311,     0,     0,     0,
       0,   312,   313,   314,   315,   316,   317,     0,     0,   318,
     319,     0,   320,     0,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,     0,     0,   331,   332,     0,
       0,   333,   334,   335,   336,     0,     0,     0,   337,   338,
       0,     0,     0,   339,     0,   340,   341,   342,     0,   343,
     344,   345,     0,   346,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   347,   348,   349,     0,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,   364,     0,   365,     0,   366,   367,
     368,   369,   370,     0,   371,   372,   373,     0,     0,   374,
       0,     0,     0,   375,   376,   377,   378,   379,     0,     0,
     380,   381,   382,   383,   384,     0,   385,   386,     0,   387,
     388,   389,     0,     0,   390,     0,   391,     0,   392,   393,
       0,   394,   395,   396,     0,   397,     0,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,     0,
     409,   410,  2433,     0,     0,   411,   412,   413,   414,     0,
       0,     0,   415,     0,     0,     0,   416,     0,   417,   418,
     419,   420,     0,   421,   422,   423,   424,   425,     0,     0,
       0,     0,     0,   426,   427,   428,     0,   429,   430,     0,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,     0,     0,     0,   440,   441,     0,   442,
     443,   444,   445,   446,   447,     0,     0,   448,   449,   450,
     451,     0,   452,   453,     0,     0,   454,   455,   456,   457,
     458,     0,     0,   459,   460,     0,   461,   462,   463,   464,
     465,     0,     0,     0,     0,   466,   467,   468,   469,   470,
     471,     0,   472,   473,     0,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,   480,   481,     0,   482,   483,
       0,     0,   484,     0,     0,   485,     0,   486,     0,   487,
     488,   489,     0,     0,     0,     0,     0,     0,   490,     0,
       0,   491,     0,     0,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,     0,   497,   498,     0,   499,
     500,   501,     0,     0,   502,   137,     0,   138,   139,   140,
     141,   142,     0,     0,   143,     0,  2894,     0,   144,   145,
       0,     0,   146,   795,   147,   148,   149,   150,   151,   152,
       0,   153,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,   160,   161,
       0,     0,   162,     0,     0,   163,   164,     0,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,     0,
     174,   175,     0,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   186,     0,   187,   188,     0,   189,
     190,   191,   192,   193,     0,     0,     0,   194,     0,     0,
     195,     0,   196,     0,     0,   197,     0,     0,     0,   198,
     199,   200,     0,     0,   201,     0,     0,     0,     0,   202,
     203,     0,     0,     0,     0,   204,   205,     0,   206,     0,
       0,     0,   207,     0,   208,   209,   210,   211,   212,     0,
       0,     0,   213,     0,     0,   214,   215,   216,     0,     0,
       0,   217,     0,   218,   219,     0,   220,   221,   222,     0,
       0,   223,   224,     0,   225,   226,   227,   228,   229,   230,
       0,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,     0,     0,
       0,   242,   243,     0,   244,     0,   245,     0,   246,   247,
     248,   249,     0,   250,     0,   251,     0,     0,     0,   252,
     253,     0,   254,     0,     0,   255,   256,     0,     0,     0,
     257,   258,   259,   260,     0,     0,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,     0,   266,   267,     0,
       0,     0,   268,     0,     0,     0,   269,   270,     0,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,     0,
       0,   276,     0,     0,   277,   278,     0,     0,     0,     0,
       0,   279,   280,     0,   281,     0,   282,     0,   283,   284,
       0,     0,     0,     0,     0,     0,     0,   285,     0,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,     0,   303,   304,   305,
       0,   306,   307,   308,   309,     0,   310,   311,     0,     0,
       0,     0,   312,   313,   314,   315,   316,   317,     0,     0,
     318,   319,     0,   320,     0,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,     0,   331,   332,
       0,     0,   333,   334,   335,   336,     0,     0,     0,   337,
     338,     0,     0,     0,   339,     0,   340,   341,   342,     0,
     343,   344,   345,     0,   346,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   347,   348,   349,     0,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,     0,     0,   390,     0,   391,     0,   392,
     393,     0,   394,   395,   396,     0,   397,     0,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,     0,   411,   412,   413,   414,
       0,     0,     0,   415,     0,     0,     0,   416,     0,   417,
     418,   419,   420,     0,   421,   422,   423,   424,   425,     0,
       0,     0,     0,     0,   426,   427,   428,     0,   429,   430,
       0,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,     0,     0,     0,   440,   441,     0,
     442,   443,   444,   445,   446,   447,     0,     0,   448,   449,
     450,   451,     0,   452,   453,     0,     0,   454,   455,   456,
     457,   458,     0,     0,   459,   460,     0,   461,   462,   463,
     464,   465,     0,     0,     0,     0,   466,   467,   468,   469,
     470,   471,     0,   472,   473,     0,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,   480,   481,     0,   482,
     483,     0,     0,   484,     0,     0,   485,     0,   486,     0,
     487,   488,   489,     0,     0,     0,     0,     0,     0,   490,
       0,     0,   491,     0,     0,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,     0,   497,   498,     0,
     499,   500,   501,     0,     0,   502,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   137,  4580,   138,   139,
     140,   141,   142,  4581,   795,   143,     0,     0,     0,   144,
     145,     0,     0,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,     0,     0,     0,   154,     0,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,     0,     0,   163,   164,     0,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
       0,   174,   175,     0,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,   188,     0,
     189,   190,   191,   192,   193,     0,     0,     0,   194,     0,
       0,   195,     0,   196,     0,     0,   197,     0,     0,     0,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,   203,     0,     0,     0,     0,   204,   205,     0,   206,
       0,     0,     0,   207,     0,   208,   209,   210,   211,   212,
       0,     0,     0,   213,     0,     0,   214,   215,   216,     0,
       0,     0,   217,     0,   218,   219,     0,   220,   221,   222,
       0,     0,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,   239,   240,     0,     0,   241,     0,
       0,     0,   242,   243,     0,   244,     0,   245,     0,   246,
     247,   248,   249,     0,   250,     0,   251,     0,     0,     0,
     252,   253,     0,   254,     0,     0,   255,   256,     0,     0,
       0,   257,   258,   259,   260,     0,     0,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,     0,   266,   267,
       0,     0,     0,   268,     0,     0,     0,   269,   270,     0,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
       0,     0,   276,     0,     0,   277,   278,     0,     0,     0,
       0,     0,   279,   280,     0,   281,     0,   282,     0,   283,
     284,     0,     0,     0,     0,     0,     0,     0,   285,     0,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,     0,   303,   304,
     305,     0,   306,   307,   308,   309,     0,   310,   311,     0,
       0,     0,     0,   312,   313,   314,   315,   316,   317,     0,
       0,   318,   319,     0,   320,     0,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,     0,     0,   331,
     332,     0,     0,   333,   334,   335,   336,     0,     0,     0,
     337,   338,     0,     0,     0,   339,     0,   340,   341,   342,
       0,   343,   344,   345,     0,   346,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   347,   348,   349,     0,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,   386,
       0,   387,   388,   389,     0,     0,   390,     0,   391,     0,
     392,   393,     0,   394,   395,   396,     0,   397,     0,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,     0,   411,   412,   413,
     414,     0,     0,     0,   415,     0,     0,     0,   416,     0,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
       0,     0,     0,     0,     0,   426,   427,   428,     0,   429,
     430,     0,   431,     0,     0,   432,     0,     0,   433,   434,
     435,   436,   437,   438,   439,     0,     0,     0,   440,   441,
       0,   442,   443,   444,   445,   446,   447,     0,     0,   448,
     449,   450,   451,     0,   452,   453,     0,     0,   454,   455,
     456,   457,   458,     0,     0,   459,   460,     0,   461,   462,
     463,   464,   465,     0,     0,     0,     0,   466,   467,   468,
     469,   470,   471,     0,   472,   473,     0,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,   480,   481,     0,
     482,   483,     0,     0,   484,     0,     0,   485,     0,   486,
       0,   487,   488,   489,     0,     0,     0,     0,     0,     0,
     490,     0,     0,   491,     0,     0,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,     0,   497,   498,
       0,   499,   500,   501,     0,     0,   502,   137,     0,   138,
     139,   140,   141,   142,     0,     0,   143,  1124,     0,     0,
     144,   145,     0,     0,   146,   795,   147,   148,   149,   150,
     151,   152,     0,   153,     0,     0,     0,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
     160,   161,     0,     0,   162,     0,     0,   163,   164,     0,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,     0,   174,   175,     0,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,     0,   187,   188,
       0,   189,   190,   191,   192,   193,     0,     0,     0,   194,
       0,     0,   195,     0,   196,     0,     0,   197,     0,     0,
       0,   198,   199,   200,     0,     0,   201,     0,     0,     0,
       0,   202,   203,     0,     0,     0,     0,   204,   205,     0,
     206,     0,     0,     0,   207,     0,   208,   209,   210,   211,
     212,     0,     0,     0,   213,     0,     0,   214,   215,   216,
       0,     0,     0,   217,     0,   218,   219,     0,   220,   221,
     222,     0,     0,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,   239,   240,     0,     0,   241,
       0,     0,     0,   242,   243,     0,   244,     0,   245,     0,
     246,   247,   248,   249,     0,   250,     0,   251,     0,     0,
       0,   252,   253,     0,   254,     0,     0,   255,   256,     0,
       0,     0,   257,   258,   259,   260,     0,     0,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,     0,   266,
     267,     0,  1346,     0,   268,     0,     0,     0,   269,   270,
       0,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,     0,     0,   276,     0,     0,   277,   278,     0,     0,
       0,     0,     0,   279,   280,     0,   281,     0,   282,     0,
     283,   284,     0,     0,     0,     0,     0,     0,     0,   285,
       0,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,     0,   303,
     304,   305,     0,   306,   307,   308,   309,     0,   310,   311,
       0,     0,     0,     0,   312,   313,   314,   315,   316,   317,
       0,     0,   318,   319,     0,   320,     0,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,     0,
     331,   332,     0,     0,   333,   334,   335,   336,     0,     0,
       0,   337,   338,     0,     0,     0,   339,     0,   340,   341,
     342,     0,   343,   344,   345,     0,   346,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   347,   348,   349,     0,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,     0,     0,   390,     0,   391,
       0,   392,   393,     0,   394,   395,   396,     0,   397,     0,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,     0,   411,   412,
     413,   414,     0,     0,     0,   415,     0,     0,     0,   416,
       0,   417,   418,   419,   420,     0,   421,   422,   423,   424,
     425,     0,     0,     0,     0,     0,   426,   427,   428,     0,
     429,   430,     0,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,     0,     0,     0,   440,
     441,     0,   442,   443,   444,   445,   446,   447,     0,     0,
     448,   449,   450,   451,     0,   452,   453,     0,     0,   454,
     455,   456,   457,   458,     0,     0,   459,   460,     0,   461,
     462,   463,   464,   465,     0,     0,     0,     0,   466,   467,
     468,   469,   470,   471,     0,   472,   473,     0,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,   480,   481,
       0,   482,   483,     0,     0,   484,     0,     0,   485,     0,
     486,     0,   487,   488,   489,     0,     0,     0,     0,     0,
       0,   490,     0,     0,   491,     0,     0,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,     0,   497,
     498,     0,   499,   500,   501,     0,     0,   502,   137,     0,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,     0,   146,   557,   147,   148,   149,
     150,   151,   152,     0,   153,     0,     0,     0,   154,     0,
       0,     0,   155,     0,     0,   156,   157,   158,     0,   159,
       0,   160,   161,     0,     0,   162,     0,     0,   163,   164,
       0,   165,   166,   167,     0,   168,     0,   169,   170,   171,
     172,   173,     0,   174,   175,     0,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,     0,   187,
     188,     0,   189,   190,   191,   192,   193,     0,     0,     0,
     194,     0,     0,   195,     0,   196,     0,     0,   197,     0,
       0,     0,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,   203,     0,     0,     0,     0,   204,   205,
       0,   206,     0,     0,     0,   207,     0,   208,   209,   210,
     211,   212,     0,     0,     0,   213,     0,     0,   214,   215,
     216,     0,     0,     0,   217,     0,   218,   219,     0,   220,
     221,   222,     0,     0,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,   239,   240,     0,     0,
     241,     0,     0,     0,   242,   243,     0,   244,     0,   245,
       0,   246,   247,   248,   249,     0,   250,     0,   251,     0,
       0,     0,   252,   253,     0,   254,     0,     0,   255,   256,
       0,     0,     0,   257,   258,   259,   260,     0,     0,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,     0,
     266,   267,     0,     0,     0,   268,     0,     0,     0,   269,
     270,     0,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,     0,     0,   276,     0,     0,   277,   278,     0,
       0,     0,     0,     0,   279,   280,     0,   281,     0,   282,
       0,   283,   284,     0,     0,     0,     0,     0,     0,     0,
     285,     0,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,     0,
     303,   304,   305,     0,   306,   307,   308,   309,     0,   310,
     311,     0,     0,     0,     0,   312,   313,   314,   315,   316,
     317,     0,     0,   318,   319,     0,   320,     0,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,     0,
       0,   331,   332,     0,     0,   333,   334,   335,   336,     0,
       0,     0,   337,   338,     0,     0,     0,   339,     0,   340,
     341,   342,     0,   343,   344,   345,     0,   346,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   347,   348,   349,
       0,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,   364,     0,
     365,     0,   366,   367,   368,   369,   370,     0,   371,   372,
     373,     0,     0,   374,     0,     0,     0,   375,   376,   377,
     378,   379,     0,     0,   380,   381,   382,   383,   384,     0,
     385,   386,     0,   387,   388,   389,     0,     0,   390,     0,
     391,     0,   392,   393,     0,   394,   395,   396,     0,   397,
       0,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,     0,   409,   410,     0,     0,     0,   411,
     412,   413,   414,     0,     0,     0,   415,     0,     0,     0,
     416,     0,   417,   418,   419,   420,     0,   421,   422,   423,
     424,   425,     0,     0,     0,     0,     0,   426,   427,   428,
       0,   429,   430,     0,   431,     0,     0,   432,     0,     0,
     433,   434,   435,   436,   437,   438,   439,     0,     0,     0,
     440,   441,     0,   442,   443,   444,   445,   446,   447,     0,
       0,   448,   449,   450,   451,     0,   452,   453,     0,     0,
     454,   455,   456,   457,   458,     0,     0,   459,   460,     0,
     461,   462,   463,   464,   465,     0,     0,     0,     0,   466,
     467,   468,   469,   470,   471,     0,   472,   473,     0,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,   480,
     481,     0,   482,   483,     0,     0,   484,     0,     0,   485,
       0,   486,     0,   487,   488,   489,     0,     0,     0,     0,
       0,     0,   490,     0,     0,   491,     0,     0,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,     0,
     497,   498,     0,   499,   500,   501,     0,     0,   502,   137,
       0,   138,   139,   140,   141,   142,     0,     0,   143,  2647,
       0,     0,   144,   145,     0,     0,   146,  2648,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   192,   193,     0,     0,
       0,   194,     0,     0,   195,     0,   196,     0,     0,   197,
       0,     0,     0,   198,   199,   200,     0,     0,   201,     0,
       0,     0,     0,   202,   203,     0,     0,     0,     0,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,     0,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,   239,   240,     0,
       0,   241,     0,     0,     0,   242,   243,     0,   244,     0,
     245,     0,   246,   247,   248,   249,     0,   250,     0,   251,
       0,     0,     0,   252,   253,     0,   254,     0,     0,   255,
     256,     0,     0,     0,   257,   258,   259,   260,     0,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
       0,   266,   267,     0,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,     0,   277,   278,
       0,     0,     0,     0,     0,   279,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,     0,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,     0,   306,   307,   308,   309,     0,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     316,   317,     0,     0,   318,   319,     0,   320,     0,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,     0,   331,   332,     0,     0,   333,   334,   335,   336,
       0,     0,     0,   337,   338,     0,     0,     0,   339,     0,
     340,   341,   342,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,     0,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     397,     0,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,     0,
       0,   440,   441,     0,   442,   443,   444,   445,   446,   447,
       0,     0,   448,   449,   450,   451,     0,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,     0,   459,   460,
       0,   461,   462,   463,   464,   465,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   487,   488,   489,     0,     0,     0,
       0,     0,     0,   490,     0,     0,   491,     0,     0,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   502,
       0,     0,     0,     0,     0,  2856,   137,     0,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,   557,   144,
     145,     0,     0,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,     0,     0,     0,   154,     0,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,     0,     0,   163,   164,     0,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
       0,   174,   175,     0,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,   188,     0,
     189,   190,   191,   192,   193,     0,     0,     0,   194,     0,
       0,   195,     0,   196,     0,     0,   197,     0,     0,     0,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,   203,     0,     0,     0,     0,   204,   205,     0,   206,
       0,     0,     0,   207,     0,   208,   209,   210,   211,   212,
       0,     0,     0,   213,     0,     0,   214,   215,   216,     0,
       0,     0,   217,     0,   218,   219,     0,   220,   221,   222,
       0,     0,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,   239,   240,     0,     0,   241,     0,
       0,     0,   242,   243,     0,   244,     0,   245,     0,   246,
     247,   248,   249,     0,   250,     0,   251,     0,     0,     0,
     252,   253,     0,   254,     0,     0,   255,   256,     0,     0,
       0,   257,   258,   259,   260,     0,     0,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,     0,   266,   267,
       0,     0,     0,   268,     0,     0,     0,   269,   270,     0,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
       0,     0,   276,     0,     0,   277,   278,     0,     0,     0,
       0,     0,   279,   280,     0,   281,     0,   282,     0,   283,
     284,     0,     0,     0,     0,     0,     0,     0,   285,     0,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,     0,   303,   304,
     305,     0,   306,   307,   308,   309,     0,   310,   311,     0,
       0,     0,     0,   312,   313,   314,   315,   316,   317,     0,
       0,   318,   319,     0,   320,     0,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,     0,     0,   331,
     332,     0,     0,   333,   334,   335,   336,     0,     0,     0,
     337,   338,     0,     0,     0,   339,     0,   340,   341,   342,
       0,   343,   344,   345,     0,   346,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   347,   348,   349,     0,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,   386,
       0,   387,   388,   389,     0,     0,   390,     0,   391,     0,
     392,   393,     0,   394,   395,   396,     0,   397,     0,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,     0,   411,   412,   413,
     414,     0,     0,     0,   415,     0,     0,     0,   416,     0,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
       0,     0,     0,     0,     0,   426,   427,   428,     0,   429,
     430,     0,   431,     0,     0,   432,     0,     0,   433,   434,
     435,   436,   437,   438,   439,     0,     0,     0,   440,   441,
       0,   442,   443,   444,   445,   446,   447,     0,     0,   448,
     449,   450,   451,     0,   452,   453,     0,     0,   454,   455,
     456,   457,   458,     0,     0,   459,   460,     0,   461,   462,
     463,   464,   465,     0,     0,     0,     0,   466,   467,   468,
     469,   470,   471,     0,   472,   473,     0,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,   480,   481,     0,
     482,   483,     0,     0,   484,     0,     0,   485,     0,   486,
       0,   487,   488,   489,     0,     0,     0,     0,     0,     0,
     490,     0,     0,   491,     0,     0,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,     0,   497,   498,
       0,   499,   500,   501,     0,     0,   502,     0,     0,   137,
       0,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,  4581,   795,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   192,   193,     0,     0,
       0,   194,     0,     0,   195,     0,   196,     0,     0,   197,
       0,     0,     0,   198,   199,   200,     0,     0,   201,     0,
       0,     0,     0,   202,   203,     0,     0,     0,     0,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,     0,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,   239,   240,     0,
       0,   241,     0,     0,     0,   242,   243,     0,   244,     0,
     245,     0,   246,   247,   248,   249,     0,   250,     0,   251,
       0,     0,     0,   252,   253,     0,   254,     0,     0,   255,
     256,     0,     0,     0,   257,   258,   259,   260,     0,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
       0,   266,   267,     0,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,     0,   277,   278,
       0,     0,     0,     0,     0,   279,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,     0,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,     0,   306,   307,   308,   309,     0,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     316,   317,     0,     0,   318,   319,     0,   320,     0,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,     0,   331,   332,     0,     0,   333,   334,   335,   336,
       0,     0,     0,   337,   338,     0,     0,     0,   339,     0,
     340,   341,   342,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,     0,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     397,     0,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,     0,
       0,   440,   441,     0,   442,   443,   444,   445,   446,   447,
       0,     0,   448,   449,   450,   451,     0,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,     0,   459,   460,
       0,   461,   462,   463,   464,   465,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   487,   488,   489,     0,     0,     0,
       0,     0,     0,   490,     0,     0,   491,     0,     0,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   502,
     137,     0,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,   145,     0,     0,   146,   557,   147,
     148,   149,   150,   151,   152,     0,   153,     0,     0,     0,
     154,     0,     0,     0,   155,     0,     0,   156,   157,   158,
       0,   159,     0,   160,   161,     0,     0,   162,     0,     0,
     163,   164,     0,   165,   166,   167,     0,   168,     0,   169,
     170,   171,   172,   173,     0,   174,   175,     0,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,   188,     0,   189,   190,   191,   192,   193,     0,
       0,     0,   194,     0,     0,   195,     0,   196,     0,     0,
     197,     0,     0,     0,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,   203,     0,     0,     0,     0,
     204,   205,     0,   206,     0,     0,     0,   207,     0,   208,
     209,   210,   211,   212,     0,     0,     0,   213,     0,     0,
     214,   215,   216,     0,     0,     0,   217,     0,   218,   219,
       0,   220,   221,   222,     0,     0,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,     0,   231,   232,   233,
     626,   235,     0,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,     0,     0,     0,   627,   243,     0,   244,
       0,   245,     0,   246,   247,   248,   249,     0,   250,     0,
     251,     0,     0,     0,   252,   253,     0,   254,     0,     0,
     255,   256,     0,     0,     0,   257,   258,   259,   260,     0,
       0,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,     0,   266,   267,     0,     0,     0,   268,     0,     0,
       0,   269,   270,     0,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,     0,     0,   276,     0,     0,   277,
     278,     0,     0,     0,     0,     0,   279,   280,     0,   281,
       0,   282,     0,   283,   284,     0,     0,     0,     0,     0,
       0,     0,   285,     0,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,     0,   303,   304,   305,     0,   306,   307,   308,   309,
       0,   310,   311,     0,     0,     0,     0,   312,   313,   314,
     315,   316,   317,     0,     0,   318,   319,     0,   320,     0,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,     0,     0,   331,   332,     0,     0,   333,   334,   335,
     336,     0,     0,     0,   337,   338,     0,     0,     0,   339,
       0,   340,   341,   342,     0,   343,   344,   345,     0,   346,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   347,
     348,   349,     0,   350,   351,     0,   628,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
     364,     0,   365,     0,   366,   367,   368,   369,   370,     0,
     371,   372,   373,     0,     0,   374,     0,     0,     0,   375,
     376,   377,   378,   379,     0,     0,   380,   381,   382,   383,
     384,     0,   385,   386,     0,   387,   388,   389,     0,     0,
     390,     0,   391,     0,   392,   393,     0,   394,   395,   396,
       0,   397,     0,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
       0,   411,   412,   413,   414,     0,     0,     0,   415,     0,
       0,     0,   416,     0,   417,   418,   419,   420,     0,   421,
     422,   423,   424,   425,     0,     0,     0,     0,     0,   426,
     427,   428,     0,   429,   430,     0,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,   439,     0,
       0,     0,   440,   441,     0,   442,   443,   444,   445,   446,
     447,     0,     0,   448,   449,   450,   451,     0,   452,   453,
       0,     0,   454,   455,   456,   457,   458,     0,     0,   459,
     460,     0,   461,   462,   463,   464,   465,     0,     0,     0,
       0,   466,   467,   468,   469,   470,   471,     0,   472,   473,
       0,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,   480,   481,     0,   482,   483,     0,     0,   484,     0,
       0,   485,     0,   486,     0,   487,   488,   489,     0,     0,
       0,     0,     0,     0,   490,     0,     0,   491,     0,     0,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,     0,   497,   498,     0,   499,   500,   501,     0,     0,
     502,   137,     0,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,   145,     0,     0,   146,   557,
     147,   148,   149,   150,   151,   152,     0,   153,     0,     0,
       0,   154,     0,     0,     0,   155,     0,     0,   156,   157,
     158,     0,   159,     0,   160,   161,     0,     0,   162,     0,
       0,   163,   164,     0,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,     0,   174,   175,     0,   176,
     177,     0,   178,   179,   180,   181,   182,   183,   184,   185,
     186,     0,   187,   188,     0,   189,   190,   191,   192,   193,
       0,     0,     0,   194,     0,     0,   195,     0,   196,     0,
       0,   197,     0,     0,     0,   198,   199,   200,     0,     0,
     201,     0,     0,     0,     0,   202,   203,     0,     0,     0,
       0,   204,   205,     0,   206,     0,     0,     0,   207,     0,
     208,   209,   210,   211,   212,     0,     0,     0,   213,     0,
       0,   214,   215,   216,     0,     0,     0,   217,     0,   218,
     219,     0,   220,   221,   222,     0,     0,   223,   224,     0,
     225,   226,   227,   228,   229,   230,     0,     0,   231,   232,
     233,   234,   235,     0,     0,   236,   237,     0,   238,   239,
     240,     0,     0,   241,     0,     0,     0,   242,   243,     0,
     244,     0,   245,     0,   246,   247,   248,   249,     0,   250,
       0,   251,     0,     0,     0,   252,   253,     0,   254,     0,
       0,   255,   256,     0,     0,     0,   257,   258,   259,   260,
       0,     0,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,     0,   266,   267,     0,     0,     0,   268,     0,
       0,     0,   269,   270,     0,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,     0,     0,   276,     0,     0,
     277,   278,     0,     0,     0,     0,     0,   279,   280,     0,
     281,     0,   282,     0,   283,   284,     0,     0,     0,     0,
       0,     0,     0,   285,     0,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,     0,   303,   304,   305,     0,   306,   307,   308,
     309,     0,   310,   311,     0,     0,     0,     0,   312,   313,
     314,   315,   316,   317,     0,     0,   318,   319,     0,   320,
       0,   321,     0,   322,   323,   324,   325,   326,   327,   328,
     329,   330,     0,     0,   331,   332,     0,     0,   333,   334,
     335,   336,     0,     0,     0,   337,   338,     0,     0,     0,
     339,     0,   340,   341,   342,     0,   343,   344,   345,     0,
     346,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     347,   348,   349,     0,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,     0,   391,     0,   392,   393,     0,   394,   395,
     396,     0,   397,     0,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,     0,   411,   412,   413,   414,     0,     0,     0,   415,
       0,     0,     0,   416,     0,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,     0,     0,     0,     0,     0,
     426,   427,   428,     0,   429,   430,     0,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
       0,     0,     0,   440,   441,     0,   442,   443,   444,   445,
     446,   447,     0,     0,   448,   449,   450,   451,     0,   452,
     453,     0,     0,   454,   455,   456,   457,   458,     0,     0,
     459,   460,     0,   461,   462,   463,   464,   465,     0,     0,
       0,     0,   466,   467,   468,   469,   470,   471,     0,   472,
     473,     0,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,   480,   481,     0,   482,   483,     0,     0,   484,
       0,     0,   485,     0,   486,     0,   487,   488,   489,     0,
       0,     0,     0,     0,     0,   490,     0,     0,   491,     0,
       0,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,     0,   497,   498,     0,   499,   500,   501,     0,
       0,   502,   137,     0,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   146,
     795,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,   188,     0,   189,   190,   191,   192,
     193,     0,     0,     0,   194,     0,     0,   195,     0,   196,
       0,     0,   197,     0,     0,     0,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,   203,     0,     0,
       0,     0,   204,   205,     0,   206,     0,     0,     0,   207,
       0,   208,   209,   210,   211,   212,     0,     0,     0,   213,
       0,     0,   214,   215,   216,     0,     0,     0,   217,     0,
     218,   219,     0,   220,   221,   222,     0,     0,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,     0,   238,
     239,   240,     0,     0,   241,     0,     0,     0,   242,   243,
       0,   244,     0,   245,     0,   246,   247,   248,   249,     0,
     250,     0,   251,     0,     0,     0,   252,   253,     0,   254,
       0,     0,   255,   256,     0,     0,     0,   257,   258,   259,
     260,     0,     0,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,     0,   266,   267,     0,     0,     0,   268,
       0,     0,     0,   269,   270,     0,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,     0,     0,   276,     0,
       0,   277,   278,     0,     0,     0,     0,     0,   279,   280,
       0,   281,     0,   282,     0,   283,   284,     0,     0,     0,
       0,     0,     0,     0,   285,     0,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,     0,   303,   304,   305,     0,   306,   307,
     308,   309,     0,   310,   311,     0,     0,     0,     0,   312,
     313,   314,   315,   316,   317,     0,     0,   318,   319,     0,
     320,     0,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,     0,   331,   332,     0,     0,   333,
     334,   335,   336,     0,     0,     0,   337,   338,     0,     0,
       0,   339,     0,   340,   341,   342,     0,   343,   344,   345,
       0,   346,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   347,   348,   349,     0,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,     0,   391,     0,   392,   393,     0,   394,
     395,   396,     0,   397,     0,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,     0,   411,   412,   413,   414,     0,     0,     0,
     415,     0,     0,     0,   416,     0,   417,   418,   419,   420,
       0,   421,   422,   423,   424,   425,     0,     0,     0,     0,
       0,   426,   427,   428,     0,   429,   430,     0,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,     0,     0,     0,   440,   441,     0,   442,   443,   444,
     445,   446,   447,     0,     0,   448,   449,   450,   451,     0,
     452,   453,     0,     0,   454,   455,   456,   457,   458,     0,
       0,   459,   460,     0,   461,   462,   463,   464,   465,     0,
       0,     0,     0,   466,   467,   468,   469,   470,   471,     0,
     472,   473,     0,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,   480,   481,     0,   482,   483,     0,     0,
     484,     0,     0,   485,     0,   486,     0,   487,   488,   489,
       0,     0,     0,     0,     0,     0,   490,     0,     0,   491,
       0,     0,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,     0,   497,   498,     0,   499,   500,   501,
       0,     0,   502,   137,     0,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,   145,     0,     0,
     146,  2648,   147,   148,   149,   150,   151,   152,     0,   153,
       0,     0,     0,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,   160,   161,     0,     0,
     162,     0,     0,   163,   164,     0,   165,   166,   901,   902,
     168,     0,   169,   170,   171,   172,   173,     0,   174,   175,
       0,   176,   177,     0,   178,   179,   180,   181,   182,   183,
     184,   185,   186,     0,   187,   188,     0,   189,   190,   191,
     192,   193,     0,     0,     0,   194,     0,     0,   195,     0,
     196,     0,     0,   197,     0,     0,     0,   198,   199,   200,
       0,     0,   201,     0,     0,     0,     0,   202,   203,     0,
       0,     0,   903,   204,   205,     0,   206,     0,     0,     0,
     207,     0,   208,   209,   210,   211,   212,     0,     0,     0,
     213,     0,     0,   214,   215,   216,     0,     0,     0,   217,
       0,   218,   219,     0,   220,   221,   222,     0,     0,   223,
     224,     0,   225,   226,   227,   228,   229,   230,     0,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,   239,   240,     0,     0,   241,     0,     0,     0,   242,
     243,     0,   244,     0,   245,     0,   246,   247,   248,   249,
       0,   904,     0,   251,     0,     0,     0,   252,   253,     0,
     254,     0,     0,   255,   256,     0,     0,     0,   257,   258,
     259,   260,     0,     0,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,     0,   266,   267,     0,     0,     0,
     268,     0,     0,     0,   269,   270,     0,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,     0,     0,   276,
       0,     0,   277,   278,     0,     0,     0,     0,     0,   279,
     280,     0,   905,     0,   282,     0,   283,   284,     0,     0,
       0,     0,     0,     0,     0,   285,     0,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,     0,   303,   304,   305,     0,   306,
     307,   308,   309,     0,   310,   311,     0,     0,     0,     0,
     312,   313,   314,   315,   316,   317,     0,     0,   318,   319,
       0,   320,     0,   321,     0,   322,   323,   324,   325,   326,
     327,   906,   329,   330,     0,     0,   331,   332,     0,     0,
     333,   334,   335,   336,     0,     0,     0,   337,   338,     0,
       0,     0,   339,     0,   340,   341,   342,     0,   343,   344,
     345,     0,   346,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   347,   348,   349,     0,   350,   351,     0,   352,
     353,   907,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,     0,     0,   390,     0,   391,     0,   392,   393,     0,
     394,   395,   396,     0,   397,     0,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,     0,   411,   412,   908,   414,     0,     0,
       0,   415,     0,     0,     0,   416,     0,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,     0,     0,     0,
       0,     0,   426,   427,   428,     0,   429,   430,     0,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,     0,     0,     0,   440,   441,     0,   442,   443,
     444,   445,   446,   447,     0,     0,   448,   449,   450,   451,
       0,   452,   453,     0,     0,   454,   455,   456,   457,   458,
       0,     0,   459,   460,     0,   461,   462,   463,   464,   465,
       0,     0,     0,     0,   466,   467,   468,   469,   470,   471,
       0,   909,   473,     0,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,   480,   481,     0,   482,   483,     0,
       0,   484,     0,     0,   485,     0,   486,     0,   487,   488,
     489,     0,     0,     0,     0,     0,     0,   490,     0,     0,
     491,     0,     0,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,     0,   497,   498,     0,   499,   500,
     501,     0,     0,   502,     0,   137,     0,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,   145,
       0,   910,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,   160,   161,
       0,     0,   162,     0,     0,   163,   164,     0,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,     0,
     174,   175,     0,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   186,     0,   187,   188,     0,   189,
     190,   191,   192,   193,     0,     0,     0,   194,     0,     0,
     195,     0,   196,     0,     0,   197,     0,     0,     0,   198,
     199,   200,     0,     0,   201,     0,     0,     0,     0,   202,
     203,     0,     0,     0,     0,   204,   205,     0,   206,     0,
       0,     0,   207,     0,   208,   209,   210,   211,   212,     0,
       0,     0,   213,     0,     0,   214,   215,   216,     0,     0,
       0,   217,     0,   218,   219,     0,   220,   221,   222,     0,
       0,   223,   224,     0,   225,   226,   227,   228,   229,   230,
       0,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,     0,     0,
       0,   242,   243,     0,   244,     0,   245,     0,   246,   247,
     248,   249,     0,   250,     0,   251,     0,     0,     0,   252,
     253,     0,   254,     0,     0,   255,   256,     0,     0,     0,
     257,   258,   259,   260,     0,     0,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,     0,   266,   267,     0,
       0,     0,   268,     0,     0,     0,   269,   270,     0,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,     0,
       0,   276,     0,     0,   277,   278,   639,     0,     0,     0,
       0,   279,   280,     0,   281,     0,   282,     0,   283,   284,
       0,     0,     0,     0,     0,     0,     0,   285,     0,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,     0,   303,   304,   305,
       0,   306,   307,   308,   309,     0,   310,   311,     0,     0,
       0,     0,   312,   313,   314,   315,   316,   317,     0,     0,
     318,   319,     0,   320,     0,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,     0,   331,   332,
       0,     0,   333,   334,   335,   336,     0,     0,     0,   337,
     338,     0,     0,     0,   339,     0,   340,   341,   342,     0,
     343,   344,   345,     0,   346,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   347,   348,   349,     0,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,     0,     0,   390,     0,   391,     0,   392,
     393,     0,   394,   395,   396,     0,   397,     0,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,     0,   411,   412,   413,   414,
       0,     0,     0,   415,     0,     0,     0,   416,     0,   417,
     418,   419,   420,     0,   421,   422,   423,   424,   425,     0,
       0,     0,     0,     0,   426,   427,   428,     0,   429,   430,
       0,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,     0,     0,     0,   440,   441,     0,
     442,   443,   444,   445,   446,   447,     0,     0,   448,   449,
     450,   451,     0,   452,   453,     0,     0,   454,   455,   456,
     457,   458,     0,   134,   459,   460,     0,   461,   462,   463,
     464,   465,     0,     0,     0,     0,   466,   467,   468,   469,
     470,   471,     0,   472,   473,     0,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,   480,   481,     0,   482,
     483,     0,     0,   484,     0,     0,   485,     0,   486,     0,
     487,   488,   489,     0,     0,     0,     0,     0,     0,   490,
       0,     0,   491,     0,     0,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,     0,   497,   498,     0,
     499,   500,   501,     0,     0,   502,     0,   137,     0,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,   145,     0,  1400,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,     0,     0,     0,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
     160,   161,     0,     0,   162,     0,     0,   163,   164,     0,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,     0,   174,   175,     0,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,     0,   187,   188,
       0,   189,   190,   191,   192,   193,     0,     0,     0,   194,
       0,     0,   195,     0,   196,     0,     0,   197,     0,     0,
       0,   198,   199,   200,     0,     0,   201,     0,     0,     0,
       0,   202,   203,     0,     0,     0,     0,   204,   205,     0,
     206,     0,     0,     0,   207,     0,   208,   209,   210,   211,
     212,     0,     0,     0,   213,     0,     0,   214,   215,   216,
       0,     0,     0,   217,     0,   218,   219,     0,   220,   221,
     222,     0,     0,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,   239,   240,     0,     0,   241,
       0,     0,     0,   242,   243,     0,   244,     0,   245,     0,
     246,   247,   248,   249,     0,   250,     0,   251,     0,     0,
       0,   252,   253,     0,   254,     0,     0,   255,   256,     0,
       0,     0,   257,   258,   259,   260,     0,     0,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,     0,   266,
     267,     0,     0,     0,   268,     0,     0,     0,   269,   270,
       0,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,     0,     0,   276,     0,     0,   277,   278,   639,     0,
       0,     0,     0,   279,   280,     0,   281,     0,   282,     0,
     283,   284,     0,     0,     0,     0,     0,     0,     0,   285,
       0,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,     0,   303,
     304,   305,     0,   306,   307,   308,   309,     0,   310,   311,
       0,     0,     0,     0,   312,   313,   314,   315,   316,   317,
       0,     0,   318,   319,     0,   320,     0,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,     0,
     331,   332,     0,     0,   333,   334,   335,   336,     0,     0,
       0,   337,   338,     0,     0,     0,   339,     0,   340,   341,
     342,     0,   343,   344,   345,     0,   346,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   347,   348,   349,     0,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,     0,     0,   390,     0,   391,
       0,   392,   393,     0,   394,   395,   396,     0,   397,     0,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,     0,   411,   412,
     413,   414,     0,     0,     0,   415,     0,     0,     0,   416,
       0,   417,   418,   419,   420,     0,   421,   422,   423,   424,
     425,     0,     0,     0,     0,     0,   426,   427,   428,     0,
     429,   430,     0,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,     0,     0,     0,   440,
     441,     0,   442,   443,   444,   445,   446,   447,     0,     0,
     448,   449,   450,   451,     0,   452,   453,     0,     0,   454,
     455,   456,   457,   458,     0,   134,   459,   460,     0,   461,
     462,   463,   464,   465,     0,     0,     0,     0,   466,   467,
     468,   469,   470,   471,     0,   472,   473,     0,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,   480,   481,
       0,   482,   483,     0,     0,   484,     0,     0,   485,     0,
     486,     0,   487,   488,   489,     0,     0,     0,     0,     0,
       0,   490,     0,     0,   491,     0,     0,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,     0,   497,
     498,     0,   499,   500,   501,     0,     0,   502,     0,   137,
       0,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,  1741,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   901,   902,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   192,   193,     0,     0,
       0,   194,     0,     0,   195,     0,   196,     0,     0,   197,
       0,     0,     0,   198,   199,   200,     0,     0,   201,     0,
       0,     0,     0,   202,   203,     0,     0,     0,   903,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,     0,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,   239,   240,     0,
       0,   241,     0,     0,     0,   242,   243,     0,   244,     0,
     245,     0,   246,   247,   248,   249,     0,   904,     0,   251,
       0,     0,     0,   252,   253,     0,   254,     0,     0,   255,
     256,     0,     0,     0,   257,   258,   259,   260,     0,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
       0,   266,   267,     0,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,     0,   277,   278,
       0,     0,     0,     0,     0,   279,   280,     0,   905,     0,
     282,     0,   283,   284,     0,     0,     0,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,     0,   306,   307,   308,   309,     0,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     316,   317,     0,     0,   318,   319,     0,   320,     0,   321,
       0,   322,   323,   324,   325,   326,   327,   906,   329,   330,
       0,     0,   331,   332,     0,     0,   333,   334,   335,   336,
       0,     0,     0,   337,   338,     0,     0,     0,   339,     0,
     340,   341,   342,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,     0,   350,   351,     0,   352,   353,   907,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     397,     0,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,     0,
     411,   412,   908,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,     0,
       0,   440,   441,     0,   442,   443,   444,   445,   446,   447,
       0,     0,   448,   449,   450,   451,     0,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,     0,   459,   460,
       0,   461,   462,   463,   464,   465,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   487,   488,   489,     0,     0,     0,
       0,     0,     0,   490,     0,     0,   491,     0,     0,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,     0,   502,
       0,   137,     0,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,   145,     0,   910,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   153,     0,     0,
       0,   154,     0,     0,     0,   155,     0,     0,   156,   157,
     158,     0,   159,     0,   160,   161,     0,     0,   162,     0,
       0,   163,   164,     0,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,     0,   174,   175,     0,   176,
     177,     0,   178,   179,   180,   181,   182,   183,   184,   185,
     186,     0,   187,   188,     0,   189,   190,   191,   192,   193,
       0,     0,     0,   194,     0,     0,   195,     0,   196,     0,
       0,   197,     0,     0,     0,   198,   199,   200,     0,     0,
     201,     0,     0,     0,     0,   202,   203,     0,     0,     0,
       0,   204,   205,     0,   206,     0,     0,     0,   207,     0,
     208,   209,   210,   211,   212,     0,     0,     0,   213,     0,
       0,   214,   215,   216,     0,     0,     0,   217,     0,   218,
     219,     0,   220,   221,   222,     0,     0,   223,   224,     0,
     225,   226,   227,   228,   229,   230,     0,     0,   231,   232,
     233,   234,   235,     0,     0,   236,   237,     0,   238,   239,
     240,     0,     0,   241,     0,     0,     0,   242,   243,     0,
     244,     0,   245,     0,   246,   247,   248,   249,     0,   250,
       0,   251,     0,     0,     0,   252,   253,     0,   254,     0,
       0,   255,   256,     0,     0,     0,   257,   258,   259,   260,
       0,     0,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,     0,   266,   267,     0,     0,     0,   268,     0,
       0,     0,   269,   270,     0,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,     0,     0,   276,     0,     0,
     277,   278,   639,     0,     0,     0,     0,   279,   280,     0,
     281,     0,   282,     0,   283,   284,     0,     0,     0,     0,
       0,     0,     0,   285,     0,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,     0,   303,   304,   305,     0,   306,   307,   308,
     309,     0,   310,   311,     0,     0,     0,     0,   312,   313,
     314,   315,   316,   317,     0,     0,   318,   319,     0,   320,
       0,   321,     0,   322,   323,   324,   325,   326,   327,   328,
     329,   330,     0,     0,   331,   332,     0,     0,   333,   334,
     335,   336,     0,     0,     0,   337,   338,     0,     0,     0,
     339,     0,   340,   341,   342,     0,   343,   344,   345,     0,
     346,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     347,   348,   349,     0,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,     0,   391,     0,   392,   393,     0,   394,   395,
     396,     0,   397,     0,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,     0,   411,   412,   413,   414,     0,     0,     0,   415,
       0,     0,     0,   416,     0,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,     0,     0,     0,     0,     0,
     426,   427,   428,     0,   429,   430,     0,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
       0,     0,     0,   440,   441,     0,   442,   443,   444,   445,
     446,   447,     0,     0,   448,   449,   450,   451,     0,   452,
     453,     0,     0,   454,   455,   456,   457,   458,     0,   134,
     459,   460,     0,   461,   462,   463,   464,   465,     0,     0,
       0,     0,   466,   467,   468,   469,   470,   471,     0,   472,
     473,     0,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,   480,   481,     0,   482,   483,     0,     0,   484,
       0,     0,   485,     0,   486,     0,   487,   488,   489,     0,
       0,     0,     0,     0,     0,   490,     0,     0,   491,     0,
       0,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,     0,   497,   498,     0,   499,   500,   501,     0,
       0,   502,     0,   137,     0,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,   145,     0,  3614,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
       0,     0,     0,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,   160,   161,     0,     0,
     162,     0,     0,   163,   164,     0,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,     0,   174,   175,
       0,   176,   177,     0,   178,   179,   180,   181,   182,   183,
     184,   185,   186,  1276,   187,   188,     0,   189,   190,   191,
     192,   193,     0,     0,     0,   194,     0,     0,   195,     0,
     196,     0,     0,   197,     0,     0,     0,   198,   199,   200,
       0,     0,   201,     0,     0,     0,     0,   202,   203,     0,
       0,     0,     0,   204,   205,     0,   206,     0,     0,     0,
     207,     0,   208,   209,   210,   211,   212,     0,     0,     0,
     213,     0,     0,   214,   215,   216,     0,     0,     0,   217,
       0,   218,   219,     0,   220,   221,   222,     0,     0,   223,
     224,     0,   225,   226,   227,   228,   229,   230,     0,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,   239,   240,     0,     0,   241,     0,     0,     0,   242,
     243,     0,   244,     0,   245,     0,   246,   247,   248,   249,
       0,   250,     0,   251,     0,     0,     0,   252,   253,     0,
     254,     0,     0,   255,   256,     0,     0,     0,   257,   258,
     259,   260,     0,     0,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,     0,   266,   267,     0,     0,     0,
     268,     0,     0,     0,   269,   270,     0,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,     0,     0,   276,
       0,     0,   277,   278,     0,     0,     0,     0,     0,   279,
     280,     0,   281,     0,   282,     0,   283,   284,     0,     0,
       0,     0,     0,     0,     0,   285,     0,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,     0,   303,   304,   305,     0,   306,
     307,   308,   309,     0,   310,   311,     0,     0,     0,     0,
     312,   313,   314,   315,   316,   317,     0,     0,   318,   319,
       0,   320,     0,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,     0,     0,   331,   332,     0,     0,
     333,   334,   335,   336,     0,     0,     0,   337,   338,     0,
       0,     0,   339,     0,   340,   341,   342,     0,   343,   344,
     345,     0,   346,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   347,   348,   349,     0,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,     0,     0,   390,     0,   391,     0,   392,   393,     0,
     394,   395,   396,     0,   397,     0,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,     0,   411,   412,   413,   414,     0,     0,
       0,   415,     0,     0,     0,   416,     0,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,     0,     0,     0,
       0,     0,   426,   427,   428,     0,   429,   430,     0,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,     0,     0,     0,   440,   441,     0,   442,   443,
     444,   445,   446,   447,     0,     0,   448,   449,   450,   451,
       0,   452,   453,     0,     0,   454,   455,   456,   457,   458,
       0,     0,   459,   460,     0,   461,   462,   463,   464,   465,
       0,     0,     0,     0,   466,   467,   468,   469,   470,   471,
       0,   472,   473,     0,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,   480,   481,     0,   482,   483,     0,
       0,   484,     0,     0,   485,     0,   486,     0,   487,   488,
     489,     0,     0,     0,     0,     0,     0,   490,     0,     0,
     491,     0,     0,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,     0,   497,   498,     0,   499,   500,
     501,     0,     0,   502,     0,   137,     0,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,   145,
       0,  1277,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,   160,   161,
       0,     0,   162,     0,     0,   163,   164,     0,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,     0,
     174,   175,     0,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   186,     0,   187,   188,     0,   189,
     190,   191,   192,   193,     0,     0,     0,   194,     0,     0,
     195,     0,   196,     0,     0,   197,     0,     0,     0,   198,
     199,   200,     0,     0,   201,     0,     0,     0,     0,   202,
     203,     0,     0,     0,     0,   204,   205,     0,   206,     0,
       0,     0,   207,     0,   208,   209,   210,   211,   212,     0,
       0,     0,   213,     0,     0,   214,   215,   216,     0,     0,
       0,   217,     0,   218,   219,     0,   220,   221,   222,     0,
       0,   223,   224,     0,   225,   226,   227,   228,   229,   230,
       0,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,     0,     0,
       0,   242,   243,     0,   244,     0,   245,     0,   246,   247,
     248,   249,     0,   250,     0,   251,     0,     0,     0,   252,
     253,     0,   254,     0,     0,   255,   256,     0,     0,     0,
     257,   258,   259,   260,     0,     0,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,     0,   266,   267,     0,
       0,     0,   268,     0,     0,     0,   269,   270,     0,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,     0,
       0,   276,     0,     0,   277,   278,     0,     0,     0,     0,
       0,   279,   280,     0,   281,     0,   282,     0,   283,   284,
       0,     0,     0,     0,     0,     0,     0,   285,     0,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,     0,   303,   304,   305,
       0,   306,   307,   308,   309,     0,   310,   311,     0,     0,
       0,     0,   312,   313,   314,   315,   316,   317,     0,     0,
     318,   319,     0,   320,     0,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,     0,   331,   332,
       0,     0,   333,   334,   335,   336,     0,     0,     0,   337,
     338,     0,     0,     0,   339,     0,   340,   341,   342,     0,
     343,   344,   345,     0,   346,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   347,   348,   349,     0,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,     0,     0,   390,     0,   391,     0,   392,
     393,     0,   394,   395,   396,     0,   397,     0,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,     0,   411,   412,   413,   414,
       0,     0,     0,   415,     0,     0,     0,   416,     0,   417,
     418,   419,   420,     0,   421,   422,   423,   424,   425,     0,
       0,     0,     0,     0,   426,   427,   428,     0,   429,   430,
       0,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,     0,     0,     0,   440,   441,     0,
     442,   443,   444,   445,   446,   447,     0,     0,   448,   449,
     450,   451,     0,   452,   453,     0,     0,   454,   455,   456,
     457,   458,     0,     0,   459,   460,     0,   461,   462,   463,
     464,   465,     0,     0,     0,     0,   466,   467,   468,   469,
     470,   471,     0,   472,   473,     0,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,   480,   481,     0,   482,
     483,     0,     0,   484,     0,     0,   485,     0,   486,     0,
     487,   488,   489,     0,     0,     0,     0,     0,     0,   490,
       0,     0,   491,     0,     0,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,     0,   497,   498,     0,
     499,   500,   501,     0,     0,   502,   137,     0,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     145,     0,     0,  1277,     0,   147,   148,   149,   150,   151,
       0,     0,  -366,     0,     0,     0,   154,     0,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,     0,
       0,     0,     0,   162,  4155,     0,   163,   164,     0,   165,
     166,     0,     0,     0,     0,   169,   170,   171,   172,  4156,
       0,   174,   175,     0,   176,   177,     0,   178,   179,     0,
     181,     0,   183,   184,   185,   186,     0,   187,   188,     0,
     189,   190,   191,     0,   193,     0,     0,     0,   194,     0,
       0,   195,     0,   196,     0,     0,   197,     0,     0,     0,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,     0,     0,     0,     0,     0,   204,   205,     0,   206,
       0,     0,     0,   207,     0,   208,   209,   210,   211,   212,
       0,     0,     0,     0,     0,     0,   214,   215,   216,     0,
       0,     0,   217,     0,     0,   219,     0,   220,   221,   222,
       0,     0,   223,   224,     0,   225,   226,   227,   228,   229,
       0,     0,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,  4157,   238,   239,   240,     0,     0,     0,     0,
       0,     0,     0,   243,     0,   244,     0,   245,     0,   246,
     247,   248,   249,     0,   250,     0,   251,     0,     0,     0,
       0,   253,     0,     0,     0,     0,     0,   256,     0,     0,
       0,   257,   258,   259,   260,  4158,     0,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,     0,   266,     0,
       0,     0,     0,   268,     0,     0,     0,   269,   270,     0,
     271,   272,  4159,     0,     0,   273,     0,     0,     0,   275,
       0,     0,   276,  4160,     0,   277,   278,     0,     0,     0,
       0,     0,   279,   280,     0,   281,     0,   282,     0,   283,
     284,     0,     0,     0,     0,  -321,     0,     0,   285,     0,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,     0,   303,   304,
     305,     0,   306,   307,   308,   309,     0,   310,   311,     0,
       0,     0,     0,   312,   313,   314,   315,   316,   317,     0,
       0,   318,   319,     0,   320,     0,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,     0,     0,   331,
     332,     0,     0,   333,   334,   335,   336,     0,     0,     0,
       0,   338,     0,     0,     0,   339,     0,   340,   341,   342,
       0,   343,   344,  4161,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   348,   349,     0,     0,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,     0,     0,     0,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,     0,
       0,   387,     0,   389,  -321,     0,   390,     0,     0,     0,
     392,     0,     0,   394,   395,   396,  4162,   397,     0,     0,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   407,
     408,     0,   409,     0,     0,     0,     0,   411,   412,   413,
       0,     0,     0,     0,   415,     0,     0,     0,   416,     0,
       0,   418,     0,   420,     0,   421,     0,     0,   424,   425,
       0,     0,     0,     0,     0,   426,   427,   428,     0,   429,
     430,     0,   431,     0,     0,   432,     0,     0,   433,     0,
     435,   436,   437,   438,   439,     0,     0,     0,     0,   441,
       0,   442,   443,   444,   445,   446,   447,     0,     0,   448,
     449,   450,   451,     0,   452,   453,     0,     0,   454,   455,
     456,   457,   458,     0,     0,   459,   460,     0,   461,   462,
     463,   464,   465,     0,     0,     0,     0,   466,   467,   468,
     469,   470,   471,     0,   472,   473,     0,     0,     0,     0,
     475,   476,   477,     0,   478,   479,     0,   480,   481,     0,
       0,     0,     0,     0,   484,     0,     0,   485,     0,     0,
       0,   487,   488,   489,     0,     0,     0,     0,     0,     0,
     490,     0,     0,   491,     0,     0,     0,   492,   493,   494,
     495,   496,     0,     0,  -321,     0,     0,     0,   497,     0,
       0,   499,     0,   501,     0,     0,   502,   137,     0,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,  4587,
     144,   145,     0,     0,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,     0,     0,     0,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
     160,   161,     0,     0,   162,     0,     0,   163,   164,     0,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,     0,   174,   175,     0,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,     0,   187,   188,
       0,   189,   190,   191,   192,   193,     0,     0,     0,   194,
       0,     0,   195,     0,   196,     0,     0,   197,     0,     0,
       0,   198,   199,   200,     0,     0,   201,     0,     0,     0,
       0,   202,   203,     0,     0,     0,     0,   204,   205,     0,
     206,     0,     0,     0,   207,     0,   208,   209,   210,   211,
     212,     0,     0,     0,   213,     0,     0,   214,   215,   216,
       0,     0,     0,   217,     0,   218,   219,     0,   220,   221,
     222,     0,     0,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,   239,   240,     0,     0,   241,
       0,     0,     0,   242,   243,     0,   244,     0,   245,     0,
     246,   247,   248,   249,     0,   250,     0,   251,     0,     0,
       0,   252,   253,     0,   254,     0,     0,   255,   256,     0,
       0,     0,   257,   258,   259,   260,     0,     0,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,     0,   266,
     267,     0,     0,     0,   268,     0,     0,     0,   269,   270,
       0,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,     0,     0,   276,     0,     0,   277,   278,     0,     0,
       0,     0,     0,   279,   280,     0,   281,     0,   282,     0,
     283,   284,     0,     0,     0,     0,     0,     0,     0,   285,
       0,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,     0,   303,
     304,   305,     0,   306,   307,   308,   309,     0,   310,   311,
       0,     0,     0,     0,   312,   313,   314,   315,   316,   317,
       0,     0,   318,   319,     0,   320,     0,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,     0,
     331,   332,     0,     0,   333,   334,   335,   336,     0,     0,
       0,   337,   338,     0,     0,     0,   339,     0,   340,   341,
     342,     0,   343,   344,   345,     0,   346,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   347,   348,   349,     0,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,     0,     0,   390,     0,   391,
       0,   392,   393,     0,   394,   395,   396,     0,   397,     0,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,     0,   411,   412,
     413,   414,     0,     0,     0,   415,     0,     0,     0,   416,
       0,   417,   418,   419,   420,     0,   421,   422,   423,   424,
     425,     0,     0,     0,     0,     0,   426,   427,   428,     0,
     429,   430,     0,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,     0,     0,     0,   440,
     441,     0,   442,   443,   444,   445,   446,   447,     0,     0,
     448,   449,   450,   451,     0,   452,   453,     0,     0,   454,
     455,   456,   457,   458,     0,     0,   459,   460,     0,   461,
     462,   463,   464,   465,     0,     0,     0,     0,   466,   467,
     468,   469,   470,   471,     0,   472,   473,     0,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,   480,   481,
       0,   482,   483,     0,     0,   484,     0,     0,   485,     0,
     486,     0,   487,   488,   489,     0,     0,     0,     0,     0,
       0,   490,     0,     0,   491,     0,     0,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,     0,   497,
     498,     0,   499,   500,   501,     0,   137,   502,   138,   139,
     140,   141,   142,  2206,     0,   143,     0,     0,     0,   144,
     145,     0,     0,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,     0,     0,     0,   154,     0,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,     0,     0,   163,   164,     0,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
       0,   174,   175,     0,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,   188,     0,
     189,   190,   191,   192,   193,     0,     0,     0,   194,     0,
       0,   195,     0,   196,     0,     0,   197,     0,     0,     0,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,   203,     0,     0,     0,     0,   204,   205,     0,   206,
       0,     0,     0,   207,     0,   208,   209,   210,   211,   212,
       0,     0,     0,   213,     0,     0,   214,   215,   216,     0,
       0,     0,   217,     0,   218,   219,     0,   220,   221,   222,
       0,     0,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,   239,   240,     0,     0,   241,     0,
       0,     0,   242,   243,     0,   244,     0,   245,     0,   246,
     247,   248,   249,     0,   250,     0,   251,     0,     0,     0,
     252,   253,     0,   254,     0,     0,   255,   256,     0,     0,
       0,   257,   258,   259,   260,     0,     0,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,     0,   266,   267,
       0,     0,     0,   268,     0,     0,     0,   269,   270,     0,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
       0,     0,   276,     0,     0,   277,   278,     0,     0,     0,
       0,     0,   279,   280,     0,   281,     0,   282,     0,   283,
     284,     0,     0,     0,     0,     0,     0,     0,   285,     0,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,     0,   303,   304,
     305,     0,   306,   307,   308,   309,     0,   310,   311,     0,
       0,     0,     0,   312,   313,   314,   315,   316,   317,     0,
       0,   318,   319,     0,   320,     0,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,     0,     0,   331,
     332,     0,     0,   333,   334,   335,   336,     0,     0,     0,
     337,   338,     0,     0,     0,   339,     0,   340,   341,   342,
       0,   343,   344,   345,     0,   346,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   347,   348,   349,     0,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,   386,
       0,   387,   388,   389,     0,     0,   390,     0,   391,     0,
     392,   393,     0,   394,   395,   396,     0,   397,     0,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,     0,   411,   412,   413,
     414,     0,     0,     0,   415,     0,     0,     0,   416,     0,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
       0,     0,     0,     0,     0,   426,   427,   428,     0,   429,
     430,     0,   431,     0,     0,   432,     0,     0,   433,   434,
     435,   436,   437,   438,   439,     0,     0,     0,   440,   441,
       0,   442,   443,   444,   445,   446,   447,     0,     0,   448,
     449,   450,   451,     0,   452,   453,     0,     0,   454,   455,
     456,   457,   458,     0,     0,   459,   460,     0,   461,   462,
     463,   464,   465,     0,     0,     0,     0,   466,   467,   468,
     469,   470,   471,     0,   472,   473,     0,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,   480,   481,     0,
     482,   483,     0,     0,   484,     0,     0,   485,     0,   486,
       0,   487,   488,   489,     0,     0,     0,     0,     0,     0,
     490,     0,     0,   491,     0,     0,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,     0,   497,   498,
       0,   499,   500,   501,     0,   137,   502,   138,   139,   140,
     141,   142,  2924,     0,   143,     0,     0,     0,   144,   145,
       0,     0,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,   160,   161,
       0,     0,   162,     0,     0,   163,   164,     0,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,     0,
     174,   175,     0,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   186,     0,   187,   188,     0,   189,
     190,   191,   192,   193,     0,     0,     0,   194,     0,     0,
     195,     0,   196,     0,     0,   197,     0,     0,     0,   198,
     199,   200,     0,     0,   201,     0,     0,     0,     0,   202,
     203,     0,     0,     0,     0,   204,   205,     0,   206,     0,
       0,     0,   207,     0,   208,   209,   210,   211,   212,     0,
       0,     0,   213,     0,     0,   214,   215,   216,     0,     0,
       0,   217,     0,   218,   219,     0,   220,   221,   222,     0,
       0,   223,   224,     0,   225,   226,   227,   228,   229,   230,
       0,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,     0,     0,
       0,   242,   243,     0,   244,     0,   245,     0,   246,   247,
     248,   249,     0,   250,     0,   251,     0,     0,     0,   252,
     253,     0,   254,     0,     0,   255,   256,     0,     0,     0,
     257,   258,   259,   260,     0,     0,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,     0,   266,   267,     0,
       0,     0,   268,     0,     0,     0,   269,   270,     0,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,     0,
       0,   276,     0,     0,   277,   278,     0,     0,     0,     0,
       0,   279,   280,     0,   281,     0,   282,     0,   283,   284,
       0,     0,     0,     0,     0,     0,     0,   285,     0,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,     0,   303,   304,   305,
       0,   306,   307,   308,   309,     0,   310,   311,     0,     0,
       0,     0,   312,   313,   314,   315,   316,   317,     0,     0,
     318,   319,     0,   320,     0,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,     0,   331,   332,
       0,     0,   333,   334,   335,   336,     0,     0,     0,   337,
     338,     0,     0,     0,   339,     0,   340,   341,   342,     0,
     343,   344,   345,     0,   346,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   347,   348,   349,     0,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,     0,     0,   390,     0,   391,     0,   392,
     393,     0,   394,   395,   396,     0,   397,     0,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,     0,   411,   412,   413,   414,
       0,     0,     0,   415,     0,     0,     0,   416,     0,   417,
     418,   419,   420,     0,   421,   422,   423,   424,   425,     0,
       0,     0,     0,     0,   426,   427,   428,     0,   429,   430,
       0,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,     0,     0,     0,   440,   441,     0,
     442,   443,   444,   445,   446,   447,     0,     0,   448,   449,
     450,   451,     0,   452,   453,     0,     0,   454,   455,   456,
     457,   458,     0,     0,   459,   460,     0,   461,   462,   463,
     464,   465,     0,     0,     0,     0,   466,   467,   468,   469,
     470,   471,     0,   472,   473,     0,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,   480,   481,     0,   482,
     483,     0,     0,   484,     0,     0,   485,     0,   486,     0,
     487,   488,   489,     0,     0,     0,     0,     0,     0,   490,
       0,     0,   491,     0,     0,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,     0,   497,   498,     0,
     499,   500,   501,     0,   137,   502,   138,   139,   140,   141,
     142,  3573,     0,   143,     0,     0,     0,   144,   145,     0,
       0,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,     0,   187,   188,     0,   189,   190,
     191,   192,   193,     0,     0,     0,   194,     0,     0,   195,
       0,   196,     0,     0,   197,     0,     0,     0,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,   203,
       0,     0,     0,     0,   204,   205,     0,   206,     0,     0,
       0,   207,     0,   208,   209,   210,   211,   212,     0,     0,
       0,   213,     0,     0,   214,   215,   216,     0,     0,     0,
     217,     0,   218,   219,     0,   220,   221,   222,     0,     0,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,   239,   240,     0,     0,   241,     0,     0,     0,
     242,   243,     0,   244,     0,   245,     0,   246,   247,   248,
     249,     0,   250,     0,   251,     0,     0,     0,   252,   253,
       0,   254,     0,     0,   255,   256,     0,     0,     0,   257,
     258,   259,   260,     0,     0,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,     0,   266,   267,     0,     0,
       0,   268,     0,     0,     0,   269,   270,     0,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,     0,     0,
     276,     0,     0,   277,   278,     0,     0,     0,     0,     0,
     279,   280,     0,   281,     0,   282,     0,   283,   284,     0,
       0,     0,     0,     0,     0,     0,   285,     0,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,     0,   303,   304,   305,     0,
     306,   307,   308,   309,     0,   310,   311,     0,     0,     0,
       0,   312,   313,   314,   315,   316,   317,     0,     0,   318,
     319,     0,   320,     0,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,     0,     0,   331,   332,     0,
       0,   333,   334,   335,   336,     0,     0,     0,   337,   338,
       0,     0,     0,   339,     0,   340,   341,   342,     0,   343,
     344,   345,     0,   346,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   347,   348,   349,     0,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,   364,     0,   365,     0,   366,   367,
     368,   369,   370,     0,   371,   372,   373,     0,     0,   374,
       0,     0,     0,   375,   376,   377,   378,   379,     0,     0,
     380,   381,   382,   383,   384,     0,   385,   386,     0,   387,
     388,   389,     0,     0,   390,     0,   391,     0,   392,   393,
       0,   394,   395,   396,     0,   397,     0,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,     0,   411,   412,   413,   414,     0,
       0,     0,   415,     0,     0,     0,   416,     0,   417,   418,
     419,   420,     0,   421,   422,   423,   424,   425,     0,     0,
       0,     0,     0,   426,   427,   428,     0,   429,   430,     0,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,     0,     0,     0,   440,   441,     0,   442,
     443,   444,   445,   446,   447,     0,     0,   448,   449,   450,
     451,     0,   452,   453,     0,     0,   454,   455,   456,   457,
     458,     0,     0,   459,   460,     0,   461,   462,   463,   464,
     465,     0,     0,     0,     0,   466,   467,   468,   469,   470,
     471,     0,   472,   473,     0,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,   480,   481,     0,   482,   483,
       0,     0,   484,     0,     0,   485,     0,   486,     0,   487,
     488,   489,     0,     0,     0,     0,     0,     0,   490,     0,
       0,   491,     0,     0,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,     0,   497,   498,     0,   499,
     500,   501,     0,   137,   502,   138,   139,   140,   141,   142,
    3619,     0,   143,     0,     0,     0,   144,   145,     0,     0,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
       0,     0,     0,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,   160,   161,     0,     0,
     162,     0,     0,   163,   164,     0,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,     0,   174,   175,
       0,   176,   177,     0,   178,   179,   180,   181,   182,   183,
     184,   185,   186,     0,   187,   188,     0,   189,   190,   191,
     192,   193,     0,     0,     0,   194,     0,     0,   195,     0,
     196,     0,     0,   197,     0,     0,     0,   198,   199,   200,
       0,     0,   201,     0,     0,     0,     0,   202,   203,  2555,
       0,     0,     0,   204,   205,     0,   206,     0,     0,     0,
     207,     0,   208,   209,   210,   211,   212,     0,     0,     0,
     213,     0,     0,   214,   215,   216,     0,     0,     0,   217,
       0,   218,   219,     0,   220,   221,   222,     0,     0,   223,
     224,     0,   225,   226,   227,   228,   229,   230,     0,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,   239,   240,  2556,     0,   241,     0,     0,     0,   242,
     243,     0,   244,     0,   245,     0,   246,   247,   248,   249,
       0,   250,     0,   251,     0,     0,     0,   252,   253,     0,
     254,  2557,     0,   255,   256,     0,     0,     0,   257,   258,
     259,   260,     0,     0,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,     0,   266,   267,     0,     0,     0,
     268,     0,     0,     0,   269,   270,     0,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,     0,     0,   276,
       0,     0,   277,   278,     0,     0,     0,     0,     0,   279,
     280,     0,   281,     0,   282,     0,   283,   284,     0,     0,
    2558,     0,     0,     0,     0,   285,     0,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,     0,   303,   304,   305,     0,   306,
     307,   308,   309,     0,   310,   311,     0,     0,     0,     0,
     312,   313,   314,   315,   316,   317,     0,     0,   318,   319,
       0,   320,     0,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,     0,     0,   331,   332,     0,     0,
     333,   334,   335,   336,  1040,  1041,     0,   337,   338,     0,
       0,  2559,   339,     0,   340,   341,   342,     0,   343,   344,
     345,     0,   346,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   347,   348,   349,     0,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,     0,     0,   390,     0,   391,     0,   392,   393,     0,
     394,   395,   396,     0,   397,     0,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,     0,   411,   412,   413,   414,     0,     0,
       0,   415,     0,     0,     0,   416,     0,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,     0,     0,  4567,
     585,  4568,   426,   427,   428,     0,   429,   430,     0,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,     0,     0,     0,   440,   441,     0,   442,   443,
     444,   445,   446,   447,     0,     0,   448,   449,   450,   451,
       0,   452,   453,     0,     0,   454,   455,   456,   457,   458,
       0,     0,   459,   460,     0,   461,   462,   463,   464,   465,
       0,     0,     0,     0,   466,   467,   468,   469,   470,   471,
       0,   472,   473,     0,     0,     0,   474,   475,   476,   477,
    2560,   478,   479,     0,   480,   481,     0,   482,   483,     0,
       0,   484,     0,     0,   485,     0,   486,     0,   487,   488,
     489,     0,     0,     0,     0,     0,     0,   490,     0,     0,
     491,     0,     0,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,     0,   497,   498,     0,   499,   500,
     501,     0,   137,   502,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,  1389,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,   188,     0,   189,   190,   191,   192,
     193,     0,     0,     0,   194,     0,     0,   195,     0,   196,
       0,     0,   197,     0,     0,     0,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,   203,     0,     0,
       0,  1390,   204,   205,     0,   206,     0,     0,     0,   207,
       0,   208,   209,   210,   211,   212,     0,     0,     0,   213,
       0,     0,   214,   215,   216,     0,     0,     0,   217,     0,
     218,   219,     0,   220,   221,   222,  1391,     0,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,     0,   238,
     239,   240,     0,     0,   241,     0,     0,     0,   242,   243,
       0,   244,     0,   245,     0,   246,   247,   248,   249,     0,
     250,     0,   251,     0,     0,     0,   252,   253,     0,   254,
       0,     0,   255,   256,     0,     0,     0,   257,   258,   259,
     260,     0,     0,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,     0,   266,   267,     0,     0,     0,   268,
       0,     0,     0,   269,   270,     0,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,     0,     0,   276,     0,
       0,   277,   278,   639,     0,     0,     0,     0,   279,   280,
       0,   281,     0,   282,     0,   283,   284,     0,     0,     0,
       0,     0,     0,     0,   285,     0,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,     0,   303,   304,   305,     0,   306,   307,
     308,   309,     0,   310,   311,     0,     0,     0,     0,   312,
     313,   314,   315,   316,   317,     0,     0,   318,   319,     0,
     320,     0,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,     0,   331,   332,     0,     0,   333,
     334,   335,   336,     0,     0,     0,   337,   338,     0,     0,
       0,   339,     0,   340,   341,   342,     0,   343,   344,   345,
       0,   346,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   347,   348,   349,     0,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,     0,   391,     0,   392,   393,     0,   394,
     395,   396,     0,   397,     0,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,     0,   411,   412,   413,   414,     0,     0,  1392,
     415,     0,     0,     0,   416,     0,   417,   418,   419,   420,
       0,   421,   422,   423,   424,   425,     0,     0,     0,     0,
       0,   426,   427,   428,     0,   429,   430,     0,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,     0,     0,     0,   440,   441,     0,   442,   443,   444,
     445,   446,   447,     0,     0,   448,   449,   450,   451,     0,
     452,   453,     0,     0,   454,   455,   456,   457,   458,     0,
     134,   459,   460,     0,   461,   462,   463,   464,   465,     0,
       0,     0,     0,   466,   467,   468,   469,   470,   471,     0,
     472,   473,     0,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,   480,   481,     0,   482,   483,     0,     0,
     484,     0,     0,   485,     0,   486,     0,   487,   488,   489,
       0,     0,     0,     0,     0,     0,   490,     0,     0,   491,
       0,     0,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,     0,   497,   498,     0,   499,   500,   501,
       0,   137,   502,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,   145,     0,     0,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   153,     0,     0,
    1402,   154,     0,     0,     0,   155,     0,     0,   156,   157,
     158,     0,   159,     0,   160,   161,     0,     0,   162,     0,
       0,   163,   164,     0,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,     0,   174,   175,     0,   176,
     177,     0,   178,   179,   180,   181,   182,   183,   184,   185,
     186,     0,   187,   188,     0,   189,   190,   191,   192,   193,
       0,     0,     0,   194,     0,     0,   195,     0,   196,     0,
       0,   197,     0,     0,     0,   198,   199,   200,     0,     0,
     201,     0,     0,     0,     0,   202,   203,     0,     0,     0,
    1403,   204,   205,     0,   206,     0,     0,     0,   207,     0,
     208,   209,   210,   211,   212,     0,     0,     0,   213,     0,
       0,   214,   215,   216,     0,     0,     0,   217,     0,   218,
     219,     0,   220,   221,   222,     0,     0,   223,   224,     0,
     225,   226,   227,   228,   229,   230,     0,     0,   231,   232,
     233,   234,   235,     0,     0,   236,   237,     0,   238,   239,
     240,     0,     0,   241,     0,     0,     0,   242,   243,     0,
     244,     0,   245,     0,   246,   247,   248,   249,     0,   250,
       0,   251,     0,     0,     0,   252,   253,     0,   254,     0,
       0,   255,   256,     0,     0,     0,   257,   258,   259,   260,
       0,     0,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,     0,   266,   267,     0,     0,     0,   268,     0,
       0,     0,   269,   270,     0,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,     0,     0,   276,     0,     0,
     277,   278,   639,     0,     0,     0,     0,   279,   280,     0,
     281,     0,   282,     0,   283,   284,     0,     0,     0,     0,
       0,     0,     0,   285,     0,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,     0,   303,   304,   305,     0,   306,   307,   308,
     309,     0,   310,   311,     0,     0,     0,     0,   312,   313,
     314,   315,   316,   317,     0,     0,   318,   319,     0,   320,
       0,   321,     0,   322,   323,   324,   325,   326,   327,   328,
     329,   330,     0,     0,   331,   332,     0,     0,   333,   334,
     335,   336,     0,     0,     0,   337,   338,     0,     0,     0,
     339,     0,   340,   341,   342,     0,   343,   344,   345,     0,
     346,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     347,   348,   349,     0,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,     0,   391,     0,   392,   393,     0,   394,   395,
     396,     0,   397,     0,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,     0,   411,   412,   413,   414,     0,     0,     0,   415,
       0,     0,     0,   416,     0,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,     0,     0,     0,     0,     0,
     426,   427,   428,     0,   429,   430,     0,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
       0,     0,     0,   440,   441,     0,   442,   443,   444,   445,
     446,   447,     0,     0,   448,   449,   450,   451,     0,   452,
     453,     0,     0,   454,   455,   456,   457,   458,     0,   134,
     459,   460,     0,   461,   462,   463,   464,   465,     0,     0,
       0,     0,   466,   467,   468,   469,   470,   471,     0,   472,
     473,     0,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,   480,   481,     0,   482,   483,     0,     0,   484,
       0,     0,   485,     0,   486,     0,   487,   488,   489,     0,
       0,     0,     0,     0,     0,   490,     0,     0,   491,     0,
       0,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,     0,   497,   498,     0,   499,   500,   501,     0,
     137,   502,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,   145,     0,     0,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,     0,     0,     0,
     154,     0,     0,     0,   155,     0,     0,   156,   157,   158,
       0,   159,     0,   160,   161,     0,     0,   162,     0,     0,
     163,   164,     0,   165,   166,   167,     0,   168,     0,   169,
     170,   171,   172,   173,     0,   174,   175,     0,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,   188,     0,   189,   190,   191,   192,   193,     0,
       0,     0,   194,     0,     0,   195,     0,   196,     0,     0,
     197,     0,     0,     0,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,   203,     0,     0,     0,     0,
     204,   205,     0,   206,     0,     0,     0,   207,     0,   208,
     209,   210,   211,   212,     0,     0,     0,   213,     0,     0,
     214,   215,   216,     0,     0,     0,   217,     0,   218,   219,
       0,   220,   221,   222,     0,     0,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,     0,   231,   232,   233,
     234,   235,     0,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,     0,     0,     0,   242,   243,     0,   244,
       0,   245,     0,   246,   247,   248,   249,     0,   250,     0,
     251,     0,     0,     0,   252,   253,     0,   254,     0,     0,
     255,   256,     0,     0,     0,   257,   258,   259,   260,     0,
       0,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,     0,   266,   267,     0,     0,     0,   268,     0,     0,
       0,   269,   270,     0,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,     0,     0,   276,     0,     0,   277,
     278,     0,     0,     0,     0,     0,   279,   280,     0,   281,
       0,   282,     0,   283,   284,     0,     0,  1952,     0,     0,
       0,     0,   285,     0,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,     0,   303,   304,   305,     0,   306,   307,   308,   309,
       0,   310,   311,     0,     0,     0,     0,   312,   313,   314,
     315,   316,   317,     0,     0,   318,   319,     0,   320,     0,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,     0,     0,   331,   332,     0,     0,   333,   334,   335,
     336,     0,     0,     0,   337,   338,     0,     0,  1953,   339,
       0,   340,   341,   342,     0,   343,   344,   345,     0,   346,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   347,
     348,   349,   749,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
     364,     0,   365,     0,   366,   367,   368,   369,   370,     0,
     371,   372,   373,     0,     0,   374,     0,     0,     0,   375,
     376,   377,   378,   379,     0,     0,   380,   381,   382,   383,
     384,     0,   385,   386,     0,   387,   388,   389,     0,     0,
     390,     0,   391,     0,   392,   393,     0,   394,   395,   396,
       0,   397,     0,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
       0,   411,   412,   413,   414,     0,     0,     0,   415,     0,
       0,     0,   416,     0,   417,   418,   419,   420,     0,   421,
     422,   423,   424,   425,     0,     0,     0,     0,     0,   426,
     427,   428,     0,   429,   430,     0,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,   439,     0,
       0,     0,   440,   441,     0,   442,   443,   444,   445,   446,
     447,     0,     0,   448,   449,   450,   451,     0,   452,   453,
       0,     0,   454,   455,   456,   457,   458,     0,     0,   459,
     460,     0,   461,   462,   463,   464,   465,     0,     0,     0,
       0,   466,   467,   468,   469,   470,   471,     0,   472,   473,
       0,     0,     0,   474,   475,   476,   477,  1954,   478,   479,
       0,   480,   481,     0,   482,   483,     0,     0,   484,     0,
       0,   485,     0,   486,     0,   487,   488,   489,     0,     0,
       0,     0,     0,     0,   490,     0,     0,   491,     0,     0,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,     0,   497,   498,     0,   499,   500,   501,     0,   137,
     502,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,  1389,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   192,   193,     0,     0,
       0,   194,     0,     0,   195,     0,   196,     0,     0,   197,
       0,     0,     0,   198,   199,   200,     0,     0,   201,     0,
       0,     0,     0,   202,   203,     0,     0,     0,  1390,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,     0,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,   239,   240,     0,
       0,   241,     0,     0,     0,   242,   243,     0,   244,     0,
     245,     0,   246,   247,   248,   249,     0,   250,     0,   251,
       0,     0,     0,   252,   253,     0,   254,     0,     0,   255,
     256,     0,     0,     0,   257,   258,   259,   260,     0,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
       0,   266,   267,     0,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,     0,   277,   278,
     639,     0,     0,     0,     0,   279,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,     0,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,     0,   306,   307,   308,   309,     0,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     316,   317,     0,     0,   318,   319,     0,   320,     0,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,     0,   331,   332,     0,     0,   333,   334,   335,   336,
       0,     0,     0,   337,   338,     0,     0,     0,   339,     0,
     340,   341,   342,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,     0,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     397,     0,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,     0,
       0,   440,   441,     0,   442,   443,   444,   445,   446,   447,
       0,     0,   448,   449,   450,   451,     0,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,   134,   459,   460,
       0,   461,   462,   463,   464,   465,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   487,   488,   489,     0,     0,     0,
       0,     0,     0,   490,     0,     0,   491,     0,     0,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,   137,   502,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,     0,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,     0,     0,     0,   154,     0,
       0,     0,   155,     0,     0,   156,   157,   158,     0,   159,
       0,   160,   161,     0,     0,   162,     0,     0,   163,   164,
       0,   165,   166,   167,     0,   168,     0,   169,   170,   171,
     172,   173,     0,   174,   175,     0,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,     0,   187,
     188,     0,   189,   190,   191,   192,   193,     0,     0,     0,
     194,     0,     0,   195,     0,   196,   997,     0,   197,     0,
       0,     0,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,   203,     0,     0,     0,     0,   204,   205,
       0,   206,     0,     0,     0,   207,     0,   208,   209,   210,
     211,   212,     0,     0,     0,   213,     0,     0,   214,   215,
     216,     0,     0,     0,   217,     0,   218,   219,     0,   220,
     221,   222,     0,     0,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,   239,   240,     0,     0,
     241,     0,     0,     0,   242,   243,     0,   244,     0,   245,
       0,   246,   247,   248,   249,     0,   250,     0,   251,     0,
       0,     0,   252,   253,     0,   254,     0,     0,   255,   256,
       0,     0,     0,   257,   258,   259,   260,     0,     0,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,     0,
     266,   267,     0,     0,     0,   268,     0,     0,     0,   269,
     270,     0,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,     0,     0,   276,     0,     0,   277,   278,   639,
       0,     0,     0,     0,   279,   280,     0,   281,     0,   282,
       0,   283,   284,     0,     0,     0,     0,     0,     0,     0,
     285,     0,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,     0,
     303,   304,   305,     0,   306,   307,   308,   309,     0,   310,
     311,     0,     0,     0,     0,   312,   313,   314,   315,   316,
     317,     0,     0,   318,   319,     0,   320,     0,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,     0,
       0,   331,   332,     0,     0,   333,   334,   335,   336,     0,
       0,     0,   337,   338,     0,     0,     0,   339,     0,   340,
     341,   342,     0,   343,   344,   345,     0,   346,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   347,   348,   349,
       0,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,   364,     0,
     365,     0,   366,   367,   368,   369,   370,     0,   371,   372,
     373,     0,     0,   374,     0,     0,     0,   375,   376,   377,
     378,   379,     0,     0,   380,   381,   382,   383,   384,     0,
     385,   386,     0,   387,   388,   389,     0,     0,   390,     0,
     391,     0,   392,   393,     0,   394,   395,   396,     0,   397,
       0,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,     0,   409,   410,     0,     0,     0,   411,
     412,   413,   414,     0,     0,     0,   415,     0,     0,     0,
     416,     0,   417,   418,   419,   420,     0,   421,   422,   423,
     424,   425,     0,     0,     0,     0,     0,   426,   427,   428,
       0,   429,   430,     0,   431,     0,     0,   432,     0,     0,
     433,   434,   435,   436,   437,   438,   439,     0,     0,     0,
     440,   441,     0,   442,   443,   444,   445,   446,   447,     0,
       0,   448,   449,   450,   451,     0,   452,   453,     0,     0,
     454,   455,   456,   457,   458,     0,   134,   459,   460,     0,
     461,   462,   463,   464,   465,     0,     0,     0,     0,   466,
     467,   468,   469,   470,   471,     0,   472,   473,     0,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,   480,
     481,     0,   482,   483,     0,     0,   484,     0,     0,   485,
       0,   486,     0,   487,   488,   489,     0,     0,     0,     0,
       0,     0,   490,     0,     0,   491,     0,     0,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,     0,
     497,   498,     0,   499,   500,   501,     0,   137,   502,   138,
     139,   140,   141,   142,  1425,     0,   143,     0,     0,     0,
     144,   145,     0,     0,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,     0,     0,     0,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
     160,   161,     0,     0,   162,     0,     0,   163,   164,     0,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,     0,   174,   175,     0,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,     0,   187,   188,
       0,   189,   190,   191,   192,   193,     0,     0,     0,   194,
       0,     0,   195,     0,   196,     0,     0,   197,     0,     0,
       0,   198,   199,   200,     0,     0,   201,     0,     0,     0,
       0,   202,   203,     0,     0,     0,     0,   204,   205,     0,
     206,     0,     0,     0,   207,     0,   208,   209,   210,   211,
     212,     0,     0,     0,   213,     0,     0,   214,   215,   216,
       0,     0,     0,   217,     0,   218,   219,     0,   220,   221,
     222,     0,     0,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,   239,   240,     0,     0,   241,
       0,     0,     0,   242,   243,     0,   244,     0,   245,     0,
     246,   247,   248,   249,     0,   250,     0,   251,     0,     0,
       0,   252,   253,     0,   254,     0,     0,   255,   256,     0,
       0,     0,   257,   258,   259,   260,     0,     0,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,     0,   266,
     267,     0,     0,     0,   268,     0,     0,     0,   269,   270,
       0,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,     0,     0,   276,     0,     0,   277,   278,   639,     0,
       0,     0,     0,   279,   280,     0,   281,     0,   282,     0,
     283,   284,     0,     0,     0,     0,     0,     0,     0,   285,
       0,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,     0,   303,
     304,   305,     0,   306,   307,   308,   309,     0,   310,   311,
       0,     0,     0,     0,   312,   313,   314,   315,   316,   317,
       0,     0,   318,   319,     0,   320,     0,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,     0,
     331,   332,     0,     0,   333,   334,   335,   336,     0,     0,
       0,   337,   338,     0,     0,     0,   339,     0,   340,   341,
     342,     0,   343,   344,   345,     0,   346,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   347,   348,   349,     0,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,     0,     0,   390,     0,   391,
       0,   392,   393,     0,   394,   395,   396,     0,   397,     0,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,     0,   411,   412,
     413,   414,     0,     0,     0,   415,     0,     0,     0,   416,
       0,   417,   418,   419,   420,     0,   421,   422,   423,   424,
     425,     0,     0,     0,     0,     0,   426,   427,   428,     0,
     429,   430,     0,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,     0,     0,     0,   440,
     441,     0,   442,   443,   444,   445,   446,   447,     0,     0,
     448,   449,   450,   451,     0,   452,   453,     0,     0,   454,
     455,   456,   457,   458,     0,   134,   459,   460,     0,   461,
     462,   463,   464,   465,     0,     0,     0,     0,   466,   467,
     468,   469,   470,   471,     0,   472,   473,     0,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,   480,   481,
       0,   482,   483,     0,     0,   484,     0,     0,   485,     0,
     486,     0,   487,   488,   489,     0,     0,     0,     0,     0,
       0,   490,     0,     0,   491,     0,     0,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,     0,   497,
     498,     0,   499,   500,   501,     0,   137,   502,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     145,     0,     0,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,     0,     0,     0,   154,   974,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,     0,     0,   163,   164,     0,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
       0,   174,   175,     0,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,   188,     0,
     189,   190,   191,   192,   193,     0,     0,     0,   194,     0,
       0,   195,     0,   196,     0,     0,   197,     0,     0,     0,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,   203,     0,     0,     0,     0,   204,   205,     0,   206,
       0,     0,     0,   207,     0,   208,   209,   210,   211,   212,
       0,     0,     0,   213,     0,     0,   214,   215,   216,     0,
       0,     0,   217,     0,   218,   219,     0,   220,   221,   222,
       0,     0,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,   239,   240,     0,     0,   241,     0,
       0,     0,   242,   243,     0,   244,     0,   245,     0,   246,
     247,   248,   249,     0,   250,     0,   251,     0,     0,     0,
     252,   253,     0,   254,   975,     0,   255,   256,     0,     0,
       0,   257,   258,   259,   260,     0,     0,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,     0,   266,   267,
       0,     0,     0,   268,     0,     0,     0,   269,   270,     0,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
       0,     0,   276,     0,     0,   277,   278,     0,     0,     0,
       0,     0,   279,   280,     0,   281,     0,   282,     0,   283,
     284,     0,     0,     0,     0,     0,     0,     0,   285,     0,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,     0,   303,   304,
     305,     0,   306,   307,   308,   309,     0,   310,   311,     0,
       0,     0,     0,   312,   313,   314,   315,   316,   317,     0,
       0,   318,   319,     0,   320,     0,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,     0,     0,   331,
     332,     0,     0,   333,   334,   335,   336,     0,     0,     0,
     337,   338,     0,     0,     0,   339,     0,   340,   341,   342,
       0,   343,   344,   345,     0,   346,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   347,   348,   349,     0,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,   386,
       0,   387,   388,   389,     0,     0,   390,     0,   391,     0,
     392,   393,     0,   394,   395,   396,     0,   397,     0,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,     0,   411,   412,   413,
     414,     0,     0,     0,   415,     0,     0,     0,   416,     0,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
       0,     0,     0,     0,     0,   426,   427,   428,     0,   429,
     430,     0,   431,     0,     0,   432,     0,     0,   433,   434,
     435,   436,   437,   438,   439,     0,     0,     0,   440,   441,
       0,   442,   443,   444,   445,   446,   447,     0,     0,   448,
     449,   450,   451,     0,   452,   453,     0,     0,   454,   455,
     456,   457,   458,     0,   976,   459,   460,     0,   461,   462,
     463,   464,   465,     0,     0,     0,     0,   466,   467,   468,
     469,   470,   471,     0,   472,   473,     0,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,   480,   481,     0,
     482,   483,     0,     0,   484,     0,     0,   485,     0,   486,
       0,   487,   488,   489,     0,     0,     0,     0,     0,     0,
     490,     0,     0,   491,     0,     0,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,     0,   497,   498,
       0,   499,   500,   501,     0,   137,   502,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,   145,
       0,     0,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,   160,   161,
       0,     0,   162,     0,     0,   163,   164,     0,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,     0,
     174,   175,     0,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   186,     0,   187,   188,     0,   189,
     190,   191,   192,   193,     0,     0,     0,   194,     0,     0,
     195,     0,   196,     0,     0,   197,     0,     0,     0,   198,
     199,   200,     0,     0,   201,     0,     0,     0,     0,   202,
     203,     0,     0,     0,  2469,   204,   205,     0,   206,     0,
       0,     0,   207,     0,   208,   209,   210,   211,   212,     0,
       0,     0,   213,     0,     0,   214,   215,   216,     0,     0,
       0,   217,     0,   218,   219,     0,   220,   221,   222,     0,
       0,   223,   224,     0,   225,   226,   227,   228,   229,   230,
       0,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,     0,     0,
       0,   242,   243,     0,   244,     0,   245,     0,   246,   247,
     248,   249,     0,   250,     0,   251,     0,     0,     0,   252,
     253,     0,   254,     0,     0,   255,   256,     0,     0,     0,
     257,   258,   259,   260,     0,     0,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,     0,   266,   267,     0,
       0,     0,   268,     0,     0,     0,   269,   270,     0,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,     0,
       0,   276,     0,     0,   277,   278,   639,     0,     0,     0,
       0,   279,   280,     0,   281,     0,   282,     0,   283,   284,
       0,     0,     0,     0,     0,     0,     0,   285,     0,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,     0,   303,   304,   305,
       0,   306,   307,   308,   309,     0,   310,   311,     0,     0,
       0,     0,   312,   313,   314,   315,   316,   317,     0,     0,
     318,   319,     0,   320,     0,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,     0,   331,   332,
       0,     0,   333,   334,   335,   336,     0,     0,     0,   337,
     338,     0,     0,     0,   339,     0,   340,   341,   342,     0,
     343,   344,   345,     0,   346,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   347,   348,   349,     0,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,     0,     0,   390,     0,   391,     0,   392,
     393,     0,   394,   395,   396,     0,   397,     0,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,     0,   411,   412,   413,   414,
       0,     0,     0,   415,     0,     0,     0,   416,     0,   417,
     418,   419,   420,     0,   421,   422,   423,   424,   425,     0,
       0,     0,     0,     0,   426,   427,   428,     0,   429,   430,
       0,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,     0,     0,     0,   440,   441,     0,
     442,   443,   444,   445,   446,   447,     0,     0,   448,   449,
     450,   451,     0,   452,   453,     0,     0,   454,   455,   456,
     457,   458,     0,   134,   459,   460,     0,   461,   462,   463,
     464,   465,     0,     0,     0,     0,   466,   467,   468,   469,
     470,   471,     0,   472,   473,     0,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,   480,   481,     0,   482,
     483,     0,     0,   484,     0,     0,   485,     0,   486,     0,
     487,   488,   489,     0,     0,     0,     0,     0,     0,   490,
       0,     0,   491,     0,     0,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,     0,   497,   498,     0,
     499,   500,   501,     0,   137,   502,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,   145,     0,
       0,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,  1389,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,     0,   187,   188,     0,   189,   190,
     191,   192,   193,     0,     0,     0,   194,     0,     0,   195,
       0,   196,     0,     0,   197,     0,     0,     0,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,   203,
       0,     0,     0,     0,   204,   205,     0,   206,     0,     0,
       0,   207,     0,   208,   209,   210,   211,   212,     0,     0,
       0,   213,     0,     0,   214,   215,   216,     0,     0,     0,
     217,     0,   218,   219,     0,   220,   221,   222,     0,     0,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,   239,   240,     0,     0,   241,     0,     0,     0,
     242,   243,     0,   244,     0,   245,     0,   246,   247,   248,
     249,     0,   250,     0,   251,     0,     0,     0,   252,   253,
       0,   254,     0,     0,   255,   256,     0,     0,     0,   257,
     258,   259,   260,     0,     0,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,     0,   266,   267,     0,     0,
       0,   268,     0,     0,     0,   269,   270,     0,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,     0,     0,
     276,     0,     0,   277,   278,   639,     0,     0,     0,     0,
     279,   280,     0,   281,     0,   282,     0,   283,   284,     0,
       0,     0,     0,     0,     0,     0,   285,     0,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,     0,   303,   304,   305,     0,
     306,   307,   308,   309,     0,   310,   311,     0,     0,     0,
       0,   312,   313,   314,   315,   316,   317,     0,     0,   318,
     319,     0,   320,     0,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,     0,     0,   331,   332,     0,
       0,   333,   334,   335,   336,     0,     0,     0,   337,   338,
       0,     0,     0,   339,     0,   340,   341,   342,     0,   343,
     344,   345,     0,   346,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   347,   348,   349,     0,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,   364,     0,   365,     0,   366,   367,
     368,   369,   370,     0,   371,   372,   373,     0,     0,   374,
       0,     0,     0,   375,   376,   377,   378,   379,     0,     0,
     380,   381,   382,   383,   384,     0,   385,   386,     0,   387,
     388,   389,     0,     0,   390,     0,   391,     0,   392,   393,
       0,   394,   395,   396,     0,   397,     0,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,     0,   411,   412,   413,   414,     0,
       0,     0,   415,     0,     0,     0,   416,     0,   417,   418,
     419,   420,     0,   421,   422,   423,   424,   425,     0,     0,
       0,     0,     0,   426,   427,   428,     0,   429,   430,     0,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,     0,     0,     0,   440,   441,     0,   442,
     443,   444,   445,   446,   447,     0,     0,   448,   449,   450,
     451,     0,   452,   453,     0,     0,   454,   455,   456,   457,
     458,     0,   134,   459,   460,     0,   461,   462,   463,   464,
     465,     0,     0,     0,     0,   466,   467,   468,   469,   470,
     471,     0,   472,   473,     0,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,   480,   481,     0,   482,   483,
       0,     0,   484,     0,     0,   485,     0,   486,     0,   487,
     488,   489,     0,     0,     0,     0,     0,     0,   490,     0,
       0,   491,     0,     0,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,     0,   497,   498,     0,   499,
     500,   501,     0,   137,   502,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,   145,     0,     0,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
       0,     0,     0,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,   160,   161,     0,     0,
     162,     0,     0,   163,   164,     0,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,     0,   174,   175,
       0,   176,   177,     0,   178,   179,   180,   181,   182,   183,
     184,   185,   186,     0,   187,   188,     0,   189,   190,   191,
     192,   193,     0,     0,     0,   194,     0,     0,   195,     0,
     196,     0,     0,   197,     0,     0,     0,   198,   199,   200,
       0,     0,   201,     0,     0,     0,     0,   202,   203,     0,
       0,     0,     0,   204,   205,     0,   206,     0,     0,     0,
     207,     0,   208,   209,   210,   211,   212,     0,     0,     0,
     213,     0,     0,   214,   215,   216,     0,     0,     0,   217,
       0,   218,   219,     0,   220,   221,   222,     0,     0,   223,
     224,     0,   225,   226,   227,   228,   229,   230,     0,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,   239,   240,     0,     0,   241,     0,     0,     0,   242,
     243,     0,   244,     0,   245,     0,   246,   247,   248,   249,
       0,   250,     0,   251,     0,     0,     0,   252,   253,     0,
     254,     0,     0,   255,   256,     0,     0,     0,   257,   258,
     259,   260,     0,     0,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,     0,   266,   267,     0,     0,     0,
     268,     0,     0,     0,   269,   270,     0,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,     0,     0,   276,
       0,     0,   277,   278,   639,     0,     0,     0,     0,   279,
     280,     0,   281,     0,   282,     0,   283,   284,     0,     0,
       0,     0,     0,     0,     0,   285,     0,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,     0,   303,   304,   305,     0,   306,
     307,   308,   309,     0,   310,   311,     0,     0,     0,     0,
     312,   313,   314,   315,   316,   317,     0,     0,   318,   319,
       0,   320,     0,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,     0,     0,   331,   332,     0,     0,
     333,   334,   335,   336,     0,     0,     0,   337,   338,     0,
       0,     0,   339,     0,   340,   341,   342,     0,   343,   344,
     345,     0,   346,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   347,   348,   349,     0,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,     0,     0,   390,     0,   391,     0,   392,   393,     0,
     394,   395,   396,     0,   397,     0,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,     0,   411,   412,   413,   414,     0,     0,
       0,   415,     0,     0,     0,   416,     0,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,     0,     0,     0,
       0,     0,   426,   427,   428,     0,   429,   430,     0,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,     0,     0,     0,   440,   441,     0,   442,   443,
     444,   445,   446,   447,     0,     0,   448,   449,   450,   451,
       0,   452,   453,     0,     0,   454,   455,   456,   457,   458,
       0,   134,   459,   460,     0,   461,   462,   463,   464,   465,
       0,     0,     0,     0,   466,   467,   468,   469,   470,   471,
       0,   472,   473,     0,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,   480,   481,     0,   482,   483,     0,
       0,   484,     0,     0,   485,     0,   486,     0,   487,   488,
     489,     0,     0,     0,     0,     0,     0,   490,     0,     0,
     491,     0,     0,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,     0,   497,   498,     0,   499,   500,
     501,     0,   137,   502,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,  2920,     0,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,   188,     0,   189,   190,   191,   192,
     193,     0,     0,     0,   194,     0,     0,   195,     0,   196,
       0,     0,   197,     0,     0,     0,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,   203,     0,     0,
       0,     0,   204,   205,     0,   206,     0,     0,     0,   207,
       0,   208,   209,   210,   211,   212,     0,     0,     0,   213,
       0,     0,   214,   215,   216,     0,     0,     0,   217,     0,
     218,   219,     0,   220,   221,   222,     0,     0,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,     0,   238,
     239,   240,     0,     0,   241,     0,     0,     0,   242,   243,
       0,   244,     0,   245,     0,   246,   247,   248,   249,     0,
     250,     0,   251,     0,     0,     0,   252,   253,     0,   254,
       0,     0,   255,   256,     0,     0,     0,   257,   258,   259,
     260,     0,     0,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,     0,   266,   267,     0,     0,     0,   268,
       0,     0,     0,   269,   270,     0,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,     0,     0,   276,     0,
       0,   277,   278,     0,     0,     0,     0,     0,   279,   280,
       0,   281,     0,   282,     0,   283,   284,     0,     0,     0,
       0,     0,     0,     0,   285,     0,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,     0,   303,   304,   305,     0,   306,   307,
     308,   309,     0,   310,   311,     0,     0,     0,     0,   312,
     313,   314,   315,   316,   317,     0,     0,   318,   319,     0,
     320,     0,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,     0,   331,   332,     0,     0,   333,
     334,   335,   336,     0,     0,     0,   337,   338,     0,     0,
       0,   339,     0,   340,   341,   342,     0,   343,   344,   345,
       0,   346,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   347,   348,   349,     0,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,     0,   391,     0,   392,   393,     0,   394,
     395,   396,     0,   397,     0,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,     0,   411,   412,   413,   414,     0,     0,     0,
     415,     0,     0,     0,   416,     0,   417,   418,   419,   420,
       0,   421,   422,   423,   424,   425,     0,     0,     0,     0,
       0,   426,   427,   428,     0,   429,   430,     0,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,     0,     0,     0,   440,   441,     0,   442,   443,   444,
     445,   446,   447,     0,     0,   448,   449,   450,   451,     0,
     452,   453,     0,     0,   454,   455,   456,   457,   458,     0,
     134,   459,   460,     0,   461,   462,   463,   464,   465,     0,
       0,     0,     0,   466,   467,   468,   469,   470,   471,     0,
     472,   473,     0,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,   480,   481,     0,   482,   483,     0,     0,
     484,     0,     0,   485,     0,   486,     0,   487,   488,   489,
       0,     0,     0,     0,     0,     0,   490,     0,     0,   491,
       0,     0,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,     0,   497,   498,     0,   499,   500,   501,
       0,   137,   502,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,   145,     0,     0,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   153,     0,     0,
       0,   154,     0,     0,     0,   155,     0,     0,   156,   157,
     158,     0,   159,     0,   160,   161,     0,     0,   162,     0,
       0,   163,   164,     0,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,     0,   174,   175,     0,   176,
     177,     0,   178,   179,   180,   181,   182,   183,   184,   185,
     186,     0,   187,   188,     0,   189,   190,   191,   192,   193,
    4500,     0,     0,   194,     0,     0,   195,     0,   196,     0,
       0,   197,     0,     0,     0,   198,   199,   200,     0,     0,
     201,     0,     0,     0,     0,   202,   203,     0,     0,     0,
       0,   204,   205,     0,   206,     0,     0,     0,   207,     0,
     208,   209,   210,   211,   212,     0,     0,     0,   213,     0,
       0,   214,   215,   216,     0,     0,     0,   217,     0,   218,
     219,     0,   220,   221,   222,     0,     0,   223,   224,     0,
     225,   226,   227,   228,   229,   230,     0,  4501,   231,   232,
     233,   234,   235,     0,     0,   236,   237,     0,   238,   239,
     240,     0,     0,   241,     0,     0,     0,   242,   243,     0,
     244,     0,   245,     0,   246,   247,   248,   249,     0,   250,
       0,   251,     0,     0,     0,   252,   253,     0,   254,     0,
       0,   255,   256,     0,     0,     0,   257,   258,   259,   260,
       0,     0,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,     0,   266,   267,     0,     0,     0,   268,     0,
       0,     0,   269,   270,     0,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,     0,     0,   276,     0,     0,
     277,   278,     0,     0,     0,     0,     0,   279,   280,     0,
     281,     0,   282,     0,   283,   284,     0,     0,     0,     0,
       0,     0,     0,   285,     0,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,     0,   303,   304,   305,     0,   306,   307,   308,
     309,     0,   310,   311,     0,     0,     0,     0,   312,   313,
     314,   315,   316,   317,     0,     0,   318,   319,     0,   320,
       0,   321,     0,   322,   323,   324,   325,   326,   327,   328,
     329,   330,     0,     0,   331,   332,     0,     0,   333,   334,
     335,   336,     0,     0,     0,   337,   338,     0,     0,     0,
     339,     0,   340,   341,   342,     0,   343,   344,   345,     0,
     346,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     347,   348,   349,     0,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,     0,   391,     0,   392,   393,     0,   394,   395,
     396,     0,   397,     0,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,     0,   411,   412,   413,   414,     0,     0,     0,   415,
       0,     0,     0,   416,     0,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,     0,     0,     0,     0,     0,
     426,   427,   428,     0,   429,   430,     0,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
       0,     0,     0,   440,   441,     0,   442,   443,   444,   445,
     446,   447,     0,     0,   448,   449,   450,   451,     0,   452,
     453,     0,     0,   454,   455,   456,   457,   458,     0,     0,
     459,   460,     0,   461,   462,   463,   464,   465,     0,     0,
       0,     0,   466,   467,   468,   469,   470,   471,     0,   472,
     473,     0,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,   480,   481,     0,   482,   483,     0,     0,   484,
       0,     0,   485,     0,   486,     0,   487,   488,   489,     0,
       0,     0,     0,     0,     0,   490,     0,     0,   491,     0,
       0,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,     0,   497,   498,     0,   499,   500,   501,     0,
     137,   502,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,   145,     0,     0,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,     0,     0,     0,
     154,     0,     0,     0,   155,     0,     0,   156,   157,   158,
       0,   159,     0,   160,   161,     0,     0,   162,     0,     0,
     163,   164,     0,   165,   166,   167,     0,   168,     0,   169,
     170,   171,   172,   173,     0,   174,   175,     0,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,   188,     0,   189,   190,   191,   192,   193,     0,
       0,     0,   194,     0,     0,   195,     0,   196,     0,     0,
     197,     0,     0,     0,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,   203,     0,     0,     0,     0,
     204,   205,     0,   206,     0,     0,     0,   207,     0,   208,
     209,   210,   211,   212,     0,     0,     0,   213,     0,     0,
     214,   215,   216,     0,     0,     0,   217,     0,   218,   219,
       0,   220,   221,   222,     0,     0,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,     0,   231,   232,   233,
     234,   235,     0,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,     0,     0,     0,   242,   243,     0,   244,
       0,   245,     0,   246,   247,   248,   249,     0,   250,     0,
     251,     0,     0,     0,   252,   253,     0,   254,     0,     0,
     255,   256,     0,     0,     0,   257,   258,   259,   260,     0,
       0,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,     0,   266,   267,     0,     0,     0,   268,     0,     0,
       0,   269,   270,     0,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,     0,     0,   276,     0,     0,   277,
     278,     0,     0,     0,     0,     0,   279,   280,     0,   281,
       0,   282,     0,   283,   284,     0,     0,     0,     0,     0,
       0,     0,   285,     0,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,     0,   303,   304,   305,     0,   306,   307,   308,   309,
       0,   310,   311,     0,     0,     0,     0,   312,   313,   314,
     315,   316,   317,     0,     0,   318,   319,     0,   320,     0,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,     0,     0,   331,   332,     0,     0,   333,   334,   335,
     336,     0,     0,     0,   337,   338,     0,     0,     0,   339,
       0,   340,   341,   342,     0,   343,   344,   345,     0,   346,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   347,
     348,   349,     0,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
     364,     0,   365,     0,   366,   367,   368,   369,   370,     0,
     371,   372,   373,     0,     0,   374,     0,     0,     0,   375,
     376,   377,   378,   379,     0,     0,   380,   381,   382,   383,
     384,     0,   385,   386,     0,   387,   388,   389,     0,     0,
     390,     0,   391,     0,   392,   393,     0,   394,   395,   396,
       0,   397,     0,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
       0,   411,   412,   413,   414,     0,     0,     0,   415,     0,
       0,     0,   416,     0,   417,   418,   419,   420,     0,   421,
     422,   423,   424,   425,     0,     0,     0,   585,     0,   426,
     427,   428,     0,   429,   430,     0,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,   439,     0,
       0,     0,   440,   441,     0,   442,   443,   444,   445,   446,
     447,     0,     0,   448,   449,   450,   451,     0,   452,   453,
       0,     0,   454,   455,   456,   457,   458,     0,     0,   459,
     460,     0,   461,   462,   463,   464,   465,     0,     0,     0,
       0,   466,   467,   468,   469,   470,   471,     0,   472,   473,
       0,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,   480,   481,     0,   482,   483,     0,     0,   484,     0,
       0,   485,     0,   486,     0,   487,   488,   489,     0,     0,
       0,     0,     0,     0,   490,     0,     0,   491,     0,     0,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,     0,   497,   498,     0,   499,   500,   501,     0,   137,
     502,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   192,   193,     0,     0,
       0,   194,     0,     0,   195,     0,   196,     0,     0,   197,
       0,     0,     0,   198,   199,   200,     0,     0,   201,     0,
       0,     0,     0,   202,   203,     0,     0,     0,     0,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,     0,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,   239,   240,     0,
       0,   241,     0,     0,     0,   242,   243,  1076,   244,     0,
     245,     0,   246,   247,   248,   249,     0,   250,     0,   251,
       0,     0,     0,   252,   253,     0,   254,     0,     0,   255,
     256,     0,     0,     0,   257,   258,   259,   260,     0,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
       0,   266,   267,     0,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,     0,   277,   278,
       0,     0,     0,     0,     0,   279,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,     0,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,     0,   306,   307,   308,   309,     0,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     316,   317,     0,     0,   318,   319,     0,   320,     0,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,     0,   331,   332,     0,     0,   333,   334,   335,   336,
       0,     0,     0,   337,   338,     0,     0,     0,   339,     0,
     340,   341,   342,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,     0,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     397,     0,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,     0,
       0,   440,   441,     0,   442,   443,   444,   445,   446,   447,
       0,     0,   448,   449,   450,   451,     0,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,     0,   459,   460,
       0,   461,   462,   463,   464,   465,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   487,   488,   489,     0,     0,     0,
       0,     0,     0,   490,     0,     0,   491,     0,     0,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,   137,   502,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,     0,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,     0,     0,     0,   154,     0,
       0,     0,   155,     0,     0,   156,   157,   158,     0,   159,
       0,   160,   161,     0,     0,   162,     0,     0,   163,   164,
       0,   165,   166,   167,     0,   168,     0,   169,   170,   171,
     172,   173,     0,   174,   175,     0,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,     0,   187,
     188,     0,   189,   190,   191,   192,   193,     0,     0,     0,
     194,     0,     0,   195,     0,   196,     0,     0,   197,     0,
       0,     0,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,   203,     0,     0,     0,   903,   204,   205,
       0,   206,     0,     0,     0,   207,     0,   208,   209,   210,
     211,   212,     0,     0,     0,   213,     0,     0,   214,   215,
     216,     0,     0,     0,   217,     0,   218,   219,     0,   220,
     221,   222,     0,     0,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,   239,   240,     0,     0,
     241,     0,     0,     0,   242,   243,     0,   244,     0,   245,
       0,   246,   247,   248,   249,     0,   250,     0,   251,     0,
       0,     0,   252,   253,     0,   254,     0,     0,   255,   256,
       0,     0,     0,   257,   258,   259,   260,     0,     0,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,     0,
     266,   267,     0,     0,     0,   268,     0,     0,     0,   269,
     270,     0,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,     0,     0,   276,     0,     0,   277,   278,     0,
       0,     0,     0,     0,   279,   280,     0,   281,     0,   282,
       0,   283,   284,     0,     0,     0,     0,     0,     0,     0,
     285,     0,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,     0,
     303,   304,   305,     0,   306,   307,   308,   309,     0,   310,
     311,     0,     0,     0,     0,   312,   313,   314,   315,   316,
     317,     0,     0,   318,   319,     0,   320,     0,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,     0,
       0,   331,   332,     0,     0,   333,   334,   335,   336,     0,
       0,     0,   337,   338,     0,     0,     0,   339,     0,   340,
     341,   342,     0,   343,   344,   345,     0,   346,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   347,   348,   349,
       0,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,   364,     0,
     365,     0,   366,   367,   368,   369,   370,     0,   371,   372,
     373,     0,     0,   374,     0,     0,     0,   375,   376,   377,
     378,   379,     0,     0,   380,   381,   382,   383,   384,     0,
     385,   386,     0,   387,   388,   389,     0,     0,   390,     0,
     391,     0,   392,   393,     0,   394,   395,   396,     0,   397,
       0,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,     0,   409,   410,     0,     0,     0,   411,
     412,   413,   414,     0,     0,     0,   415,     0,     0,     0,
     416,     0,   417,   418,   419,   420,     0,   421,   422,   423,
     424,   425,     0,     0,     0,     0,     0,   426,   427,   428,
       0,   429,   430,     0,   431,     0,     0,   432,     0,     0,
     433,   434,   435,   436,   437,   438,   439,     0,     0,     0,
     440,   441,     0,   442,   443,   444,   445,   446,   447,     0,
       0,   448,   449,   450,   451,     0,   452,   453,     0,     0,
     454,   455,   456,   457,   458,     0,     0,   459,   460,     0,
     461,   462,   463,   464,   465,     0,     0,     0,     0,   466,
     467,   468,   469,   470,   471,     0,   472,   473,     0,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,   480,
     481,     0,   482,   483,     0,     0,   484,     0,     0,   485,
       0,   486,     0,   487,   488,   489,     0,     0,     0,     0,
       0,     0,   490,     0,     0,   491,     0,     0,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,     0,
     497,   498,     0,   499,   500,   501,     0,   137,   502,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,   145,     0,     0,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,     0,     0,     0,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
     160,   161,     0,     0,   162,     0,     0,   163,   164,     0,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,     0,   174,   175,     0,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,     0,   187,   188,
       0,   189,   190,   191,   192,   193,     0,     0,     0,   194,
       0,     0,   195,     0,   196,     0,     0,   197,     0,     0,
       0,   198,   199,   200,     0,     0,   201,     0,     0,     0,
       0,   202,   203,     0,     0,     0,   903,   204,   205,     0,
     206,     0,     0,     0,   207,     0,   208,   209,   210,   211,
     212,     0,     0,     0,   213,     0,     0,   214,   215,   216,
       0,     0,     0,   217,     0,   218,   219,     0,   220,   221,
     222,     0,     0,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,   239,   240,     0,     0,   241,
       0,     0,     0,   242,   243,     0,   244,     0,   245,     0,
     246,   247,   248,   249,     0,   250,     0,   251,     0,     0,
       0,   252,   253,     0,   254,     0,     0,   255,   256,     0,
       0,     0,   257,   258,   259,   260,     0,     0,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,     0,   266,
     267,     0,     0,     0,   268,     0,     0,     0,   269,   270,
       0,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,     0,     0,   276,     0,     0,   277,   278,     0,     0,
       0,     0,     0,   279,   280,     0,   281,     0,   282,     0,
     283,   284,     0,     0,     0,     0,     0,     0,     0,   285,
       0,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,     0,   303,
     304,   305,     0,   306,   307,   308,   309,     0,   310,   311,
       0,     0,     0,     0,   312,   313,   314,   315,   316,   317,
       0,     0,   318,   319,     0,   320,     0,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,     0,
     331,   332,     0,     0,   333,   334,   335,   336,     0,     0,
       0,   337,   338,     0,     0,     0,   339,     0,   340,   341,
     342,     0,   343,   344,   345,     0,   346,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   347,   348,   349,     0,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,     0,     0,   390,     0,   391,
       0,   392,   393,     0,   394,   395,   396,     0,   397,     0,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,     0,   411,   412,
     413,   414,     0,     0,     0,   415,     0,     0,     0,   416,
       0,   417,   418,   419,   420,     0,   421,   422,   423,   424,
     425,     0,     0,     0,     0,     0,   426,   427,   428,     0,
     429,   430,     0,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,     0,     0,     0,   440,
     441,     0,   442,   443,   444,   445,   446,   447,     0,     0,
     448,   449,   450,   451,     0,   452,   453,     0,     0,   454,
     455,   456,   457,   458,     0,     0,   459,   460,     0,   461,
     462,   463,   464,   465,     0,     0,     0,     0,   466,   467,
     468,   469,   470,   471,     0,  1929,   473,     0,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,   480,   481,
       0,   482,   483,     0,     0,   484,     0,     0,   485,     0,
     486,     0,   487,   488,   489,     0,     0,     0,     0,     0,
       0,   490,     0,     0,   491,     0,     0,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,     0,   497,
     498,     0,   499,   500,   501,     0,   137,   502,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     145,     0,     0,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,     0,     0,     0,   154,     0,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,   160,
     161,     0,     0,   162,     0,     0,   163,   164,     0,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
       0,   174,   175,     0,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,   188,     0,
     189,   190,   191,   192,   193,     0,     0,     0,   194,     0,
       0,   195,     0,   196,     0,     0,   197,     0,     0,     0,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,   203,     0,     0,     0,  2123,   204,   205,     0,   206,
       0,     0,     0,   207,     0,   208,   209,   210,   211,   212,
       0,     0,     0,   213,     0,     0,   214,   215,   216,     0,
       0,     0,   217,     0,   218,   219,     0,   220,   221,   222,
       0,     0,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,   239,   240,     0,     0,   241,     0,
       0,     0,   242,   243,     0,   244,     0,   245,     0,   246,
     247,   248,   249,     0,   250,     0,   251,     0,     0,     0,
     252,   253,     0,   254,     0,     0,   255,   256,     0,     0,
       0,   257,   258,   259,   260,     0,     0,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,     0,   266,   267,
       0,     0,     0,   268,     0,     0,     0,   269,   270,     0,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
       0,     0,   276,     0,     0,   277,   278,     0,     0,     0,
       0,     0,   279,   280,     0,   281,     0,   282,     0,   283,
     284,     0,     0,     0,     0,     0,     0,     0,   285,     0,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,     0,   303,   304,
     305,     0,   306,   307,   308,   309,     0,   310,   311,     0,
       0,     0,     0,   312,   313,   314,   315,   316,   317,     0,
       0,   318,   319,     0,   320,     0,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,     0,     0,   331,
     332,     0,     0,   333,   334,   335,   336,     0,     0,     0,
     337,   338,     0,     0,     0,   339,     0,   340,   341,   342,
       0,   343,   344,   345,     0,   346,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   347,   348,   349,     0,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,   386,
       0,   387,   388,   389,     0,     0,   390,     0,   391,     0,
     392,   393,     0,   394,   395,   396,     0,   397,     0,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,     0,   411,   412,   413,
     414,     0,     0,     0,   415,     0,     0,     0,   416,     0,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
       0,     0,     0,     0,     0,   426,   427,   428,     0,   429,
     430,     0,   431,     0,     0,   432,     0,     0,   433,   434,
     435,   436,   437,   438,   439,     0,     0,     0,   440,   441,
       0,   442,   443,   444,   445,   446,   447,     0,     0,   448,
     449,   450,   451,     0,   452,   453,     0,     0,   454,   455,
     456,   457,   458,     0,     0,   459,   460,     0,   461,   462,
     463,   464,   465,     0,     0,     0,     0,   466,   467,   468,
     469,   470,   471,     0,   472,   473,     0,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,   480,   481,     0,
     482,   483,     0,     0,   484,     0,     0,   485,     0,   486,
       0,   487,   488,   489,     0,     0,     0,     0,     0,     0,
     490,     0,     0,   491,     0,     0,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,     0,   497,   498,
       0,   499,   500,   501,     0,   137,   502,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,   145,
       0,     0,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,   160,   161,
       0,     0,   162,     0,     0,   163,   164,     0,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,     0,
     174,   175,     0,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   186,     0,   187,   188,     0,   189,
     190,   191,   192,   193,     0,     0,     0,   194,     0,     0,
     195,     0,   196,     0,     0,   197,     0,     0,     0,   198,
     199,   200,     0,     0,   201,     0,     0,     0,     0,   202,
     203,     0,     0,     0,  3012,   204,   205,     0,   206,     0,
       0,     0,   207,     0,   208,   209,   210,   211,   212,     0,
       0,     0,   213,     0,     0,   214,   215,   216,     0,     0,
       0,   217,     0,   218,   219,     0,   220,   221,   222,     0,
       0,   223,   224,     0,   225,   226,   227,   228,   229,   230,
       0,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,     0,     0,
       0,   242,   243,     0,   244,     0,   245,     0,   246,   247,
     248,   249,     0,   250,     0,   251,     0,     0,     0,   252,
     253,     0,   254,     0,     0,   255,   256,     0,     0,     0,
     257,   258,   259,   260,     0,     0,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,     0,   266,   267,     0,
       0,     0,   268,     0,     0,     0,   269,   270,     0,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,     0,
       0,   276,     0,     0,   277,   278,     0,     0,     0,     0,
       0,   279,   280,     0,   281,     0,   282,     0,   283,   284,
       0,     0,     0,     0,     0,     0,     0,   285,     0,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,     0,   303,   304,   305,
       0,   306,   307,   308,   309,     0,   310,   311,     0,     0,
       0,     0,   312,   313,   314,   315,   316,   317,     0,     0,
     318,   319,     0,   320,     0,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,     0,   331,   332,
       0,     0,   333,   334,   335,   336,     0,     0,     0,   337,
     338,     0,     0,     0,   339,     0,   340,   341,   342,     0,
     343,   344,   345,     0,   346,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   347,   348,   349,     0,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,     0,     0,   390,     0,   391,     0,   392,
     393,     0,   394,   395,   396,     0,   397,     0,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,     0,   411,   412,   413,   414,
       0,     0,     0,   415,     0,     0,     0,   416,     0,   417,
     418,   419,   420,     0,   421,   422,   423,   424,   425,     0,
       0,     0,     0,     0,   426,   427,   428,     0,   429,   430,
       0,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,     0,     0,     0,   440,   441,     0,
     442,   443,   444,   445,   446,   447,     0,     0,   448,   449,
     450,   451,     0,   452,   453,     0,     0,   454,   455,   456,
     457,   458,     0,     0,   459,   460,     0,   461,   462,   463,
     464,   465,     0,     0,     0,     0,   466,   467,   468,   469,
     470,   471,     0,   472,   473,     0,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,   480,   481,     0,   482,
     483,     0,     0,   484,     0,     0,   485,     0,   486,     0,
     487,   488,   489,     0,     0,     0,     0,     0,     0,   490,
       0,     0,   491,     0,     0,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,     0,   497,   498,     0,
     499,   500,   501,     0,   137,   502,   138,   139,   140,   141,
     142,  3020,     0,   143,     0,     0,     0,   144,   145,     0,
       0,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,   160,   161,     0,
       0,   162,     0,     0,   163,   164,     0,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,     0,   174,
     175,     0,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,     0,   187,   188,     0,   189,   190,
     191,   192,   193,     0,     0,     0,   194,     0,     0,   195,
       0,   196,     0,     0,   197,     0,     0,     0,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,   203,
       0,     0,     0,     0,   204,   205,     0,   206,     0,     0,
       0,   207,     0,   208,   209,   210,   211,   212,     0,     0,
       0,   213,     0,     0,   214,   215,   216,     0,     0,     0,
     217,     0,   218,   219,     0,   220,   221,   222,     0,     0,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,   239,   240,     0,     0,   241,     0,     0,     0,
     242,   243,     0,   244,     0,   245,     0,   246,   247,   248,
     249,     0,   250,     0,   251,     0,     0,     0,   252,   253,
       0,   254,     0,     0,   255,   256,     0,     0,     0,   257,
     258,   259,   260,     0,     0,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,     0,   266,   267,     0,     0,
       0,   268,     0,     0,     0,   269,   270,     0,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,     0,     0,
     276,     0,     0,   277,   278,     0,     0,     0,     0,     0,
     279,   280,     0,   281,     0,   282,     0,   283,   284,     0,
       0,     0,     0,     0,     0,     0,   285,     0,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,     0,   303,   304,   305,     0,
     306,   307,   308,   309,     0,   310,   311,     0,     0,     0,
       0,   312,   313,   314,   315,   316,   317,     0,     0,   318,
     319,     0,   320,     0,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,     0,     0,   331,   332,     0,
       0,   333,   334,   335,   336,     0,     0,     0,   337,   338,
       0,     0,     0,   339,     0,   340,   341,   342,     0,   343,
     344,   345,     0,   346,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   347,   348,   349,     0,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,   364,     0,   365,     0,   366,   367,
     368,   369,   370,     0,   371,   372,   373,     0,     0,   374,
       0,     0,     0,   375,   376,   377,   378,   379,     0,     0,
     380,   381,   382,   383,   384,     0,   385,   386,     0,   387,
     388,   389,     0,     0,   390,     0,   391,     0,   392,   393,
       0,   394,   395,   396,     0,   397,     0,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,     0,   411,   412,   413,   414,     0,
       0,     0,   415,     0,     0,     0,   416,     0,   417,   418,
     419,   420,     0,   421,   422,   423,   424,   425,     0,     0,
       0,     0,     0,   426,   427,   428,     0,   429,   430,     0,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,     0,     0,     0,   440,   441,     0,   442,
     443,   444,   445,   446,   447,     0,     0,   448,   449,   450,
     451,     0,   452,   453,     0,     0,   454,   455,   456,   457,
     458,     0,     0,   459,   460,     0,   461,   462,   463,   464,
     465,     0,     0,     0,     0,   466,   467,   468,   469,   470,
     471,     0,   472,   473,     0,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,   480,   481,     0,   482,   483,
       0,     0,   484,     0,     0,   485,     0,   486,     0,   487,
     488,   489,     0,     0,     0,     0,     0,     0,   490,     0,
       0,   491,     0,     0,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,     0,   497,   498,     0,   499,
     500,   501,     0,   137,   502,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,   145,     0,     0,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
       0,     0,     0,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,   160,   161,     0,     0,
     162,     0,     0,   163,   164,     0,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,     0,   174,   175,
       0,   176,   177,     0,   178,   179,   180,   181,   182,   183,
     184,   185,   186,     0,   187,   188,     0,   189,   190,   191,
     192,   193,     0,     0,     0,   194,     0,     0,   195,     0,
     196,     0,     0,   197,     0,     0,     0,   198,   199,   200,
       0,     0,   201,     0,     0,     0,     0,   202,   203,     0,
       0,     0,  3044,   204,   205,     0,   206,     0,     0,     0,
     207,     0,   208,   209,   210,   211,   212,     0,     0,     0,
     213,     0,     0,   214,   215,   216,     0,     0,     0,   217,
       0,   218,   219,     0,   220,   221,   222,     0,     0,   223,
     224,     0,   225,   226,   227,   228,   229,   230,     0,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,   239,   240,     0,     0,   241,     0,     0,     0,   242,
     243,     0,   244,     0,   245,     0,   246,   247,   248,   249,
       0,   250,     0,   251,     0,     0,     0,   252,   253,     0,
     254,     0,     0,   255,   256,     0,     0,     0,   257,   258,
     259,   260,     0,     0,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,     0,   266,   267,     0,     0,     0,
     268,     0,     0,     0,   269,   270,     0,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,     0,     0,   276,
       0,     0,   277,   278,     0,     0,     0,     0,     0,   279,
     280,     0,   281,     0,   282,     0,   283,   284,     0,     0,
       0,     0,     0,     0,     0,   285,     0,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,     0,   303,   304,   305,     0,   306,
     307,   308,   309,     0,   310,   311,     0,     0,     0,     0,
     312,   313,   314,   315,   316,   317,     0,     0,   318,   319,
       0,   320,     0,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,     0,     0,   331,   332,     0,     0,
     333,   334,   335,   336,     0,     0,     0,   337,   338,     0,
       0,     0,   339,     0,   340,   341,   342,     0,   343,   344,
     345,     0,   346,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   347,   348,   349,     0,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,     0,     0,   390,     0,   391,     0,   392,   393,     0,
     394,   395,   396,     0,   397,     0,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,     0,   411,   412,   413,   414,     0,     0,
       0,   415,     0,     0,     0,   416,     0,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,     0,     0,     0,
       0,     0,   426,   427,   428,     0,   429,   430,     0,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,     0,     0,     0,   440,   441,     0,   442,   443,
     444,   445,   446,   447,     0,     0,   448,   449,   450,   451,
       0,   452,   453,     0,     0,   454,   455,   456,   457,   458,
       0,     0,   459,   460,     0,   461,   462,   463,   464,   465,
       0,     0,     0,     0,   466,   467,   468,   469,   470,   471,
       0,   472,   473,     0,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,   480,   481,     0,   482,   483,     0,
       0,   484,     0,     0,   485,     0,   486,     0,   487,   488,
     489,     0,     0,     0,     0,     0,     0,   490,     0,     0,
     491,     0,     0,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,     0,   497,   498,     0,   499,   500,
     501,     0,   137,   502,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,   160,   161,     0,     0,   162,
       0,     0,   163,   164,     0,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,     0,   174,   175,     0,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,   188,     0,   189,   190,   191,   192,
     193,     0,     0,     0,   194,     0,     0,   195,     0,   196,
       0,     0,   197,     0,     0,     0,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,   203,     0,     0,
       0,     0,   204,   205,     0,   206,     0,     0,     0,   207,
       0,   208,   209,   210,   211,   212,     0,     0,     0,   213,
       0,     0,   214,   215,   216,     0,     0,     0,   217,     0,
     218,   219,     0,   220,   221,   222,     0,     0,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,     0,   238,
     239,   240,     0,     0,   241,     0,     0,     0,   242,   243,
       0,   244,     0,   245,     0,   246,   247,   248,   249,     0,
     250,     0,   251,     0,     0,     0,   252,   253,     0,   254,
       0,     0,   255,   256,     0,     0,     0,   257,   258,   259,
     260,     0,     0,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,     0,   266,   267,     0,     0,     0,   268,
       0,     0,     0,   269,   270,     0,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,     0,     0,   276,     0,
       0,   277,   278,     0,     0,     0,     0,     0,   279,   280,
       0,   281,     0,   282,     0,   283,   284,     0,     0,     0,
       0,     0,     0,     0,   285,     0,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,     0,   303,   304,   305,     0,   306,   307,
     308,   309,     0,   310,   311,     0,     0,     0,     0,   312,
     313,   314,   315,   316,   317,     0,     0,   318,   319,     0,
     320,     0,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,     0,   331,   332,     0,     0,   333,
     334,   335,   336,     0,     0,     0,   337,   338,     0,     0,
       0,   339,     0,   340,   341,   342,     0,   343,   344,   345,
       0,   346,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   347,   348,   349,     0,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,   364,  3109,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,     0,   391,     0,   392,   393,     0,   394,
     395,   396,     0,   397,     0,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,     0,   411,   412,   413,   414,     0,     0,     0,
     415,     0,     0,     0,   416,     0,   417,   418,   419,   420,
       0,   421,   422,   423,   424,   425,     0,     0,     0,     0,
       0,   426,   427,   428,     0,   429,   430,     0,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,     0,     0,     0,   440,   441,     0,   442,   443,   444,
     445,   446,   447,     0,     0,   448,   449,   450,   451,     0,
     452,   453,     0,     0,   454,   455,   456,   457,   458,     0,
       0,   459,   460,     0,   461,   462,   463,   464,   465,     0,
       0,     0,     0,   466,   467,   468,   469,   470,   471,     0,
     472,   473,     0,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,   480,   481,     0,   482,   483,     0,     0,
     484,     0,     0,   485,     0,   486,     0,   487,   488,   489,
       0,     0,     0,     0,     0,     0,   490,     0,     0,   491,
       0,     0,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,     0,   497,   498,     0,   499,   500,   501,
       0,   137,   502,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,   145,     0,     0,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   153,     0,     0,
       0,   154,     0,     0,     0,   155,     0,     0,   156,   157,
     158,     0,   159,     0,   160,   161,     0,     0,   162,     0,
       0,   163,   164,     0,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,     0,   174,   175,     0,   176,
     177,     0,   178,   179,   180,   181,   182,   183,   184,   185,
     186,     0,   187,   188,     0,   189,   190,   191,   192,   193,
       0,     0,     0,   194,     0,     0,   195,     0,   196,     0,
       0,   197,     0,     0,     0,   198,   199,   200,     0,     0,
     201,     0,     0,     0,     0,   202,   203,     0,     0,     0,
       0,   204,   205,     0,   206,     0,     0,     0,   207,     0,
     208,   209,   210,   211,   212,     0,     0,     0,   213,     0,
       0,   214,   215,   216,     0,     0,     0,   217,     0,   218,
     219,     0,   220,   221,   222,     0,     0,   223,   224,     0,
     225,   226,   227,   228,   229,   230,     0,     0,   231,   232,
     233,   234,   235,     0,     0,   236,   237,     0,   238,   239,
     240,     0,     0,   241,     0,     0,     0,   242,   243,     0,
     244,     0,   245,     0,   246,   247,   248,   249,     0,   250,
       0,   251,     0,     0,     0,   252,   253,     0,   254,     0,
       0,   255,   256,     0,     0,     0,   257,   258,   259,   260,
       0,     0,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,     0,   266,   267,     0,     0,     0,   268,     0,
       0,     0,   269,   270,     0,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,     0,     0,   276,     0,     0,
     277,   278,     0,     0,     0,     0,     0,   279,   280,     0,
     281,     0,   282,     0,   283,   284,     0,     0,     0,     0,
       0,     0,     0,   285,     0,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,     0,   303,   304,   305,     0,   306,   307,   308,
     309,     0,   310,   311,     0,     0,     0,     0,   312,   313,
     314,   315,   316,   317,     0,     0,   318,   319,     0,   320,
       0,   321,     0,   322,   323,   324,   325,   326,   327,   328,
     329,   330,     0,     0,   331,   332,     0,     0,   333,   334,
     335,   336,     0,     0,     0,   337,   338,     0,     0,     0,
     339,     0,   340,   341,   342,     0,   343,   344,   345,     0,
     346,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     347,   348,   349,     0,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,     0,   391,     0,   392,   393,     0,   394,   395,
     396,     0,   397,     0,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,     0,   411,   412,   413,   414,     0,     0,     0,   415,
       0,     0,     0,   416,     0,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,     0,     0,     0,     0,     0,
     426,   427,   428,     0,   429,   430,     0,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
       0,     0,     0,   440,   441,     0,   442,   443,   444,   445,
     446,   447,     0,     0,   448,   449,   450,   451,     0,   452,
     453,     0,     0,   454,   455,   456,   457,   458,     0,   134,
     459,   460,     0,   461,   462,   463,   464,   465,     0,     0,
       0,     0,   466,   467,   468,   469,   470,   471,     0,   472,
     473,     0,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,   480,   481,     0,   482,   483,     0,     0,   484,
       0,     0,   485,     0,   486,     0,   487,   488,   489,     0,
       0,     0,     0,     0,     0,   490,     0,     0,   491,     0,
       0,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,     0,   497,   498,     0,   499,   500,   501,     0,
     137,   502,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,   145,     0,     0,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,     0,     0,     0,
     154,     0,     0,     0,   155,     0,     0,   156,   157,   158,
       0,   159,     0,   160,   161,     0,     0,   162,     0,     0,
     163,   164,     0,   165,   166,   167,     0,   168,     0,   169,
     170,   171,   172,   173,     0,   174,   175,     0,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,   188,     0,   189,   190,   191,   192,   193,     0,
       0,     0,   194,     0,     0,   195,     0,   196,     0,     0,
     197,     0,     0,     0,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,   203,     0,     0,     0,     0,
     204,   205,     0,   206,     0,     0,     0,   207,     0,   208,
     209,   210,   211,   212,     0,     0,     0,   213,     0,     0,
     214,   215,   216,     0,     0,     0,   217,     0,   218,   219,
       0,   220,   221,   222,     0,     0,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,     0,   231,   232,   233,
     234,   235,     0,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,     0,     0,     0,   242,   243,     0,   244,
       0,   245,     0,   246,   247,   248,   249,     0,   250,     0,
     251,     0,     0,     0,   252,   253,     0,   254,     0,     0,
     255,   256,     0,     0,     0,   257,   258,   259,   260,     0,
       0,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,     0,   266,   267,     0,     0,     0,   268,     0,     0,
       0,   269,   270,     0,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,     0,     0,   276,     0,     0,   277,
     278,     0,     0,     0,     0,     0,   279,   280,     0,   281,
       0,   282,     0,   283,   284,     0,     0,     0,     0,     0,
       0,     0,   285,     0,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,     0,   303,   304,   305,     0,   306,   307,   308,   309,
       0,   310,   311,     0,     0,     0,     0,   312,   313,   314,
     315,   316,   317,     0,     0,   318,   319,     0,   320,     0,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,     0,     0,   331,   332,     0,     0,   333,   334,   335,
     336,     0,     0,     0,   337,   338,     0,     0,     0,   339,
       0,   340,   341,   342,     0,   343,   344,   345,     0,   346,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   347,
     348,   349,     0,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
     364,     0,   365,     0,   366,   367,   368,   369,   370,     0,
     371,   372,   373,     0,     0,   374,     0,     0,     0,   375,
     376,   377,   378,   379,     0,     0,   380,   381,   382,   383,
     384,     0,   385,   386,     0,   387,   388,   389,     0,     0,
     390,     0,   391,     0,   392,   393,     0,   394,   395,   396,
       0,   397,     0,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
       0,   411,   412,   413,   414,     0,     0,     0,   415,     0,
       0,     0,   416,     0,   417,   418,   419,   420,     0,   421,
     422,   423,   424,   425,     0,     0,     0,     0,     0,   426,
     427,   428,     0,   429,   430,     0,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,   439,     0,
       0,     0,   440,   441,     0,   442,   443,   444,   445,   446,
     447,     0,     0,   448,   449,   450,   451,     0,   452,   453,
       0,     0,   454,   455,   456,   457,   458,     0,     0,   459,
     460,     0,   461,   462,   463,   464,   465,     0,     0,     0,
       0,   466,   467,   468,   469,   470,   471,     0,   472,   473,
       0,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,   480,   481,     0,   482,   483,     0,     0,   484,     0,
       0,   485,     0,   486,     0,   487,   488,   489,     0,     0,
       0,     0,     0,     0,   490,     0,     0,   491,     0,     0,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,     0,   497,   498,     0,   499,   500,   501,     0,   137,
     502,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,   160,   161,     0,     0,   162,     0,     0,   163,
     164,     0,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,     0,   174,   175,     0,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,   192,   193,     0,     0,
       0,   194,     0,     0,   195,     0,   196,     0,     0,   197,
       0,     0,     0,   198,   199,   200,     0,     0,   201,     0,
       0,     0,     0,   202,   203,     0,     0,     0,     0,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,   218,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,   230,     0,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,  1840,   240,     0,
       0,   241,     0,     0,     0,   242,   243,     0,   244,     0,
     245,     0,   246,   247,   248,   249,     0,   250,     0,   251,
       0,     0,     0,   252,   253,     0,   254,     0,     0,   255,
     256,     0,     0,     0,   257,   258,   259,   260,     0,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
       0,   266,   267,     0,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,     0,     0,   276,     0,     0,   277,   278,
       0,     0,     0,     0,     0,   279,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,     0,     0,     0,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,     0,   306,   307,   308,   309,     0,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     316,   317,     0,     0,   318,   319,     0,   320,     0,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,     0,   331,   332,     0,     0,   333,  1841,   335,   336,
       0,     0,     0,   337,   338,     0,     0,     0,   339,     0,
     340,   341,   342,     0,   343,   344,   345,     0,   346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
     349,     0,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
       0,   391,     0,   392,   393,     0,   394,   395,   396,     0,
     397,     0,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,     0,
     411,   412,   413,   414,     0,     0,     0,   415,     0,     0,
       0,   416,     0,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,     0,     0,
       0,   440,   441,     0,   442,   443,   444,   445,   446,   447,
       0,     0,   448,   449,   450,   451,     0,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,     0,   459,   460,
       0,   461,   462,   463,   464,   465,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
     480,   481,     0,   482,   483,     0,     0,   484,     0,     0,
     485,     0,   486,     0,   487,   488,   489,     0,     0,     0,
       0,     0,     0,   490,     0,     0,   491,     0,     0,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
       0,   497,   498,     0,   499,   500,   501,     0,   137,   502,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,     0,     0,     0,   147,   148,   149,
     150,   151,     0,     0,  -366,     0,     0,     0,   154,     0,
       0,     0,   155,     0,     0,   156,   157,   158,     0,   159,
       0,     0,     0,     0,     0,   162,  4155,     0,   163,   164,
       0,   165,   166,     0,     0,     0,     0,   169,   170,   171,
     172,  4156,     0,   174,   175,     0,   176,   177,     0,   178,
     179,     0,   181,     0,   183,   184,   185,   186,     0,   187,
     188,     0,   189,   190,   191,     0,   193,     0,     0,     0,
     194,     0,     0,   195,     0,   196,     0,     0,   197,     0,
       0,     0,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,     0,     0,     0,     0,     0,   204,   205,
       0,   206,     0,     0,     0,   207,     0,   208,   209,   210,
     211,   212,     0,     0,     0,     0,     0,     0,   214,   215,
     216,     0,  -336,  -336,   217,     0,  -336,   219,     0,   220,
     221,   222,     0,     0,   223,   224,     0,   225,   226,   227,
     228,   229,     0,     0,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,  4157,   238,   239,   240,     0,     0,
       0,     0,     0,     0,     0,   243,     0,   244,     0,   245,
       0,   246,   247,   248,   249,     0,   250,     0,   251,     0,
       0,     0,     0,   253,     0,     0,     0,     0,     0,   256,
       0,     0,     0,   257,   258,   259,   260,  4158,     0,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,     0,
     266,     0,     0,     0,     0,   268,     0,     0,     0,   269,
     270,     0,   271,   272,  4159,     0,     0,   273,     0,     0,
       0,   275,     0,     0,   276,  4160,     0,   277,   278,     0,
       0,     0,     0,     0,   279,   280,     0,   281,     0,   282,
       0,   283,   284,     0,     0,     0,     0,  -321,     0,     0,
     285,     0,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,     0,
     303,   304,   305,     0,   306,   307,   308,   309,     0,   310,
     311,     0,     0,     0,     0,   312,   313,   314,   315,   316,
     317,     0,     0,   318,   319,     0,   320,     0,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,     0,
       0,   331,   332,     0,     0,   333,   334,   335,   336,     0,
       0,     0,     0,   338,     0,     0,     0,   339,     0,   340,
     341,   342,     0,   343,   344,  4161,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   348,   349,
       0,     0,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,     0,     0,     0,   363,   364,     0,
     365,     0,   366,   367,   368,   369,   370,     0,   371,   372,
     373,     0,     0,   374,     0,     0,     0,   375,   376,   377,
     378,   379,     0,     0,   380,   381,   382,   383,   384,     0,
     385,     0,     0,   387,     0,   389,  -321,     0,   390,     0,
       0,     0,   392,     0,     0,   394,   395,   396,  4162,   397,
       0,     0,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   407,   408,     0,   409,     0,     0,     0,     0,   411,
     412,   413,     0,     0,     0,     0,   415,     0,     0,     0,
     416,     0,     0,   418,     0,   420,     0,   421,     0,     0,
     424,   425,     0,     0,     0,     0,     0,   426,   427,   428,
       0,   429,   430,     0,   431,     0,     0,   432,     0,     0,
     433,     0,   435,   436,   437,   438,   439,     0,     0,     0,
       0,   441,     0,   442,   443,   444,   445,   446,   447,     0,
       0,   448,   449,   450,   451,     0,   452,   453,     0,     0,
     454,   455,   456,   457,   458,     0,     0,   459,   460,     0,
     461,   462,   463,   464,   465,     0,     0,     0,     0,   466,
     467,   468,   469,   470,   471,     0,   472,   473,     0,     0,
       0,     0,   475,   476,   477,     0,   478,   479,     0,   480,
     481,     0,     0,     0,     0,     0,   484,     0,     0,   485,
       0,     0,     0,   487,   488,   489,     0,     0,     0,     0,
       0,     0,   490,     0,     0,   491,     0,     0,     0,   492,
     493,   494,   495,   496,     0,     0,  -321,     0,     0,     0,
     497,     0,     0,   499,     0,   501,     0,   137,   502,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,   145,     0,     0,     0,     0,   147,   148,   149,   150,
     151,     0,     0,  -366,     0,     0,     0,   154,     0,     0,
       0,   155,     0,     0,   156,   157,   158,     0,   159,     0,
       0,     0,     0,     0,   162,  4155,     0,   163,   164,     0,
     165,   166,     0,     0,     0,     0,   169,   170,   171,   172,
    4156,     0,   174,   175,     0,   176,   177,     0,   178,   179,
       0,   181,     0,   183,   184,   185,   186,     0,   187,   188,
       0,   189,   190,   191,     0,   193,     0,     0,     0,   194,
       0,     0,   195,     0,   196,     0,     0,   197,     0,     0,
       0,   198,   199,   200,     0,     0,   201,     0,     0,     0,
       0,   202,     0,     0,     0,     0,     0,   204,   205,     0,
     206,     0,     0,     0,   207,     0,   208,   209,   210,   211,
     212,     0,     0,     0,     0,     0,     0,   214,   215,   216,
       0,  -357,     0,   217,     0,  -357,   219,     0,   220,   221,
     222,     0,     0,   223,   224,     0,   225,   226,   227,   228,
     229,     0,     0,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,  4157,   238,   239,   240,     0,     0,     0,
       0,     0,     0,     0,   243,     0,   244,     0,   245,     0,
     246,   247,   248,   249,     0,   250,     0,   251,     0,     0,
       0,     0,   253,     0,     0,     0,     0,     0,   256,     0,
       0,     0,   257,   258,   259,   260,  4158,     0,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,     0,   266,
       0,     0,     0,     0,   268,     0,     0,     0,   269,   270,
       0,   271,   272,  4159,     0,     0,   273,     0,     0,     0,
     275,     0,     0,   276,  4160,     0,   277,   278,     0,     0,
       0,     0,     0,   279,   280,     0,   281,     0,   282,     0,
     283,   284,     0,     0,     0,     0,  -321,     0,     0,   285,
       0,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,     0,   303,
     304,   305,     0,   306,   307,   308,   309,     0,   310,   311,
       0,     0,     0,     0,   312,   313,   314,   315,   316,   317,
       0,     0,   318,   319,     0,   320,     0,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,     0,
     331,   332,     0,     0,   333,   334,   335,   336,     0,     0,
       0,     0,   338,     0,     0,     0,   339,     0,   340,   341,
     342,     0,   343,   344,  4161,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   348,   349,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,     0,     0,     0,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
       0,     0,   387,     0,   389,  -321,     0,   390,     0,     0,
       0,   392,     0,     0,   394,   395,   396,  4162,   397,     0,
       0,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     407,   408,     0,   409,     0,     0,     0,     0,   411,   412,
     413,     0,     0,     0,     0,   415,     0,     0,     0,   416,
       0,     0,   418,     0,   420,     0,   421,     0,     0,   424,
     425,     0,     0,     0,     0,     0,   426,   427,   428,     0,
     429,   430,     0,   431,     0,     0,   432,     0,     0,   433,
       0,   435,   436,   437,   438,   439,     0,     0,     0,     0,
     441,     0,   442,   443,   444,   445,   446,   447,     0,     0,
     448,   449,   450,   451,     0,   452,   453,     0,     0,   454,
     455,   456,   457,   458,     0,     0,   459,   460,     0,   461,
     462,   463,   464,   465,     0,     0,     0,     0,   466,   467,
     468,   469,   470,   471,     0,   472,   473,     0,     0,     0,
       0,   475,   476,   477,     0,   478,   479,     0,   480,   481,
       0,     0,     0,     0,     0,   484,     0,     0,   485,     0,
       0,     0,   487,   488,   489,     0,     0,     0,     0,     0,
       0,   490,     0,     0,   491,     0,     0,     0,   492,   493,
     494,   495,   496,  -357,     0,  -321,     0,     0,     0,   497,
       0,     0,   499,     0,   501,     0,   137,   502,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     145,     0,     0,     0,     0,   147,   148,   149,   150,   151,
       0,     0,  -366,     0,     0,     0,   154,     0,     0,     0,
     155,     0,     0,   156,   157,   158,     0,   159,     0,     0,
       0,     0,     0,   162,  4155,     0,   163,   164,     0,   165,
     166,     0,     0,     0,     0,   169,   170,   171,   172,  4156,
       0,   174,   175,     0,   176,   177,     0,   178,   179,     0,
     181,     0,   183,   184,   185,   186,     0,   187,   188,     0,
     189,   190,   191,     0,   193,     0,     0,     0,   194,     0,
       0,   195,     0,   196,     0,     0,   197,     0,     0,     0,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,     0,     0,     0,     0,     0,   204,   205,     0,   206,
       0,     0,     0,   207,     0,   208,   209,   210,   211,   212,
       0,     0,     0,     0,     0,     0,   214,   215,   216,     0,
    -354,     0,   217,     0,  -354,   219,     0,   220,   221,   222,
       0,     0,   223,   224,     0,   225,   226,   227,   228,   229,
       0,     0,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,  4157,   238,   239,   240,     0,     0,     0,     0,
       0,     0,     0,   243,     0,   244,     0,   245,     0,   246,
     247,   248,   249,     0,   250,     0,   251,     0,     0,     0,
       0,   253,     0,     0,     0,     0,     0,   256,     0,     0,
       0,   257,   258,   259,   260,  4158,     0,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,     0,   266,     0,
       0,     0,     0,   268,     0,     0,     0,   269,   270,     0,
     271,   272,  4159,     0,     0,   273,     0,     0,     0,   275,
       0,     0,   276,  4160,     0,   277,   278,     0,     0,     0,
       0,     0,   279,   280,     0,   281,     0,   282,     0,   283,
     284,     0,     0,     0,     0,  -321,     0,     0,   285,     0,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,     0,   303,   304,
     305,     0,   306,   307,   308,   309,     0,   310,   311,     0,
       0,     0,     0,   312,   313,   314,   315,   316,   317,     0,
       0,   318,   319,     0,   320,     0,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,     0,     0,   331,
     332,     0,     0,   333,   334,   335,   336,     0,     0,     0,
       0,   338,     0,     0,     0,   339,     0,   340,   341,   342,
       0,   343,   344,  4161,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   348,   349,     0,     0,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,     0,     0,     0,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,     0,
       0,   387,     0,   389,  -321,     0,   390,     0,     0,     0,
     392,     0,     0,   394,   395,   396,  4162,   397,     0,     0,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   407,
     408,     0,   409,     0,     0,     0,     0,   411,   412,   413,
       0,     0,     0,     0,   415,     0,     0,     0,   416,     0,
       0,   418,     0,   420,     0,   421,     0,     0,   424,   425,
       0,     0,     0,     0,     0,   426,   427,   428,     0,   429,
     430,     0,   431,     0,     0,   432,     0,     0,   433,     0,
     435,   436,   437,   438,   439,     0,     0,     0,     0,   441,
       0,   442,   443,   444,   445,   446,   447,     0,     0,   448,
     449,   450,   451,     0,   452,   453,     0,     0,   454,   455,
     456,   457,   458,     0,     0,   459,   460,     0,   461,   462,
     463,   464,   465,     0,     0,     0,     0,   466,   467,   468,
     469,   470,   471,     0,   472,   473,     0,     0,     0,     0,
     475,   476,   477,     0,   478,   479,     0,   480,   481,     0,
       0,     0,     0,     0,   484,     0,     0,   485,     0,     0,
       0,   487,   488,   489,     0,     0,     0,     0,     0,     0,
     490,     0,     0,   491,     0,     0,     0,   492,   493,   494,
     495,   496,  -354,     0,  -321,     0,     0,     0,   497,     0,
       0,   499,     0,   501,     0,   137,   502,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,   145,
       0,     0,     0,     0,   147,   148,   149,   150,   151,     0,
       0,  -366,     0,     0,     0,   154,     0,     0,     0,   155,
       0,     0,   156,   157,   158,     0,   159,     0,     0,     0,
       0,     0,   162,  4155,     0,   163,   164,     0,   165,   166,
       0,     0,     0,     0,   169,   170,   171,   172,  4156,     0,
     174,   175,     0,   176,   177,     0,   178,   179,     0,   181,
       0,   183,   184,   185,   186,     0,   187,   188,     0,   189,
     190,   191,     0,   193,     0,     0,     0,   194,     0,     0,
     195,     0,   196,     0,     0,   197,     0,     0,     0,   198,
     199,   200,     0,     0,   201,     0,     0,     0,     0,   202,
       0,     0,     0,     0,     0,   204,   205,     0,   206,     0,
       0,     0,   207,     0,   208,   209,   210,   211,   212,     0,
       0,     0,     0,     0,     0,   214,   215,   216,     0,     0,
       0,   217,     0,  4422,   219,     0,   220,   221,   222,     0,
       0,   223,   224,     0,   225,   226,   227,   228,   229,     0,
       0,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,  4157,   238,   239,   240,     0,     0,     0,     0,     0,
       0,     0,   243,     0,   244,     0,   245,     0,   246,   247,
     248,   249,     0,   250,     0,   251,     0,     0,     0,     0,
     253,     0,     0,     0,     0,     0,   256,     0,     0,     0,
     257,   258,   259,   260,  4158,     0,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,     0,   266,     0,     0,
       0,     0,   268,     0,     0,     0,   269,   270,     0,   271,
     272,  4159,     0,     0,   273,     0,     0,     0,   275,     0,
       0,   276,  4160,     0,   277,   278,     0,     0,     0,     0,
       0,   279,   280,     0,   281,     0,   282,     0,   283,   284,
       0,     0,     0,     0,  -321,     0,     0,   285,     0,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,     0,   303,   304,   305,
       0,   306,   307,   308,   309,     0,   310,   311,     0,     0,
       0,     0,   312,   313,   314,   315,   316,   317,     0,     0,
     318,   319,     0,   320,     0,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,     0,   331,   332,
       0,     0,   333,   334,   335,   336,     0,     0,     0,     0,
     338,     0,     0,     0,   339,     0,   340,   341,   342,     0,
     343,   344,  4161,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   348,   349,     0,     0,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,     0,     0,     0,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,     0,     0,
     387,     0,   389,  -321,     0,   390,     0,     0,     0,   392,
       0,     0,   394,   395,   396,  4162,   397,     0,     0,     0,
     399,   400,   401,   402,   403,   404,   405,     0,   407,   408,
       0,   409,     0,     0,     0,     0,   411,   412,   413,     0,
       0,     0,     0,   415,     0,     0,     0,   416,     0,     0,
     418,     0,   420,     0,   421,     0,     0,   424,   425,     0,
       0,     0,     0,     0,   426,   427,   428,     0,   429,   430,
       0,   431,     0,     0,   432,     0,     0,   433,     0,   435,
     436,   437,   438,   439,     0,     0,     0,     0,   441,     0,
     442,   443,   444,   445,   446,   447,     0,     0,   448,   449,
     450,   451,     0,   452,   453,     0,     0,   454,   455,   456,
     457,   458,     0,     0,   459,   460,     0,   461,   462,   463,
     464,   465,     0,     0,     0,     0,   466,   467,   468,   469,
     470,   471,     0,   472,   473,     0,     0,     0,     0,   475,
     476,   477,     0,   478,   479,     0,   480,   481,     0,     0,
       0,     0,     0,   484,     0,     0,   485,     0,     0,     0,
     487,   488,   489,     0,     0,     0,     0,     0,     0,   490,
       0,     0,   491,     0,     0,     0,   492,   493,   494,   495,
     496,     0,     0,  -321,     0,     0,     0,   497,     0,     0,
     499,     0,   501,     0,   137,   502,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,   145,     0,
       0,     0,     0,   147,   148,   149,   150,   151,     0,     0,
    -366,     0,     0,     0,   154,     0,     0,     0,   155,     0,
       0,   156,   157,   158,     0,   159,     0,     0,     0,     0,
       0,   162,  4155,     0,   163,   164,     0,   165,   166,     0,
       0,     0,     0,   169,   170,   171,   172,  4156,     0,   174,
     175,     0,   176,   177,     0,   178,   179,     0,   181,     0,
     183,   184,   185,   186,     0,   187,   188,     0,   189,   190,
     191,     0,   193,     0,     0,     0,   194,     0,     0,   195,
       0,   196,     0,     0,   197,     0,     0,     0,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,     0,
       0,     0,     0,     0,   204,   205,     0,   206,     0,     0,
       0,   207,     0,   208,   209,   210,   211,   212,     0,     0,
       0,     0,     0,     0,   214,   215,   216,     0,     0,     0,
     217,     0,  -359,   219,     0,   220,   221,   222,     0,     0,
     223,   224,     0,   225,   226,   227,   228,   229,     0,     0,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
    4157,   238,   239,   240,     0,     0,     0,     0,     0,     0,
       0,   243,     0,   244,     0,   245,     0,   246,   247,   248,
     249,     0,   250,     0,   251,     0,     0,     0,     0,   253,
       0,     0,     0,     0,     0,   256,     0,     0,     0,   257,
     258,   259,   260,  4158,     0,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,     0,   266,     0,     0,     0,
       0,   268,     0,     0,     0,   269,   270,     0,   271,   272,
    4159,     0,     0,   273,     0,     0,     0,   275,     0,     0,
     276,  4160,     0,   277,   278,     0,     0,     0,     0,     0,
     279,   280,     0,   281,     0,   282,     0,   283,   284,     0,
       0,     0,     0,  -321,     0,     0,   285,     0,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,     0,   303,   304,   305,     0,
     306,   307,   308,   309,     0,   310,   311,     0,     0,     0,
       0,   312,   313,   314,   315,   316,   317,     0,     0,   318,
     319,     0,   320,     0,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,     0,     0,   331,   332,     0,
       0,   333,   334,   335,   336,     0,     0,     0,     0,   338,
       0,     0,     0,   339,     0,   340,   341,   342,     0,   343,
     344,  4161,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,     0,     0,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
       0,     0,     0,   363,   364,     0,   365,     0,   366,   367,
     368,   369,   370,     0,   371,   372,   373,     0,     0,   374,
       0,     0,     0,   375,   376,   377,   378,   379,     0,     0,
     380,   381,   382,   383,   384,     0,   385,     0,     0,   387,
       0,   389,  -321,     0,   390,     0,     0,     0,   392,     0,
       0,   394,   395,   396,  4162,   397,     0,     0,     0,   399,
     400,   401,   402,   403,   404,   405,     0,   407,   408,     0,
     409,     0,     0,     0,     0,   411,   412,   413,     0,     0,
       0,     0,   415,     0,     0,     0,   416,     0,     0,   418,
       0,   420,     0,   421,     0,     0,   424,   425,     0,     0,
       0,     0,     0,   426,   427,   428,     0,   429,   430,     0,
     431,     0,     0,   432,     0,     0,   433,     0,   435,   436,
     437,   438,   439,     0,     0,     0,     0,   441,     0,   442,
     443,   444,   445,   446,   447,     0,     0,   448,   449,   450,
     451,     0,   452,   453,     0,     0,   454,   455,   456,   457,
     458,     0,     0,   459,   460,     0,   461,   462,   463,   464,
     465,     0,     0,     0,     0,   466,   467,   468,   469,   470,
     471,     0,   472,   473,     0,     0,     0,     0,   475,   476,
     477,     0,   478,   479,     0,   480,   481,     0,     0,     0,
       0,     0,   484,     0,     0,   485,     0,     0,     0,   487,
     488,   489,     0,     0,     0,     0,     0,     0,   490,     0,
       0,   491,     0,     0,     0,   492,   493,   494,   495,   496,
       0,     0,  -321,     0,     0,     0,   497,     0,     0,   499,
       0,   501,     0,   137,   502,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,   145,     0,     0,
       0,     0,   147,   148,   149,   150,   151,     0,     0,  -366,
       0,     0,     0,   154,     0,     0,     0,   155,     0,     0,
     156,   157,   158,     0,   159,     0,     0,     0,     0,     0,
     162,  4155,     0,   163,   164,     0,   165,   166,     0,     0,
       0,     0,   169,   170,   171,   172,  4156,     0,   174,   175,
       0,   176,   177,     0,   178,   179,     0,   181,     0,   183,
     184,   185,   186,     0,   187,   188,     0,   189,   190,   191,
       0,   193,     0,     0,     0,   194,     0,     0,   195,     0,
     196,     0,     0,   197,     0,     0,     0,   198,   199,   200,
       0,     0,   201,     0,     0,     0,     0,   202,     0,     0,
       0,     0,     0,   204,   205,     0,   206,     0,     0,     0,
     207,     0,   208,   209,   210,   211,   212,     0,     0,     0,
       0,     0,     0,   214,   215,   216,     0,     0,     0,   217,
       0,  4505,   219,     0,   220,   221,   222,     0,     0,   223,
     224,     0,   225,   226,   227,   228,   229,     0,     0,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,  4157,
     238,   239,   240,     0,     0,     0,     0,     0,     0,     0,
     243,     0,   244,     0,   245,     0,   246,   247,   248,   249,
       0,   250,     0,   251,     0,     0,     0,     0,   253,     0,
       0,     0,     0,     0,   256,     0,     0,     0,   257,   258,
     259,   260,  4158,     0,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,     0,   266,     0,     0,     0,     0,
     268,     0,     0,     0,   269,   270,     0,   271,   272,  4159,
       0,     0,   273,     0,     0,     0,   275,     0,     0,   276,
    4160,     0,   277,   278,     0,     0,     0,     0,     0,   279,
     280,     0,   281,     0,   282,     0,   283,   284,     0,     0,
       0,     0,  -321,     0,     0,   285,     0,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,     0,   303,   304,   305,     0,   306,
     307,   308,   309,     0,   310,   311,     0,     0,     0,     0,
     312,   313,   314,   315,   316,   317,     0,     0,   318,   319,
       0,   320,     0,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,     0,     0,   331,   332,     0,     0,
     333,   334,   335,   336,     0,     0,     0,     0,   338,     0,
       0,     0,   339,     0,   340,   341,   342,     0,   343,   344,
    4161,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   348,   349,     0,     0,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,     0,
       0,     0,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,     0,     0,   387,     0,
     389,  -321,     0,   390,     0,     0,     0,   392,     0,     0,
     394,   395,   396,  4162,   397,     0,     0,     0,   399,   400,
     401,   402,   403,   404,   405,     0,   407,   408,     0,   409,
       0,     0,     0,     0,   411,   412,   413,     0,     0,     0,
       0,   415,     0,     0,     0,   416,     0,     0,   418,     0,
     420,     0,   421,     0,     0,   424,   425,     0,     0,     0,
       0,     0,   426,   427,   428,     0,   429,   430,     0,   431,
       0,     0,   432,     0,     0,   433,     0,   435,   436,   437,
     438,   439,     0,     0,     0,     0,   441,     0,   442,   443,
     444,   445,   446,   447,     0,     0,   448,   449,   450,   451,
       0,   452,   453,     0,     0,   454,   455,   456,   457,   458,
       0,     0,   459,   460,     0,   461,   462,   463,   464,   465,
       0,     0,     0,     0,   466,   467,   468,   469,   470,   471,
       0,   472,   473,     0,     0,     0,     0,   475,   476,   477,
       0,   478,   479,     0,   480,   481,     0,     0,     0,     0,
       0,   484,     0,     0,   485,     0,     0,     0,   487,   488,
     489,     0,     0,     0,     0,     0,     0,   490,     0,     0,
     491,     0,     0,     0,   492,   493,   494,   495,   496,     0,
       0,  -321,     0,     0,     0,   497,     0,     0,   499,     0,
     501,     0,   137,   502,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,   145,     0,     0,     0,
       0,   147,   148,   149,   150,   151,     0,     0,  -366,     0,
       0,     0,   154,     0,     0,     0,   155,     0,     0,   156,
     157,   158,     0,   159,     0,     0,     0,     0,     0,   162,
    4155,     0,   163,   164,     0,   165,   166,     0,     0,     0,
       0,   169,   170,   171,   172,  4156,     0,   174,   175,     0,
     176,   177,     0,   178,   179,     0,   181,     0,   183,   184,
     185,   186,     0,   187,   188,     0,   189,   190,   191,     0,
     193,     0,     0,     0,   194,     0,     0,   195,     0,   196,
       0,     0,   197,     0,     0,     0,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,     0,     0,     0,
       0,     0,   204,   205,     0,   206,     0,     0,     0,   207,
       0,   208,   209,   210,   211,   212,     0,     0,     0,     0,
       0,     0,   214,   215,   216,     0,     0,     0,   217,     0,
    4539,   219,     0,   220,   221,   222,     0,     0,   223,   224,
       0,   225,   226,   227,   228,   229,     0,     0,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,  4157,   238,
     239,   240,     0,     0,     0,     0,     0,     0,     0,   243,
       0,   244,     0,   245,     0,   246,   247,   248,   249,     0,
     250,     0,   251,     0,     0,     0,     0,   253,     0,     0,
       0,     0,     0,   256,     0,     0,     0,   257,   258,   259,
     260,  4158,     0,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,     0,   266,     0,     0,     0,     0,   268,
       0,     0,     0,   269,   270,     0,   271,   272,  4159,     0,
       0,   273,     0,     0,     0,   275,     0,     0,   276,  4160,
       0,   277,   278,     0,     0,     0,     0,     0,   279,   280,
       0,   281,     0,   282,     0,   283,   284,     0,     0,     0,
       0,  -321,     0,     0,   285,     0,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,     0,   303,   304,   305,     0,   306,   307,
     308,   309,     0,   310,   311,     0,     0,     0,     0,   312,
     313,   314,   315,   316,   317,     0,     0,   318,   319,     0,
     320,     0,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,     0,   331,   332,     0,     0,   333,
     334,   335,   336,     0,     0,     0,     0,   338,     0,     0,
       0,   339,     0,   340,   341,   342,     0,   343,   344,  4161,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   348,   349,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,     0,     0,
       0,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,     0,     0,   387,     0,   389,
    -321,     0,   390,     0,     0,     0,   392,     0,     0,   394,
     395,   396,  4162,   397,     0,     0,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   407,   408,     0,   409,     0,
       0,     0,     0,   411,   412,   413,     0,     0,     0,     0,
     415,     0,     0,     0,   416,     0,     0,   418,     0,   420,
       0,   421,     0,     0,   424,   425,     0,     0,     0,     0,
       0,   426,   427,   428,     0,   429,   430,     0,   431,     0,
       0,   432,     0,     0,   433,     0,   435,   436,   437,   438,
     439,     0,     0,     0,     0,   441,     0,   442,   443,   444,
     445,   446,   447,     0,     0,   448,   449,   450,   451,     0,
     452,   453,     0,     0,   454,   455,   456,   457,   458,     0,
       0,   459,   460,     0,   461,   462,   463,   464,   465,     0,
       0,     0,     0,   466,   467,   468,   469,   470,   471,     0,
     472,   473,     0,     0,     0,     0,   475,   476,   477,     0,
     478,   479,     0,   480,   481,     0,     0,     0,     0,     0,
     484,     0,     0,   485,     0,     0,     0,   487,   488,   489,
       0,     0,     0,     0,     0,     0,   490,     0,     0,   491,
       0,     0,     0,   492,   493,   494,   495,   496,     0,     0,
    -321,     0,     0,     0,   497,     0,     0,   499,     0,   501,
       0,   137,   502,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,   145,     0,     0,     0,     0,
     147,   148,   149,   150,   151,     0,     0,  -366,     0,     0,
       0,   154,     0,     0,     0,   155,     0,     0,   156,   157,
     158,     0,   159,     0,     0,     0,     0,     0,   162,  4155,
       0,   163,   164,     0,   165,   166,     0,     0,     0,     0,
     169,   170,   171,   172,  4156,     0,   174,   175,     0,   176,
     177,     0,   178,   179,     0,   181,     0,   183,   184,   185,
     186,     0,   187,   188,     0,   189,   190,   191,     0,   193,
       0,     0,     0,   194,     0,     0,   195,     0,   196,     0,
       0,   197,     0,     0,     0,   198,   199,   200,     0,     0,
     201,     0,     0,     0,     0,   202,     0,     0,     0,     0,
       0,   204,   205,     0,   206,     0,     0,     0,   207,     0,
     208,   209,   210,   211,   212,     0,     0,     0,     0,     0,
       0,   214,   215,   216,     0,     0,     0,   217,     0,  -340,
     219,     0,   220,   221,   222,     0,     0,   223,   224,     0,
     225,   226,   227,   228,   229,     0,     0,     0,   231,   232,
     233,   234,   235,     0,     0,   236,   237,  4157,   238,   239,
     240,     0,     0,     0,     0,     0,     0,     0,   243,     0,
     244,     0,   245,     0,   246,   247,   248,   249,     0,   250,
       0,   251,     0,     0,     0,     0,   253,     0,     0,     0,
       0,     0,   256,     0,     0,     0,   257,   258,   259,   260,
    4158,     0,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,     0,   266,     0,     0,     0,     0,   268,     0,
       0,     0,   269,   270,     0,   271,   272,  4159,     0,     0,
     273,     0,     0,     0,   275,     0,     0,   276,  4160,     0,
     277,   278,     0,     0,     0,     0,     0,   279,   280,     0,
     281,     0,   282,     0,   283,   284,     0,     0,     0,     0,
    -321,     0,     0,   285,     0,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,     0,   303,   304,   305,     0,   306,   307,   308,
     309,     0,   310,   311,     0,     0,     0,     0,   312,   313,
     314,   315,   316,   317,     0,     0,   318,   319,     0,   320,
       0,   321,     0,   322,   323,   324,   325,   326,   327,   328,
     329,   330,     0,     0,   331,   332,     0,     0,   333,   334,
     335,   336,     0,     0,     0,     0,   338,     0,     0,     0,
     339,     0,   340,   341,   342,     0,   343,   344,  4161,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   348,   349,     0,     0,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,     0,     0,     0,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,     0,     0,   387,     0,   389,  -321,
       0,   390,     0,     0,     0,   392,     0,     0,   394,   395,
     396,  4162,   397,     0,     0,     0,   399,   400,   401,   402,
     403,   404,   405,     0,   407,   408,     0,   409,     0,     0,
       0,     0,   411,   412,   413,     0,     0,     0,     0,   415,
       0,     0,     0,   416,     0,     0,   418,     0,   420,     0,
     421,     0,     0,   424,   425,     0,     0,     0,     0,     0,
     426,   427,   428,     0,   429,   430,     0,   431,     0,     0,
     432,     0,     0,   433,     0,   435,   436,   437,   438,   439,
       0,     0,     0,     0,   441,     0,   442,   443,   444,   445,
     446,   447,     0,     0,   448,   449,   450,   451,     0,   452,
     453,     0,     0,   454,   455,   456,   457,   458,     0,     0,
     459,   460,     0,   461,   462,   463,   464,   465,     0,     0,
       0,     0,   466,   467,   468,   469,   470,   471,     0,   472,
     473,     0,     0,     0,     0,   475,   476,   477,     0,   478,
     479,     0,   480,   481,     0,     0,     0,     0,     0,   484,
       0,     0,   485,     0,     0,     0,   487,   488,   489,     0,
       0,     0,     0,     0,     0,   490,     0,     0,   491,     0,
       0,     0,   492,   493,   494,   495,   496,     0,     0,  -321,
       0,     0,     0,   497,     0,     0,   499,     0,   501,     0,
     137,   502,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,   145,     0,     0,     0,     0,   147,
     148,   149,   150,   151,     0,     0,  -366,     0,     0,     0,
     154,     0,     0,     0,   155,     0,     0,   156,   157,   158,
       0,   159,     0,     0,     0,     0,     0,   162,  4155,     0,
     163,   164,     0,   165,   166,     0,     0,     0,     0,   169,
     170,   171,   172,  4156,     0,   174,   175,     0,   176,   177,
       0,   178,   179,     0,   181,     0,   183,   184,   185,   186,
       0,   187,   188,     0,   189,   190,   191,     0,   193,     0,
       0,     0,   194,     0,     0,   195,     0,   196,     0,     0,
     197,     0,     0,     0,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,     0,     0,     0,     0,     0,
     204,   205,     0,   206,     0,     0,     0,   207,     0,   208,
     209,   210,   211,   212,     0,     0,     0,     0,     0,     0,
     214,   215,   216,     0,     0,     0,   217,     0,     0,   219,
       0,   220,   221,   222,     0,     0,   223,   224,     0,   225,
     226,   227,   228,   229,     0,     0,     0,   231,   232,   233,
     234,   235,     0,     0,   236,   237,  4157,   238,   239,   240,
       0,     0,     0,     0,     0,     0,     0,   243,     0,   244,
       0,   245,     0,   246,   247,   248,   249,     0,   250,     0,
     251,     0,     0,     0,     0,   253,     0,     0,     0,     0,
       0,   256,     0,     0,     0,   257,   258,   259,   260,  4158,
       0,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,     0,   266,     0,     0,     0,     0,   268,     0,     0,
       0,   269,   270,     0,   271,   272,  4159,     0,     0,   273,
       0,     0,     0,   275,     0,     0,   276,  4160,     0,   277,
     278,     0,     0,     0,     0,     0,   279,   280,     0,   281,
       0,   282,     0,   283,   284,     0,     0,     0,     0,  -321,
       0,     0,   285,     0,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,     0,   303,   304,   305,     0,   306,   307,   308,   309,
       0,   310,   311,     0,     0,     0,     0,   312,   313,   314,
     315,   316,   317,     0,     0,   318,   319,     0,   320,     0,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,     0,     0,   331,   332,     0,     0,   333,   334,   335,
     336,     0,     0,     0,     0,   338,     0,     0,     0,   339,
       0,   340,   341,   342,     0,   343,   344,  4161,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     348,   349,     0,     0,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,     0,     0,     0,   363,
     364,     0,   365,     0,   366,   367,   368,   369,   370,     0,
     371,   372,   373,     0,     0,   374,     0,     0,     0,   375,
     376,   377,   378,   379,     0,     0,   380,   381,   382,   383,
     384,     0,   385,     0,     0,   387,     0,   389,  -321,     0,
     390,     0,     0,     0,   392,     0,     0,   394,   395,   396,
    4162,   397,     0,     0,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   407,   408,     0,   409,     0,     0,     0,
       0,   411,   412,   413,     0,     0,     0,     0,   415,     0,
       0,     0,   416,     0,     0,   418,     0,   420,     0,   421,
       0,     0,   424,   425,     0,     0,     0,     0,     0,   426,
     427,   428,     0,   429,   430,     0,   431,     0,     0,   432,
       0,     0,   433,     0,   435,   436,   437,   438,   439,     0,
       0,     0,     0,   441,     0,   442,   443,   444,   445,   446,
     447,     0,     0,   448,   449,   450,   451,     0,   452,   453,
       0,     0,   454,   455,   456,   457,   458,     0,     0,   459,
     460,     0,   461,   462,   463,   464,   465,     0,     0,     0,
       0,   466,   467,   468,   469,   470,   471,     0,   472,   473,
       0,     0,     0,     0,   475,   476,   477,     0,   478,   479,
       0,   480,   481,     0,     0,     0,     0,     0,   484,     0,
       0,   485,     0,     0,     0,   487,   488,   489,     0,     0,
       0,     0,     0,     0,   490,     0,     0,   491,     0,     0,
       0,   492,   493,   494,   495,   496,     0,     0,  -321,     0,
       0,     0,   497,     0,     0,   499,     0,   501,     0,   137,
     502,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,   145,     0,     0,     0,     0,   147,   148,
     149,   150,   151,     0,     0,  -366,     0,     0,     0,   154,
       0,     0,     0,   155,     0,     0,   156,   157,   158,     0,
     159,     0,     0,     0,     0,     0,   162,  4155,     0,   163,
     164,     0,   165,   166,     0,     0,     0,     0,   169,   170,
     171,   172,  4156,     0,   174,   175,     0,   176,   177,     0,
     178,   179,     0,   181,     0,   183,   184,   185,   186,     0,
     187,   188,     0,   189,   190,   191,     0,   193,     0,     0,
       0,   194,     0,     0,   195,     0,   196,     0,     0,   197,
       0,     0,     0,   198,   199,   200,     0,     0,   201,     0,
       0,     0,     0,   202,     0,     0,     0,     0,     0,   204,
     205,     0,   206,     0,     0,     0,   207,     0,   208,   209,
     210,   211,   212,     0,     0,     0,     0,     0,     0,   214,
     215,   216,     0,     0,     0,   217,     0,     0,   219,     0,
     220,   221,   222,     0,     0,   223,   224,     0,   225,   226,
     227,   228,   229,     0,     0,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,  4157,   238,   239,   240,     0,
       0,     0,     0,     0,     0,     0,   243,     0,   244,     0,
     245,     0,   246,   247,   248,   249,     0,   250,     0,   251,
       0,     0,     0,     0,   253,     0,     0,     0,     0,     0,
     256,     0,     0,     0,   257,   258,   259,   260,  4158,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
       0,   266,     0,     0,     0,     0,   268,     0,     0,     0,
     269,   270,     0,   271,   272,  4159,     0,     0,   273,     0,
       0,     0,   275,     0,     0,   276,  4160,     0,   277,   278,
       0,     0,     0,     0,     0,   279,   280,     0,   281,     0,
     282,     0,   283,   284,     0,     0,     0,     0,  -321,     0,
       0,   285,     0,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
       0,   303,   304,   305,     0,   306,   307,   308,   309,     0,
     310,   311,     0,     0,     0,     0,   312,   313,   314,   315,
     316,   317,     0,     0,   318,   319,     0,   320,     0,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,     0,   331,   332,     0,     0,   333,   334,   335,   336,
       0,     0,     0,     0,   338,     0,     0,     0,   339,     0,
     340,   341,   342,     0,   343,   344,  4161,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   348,
     349,     0,     0,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,     0,     0,     0,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,     0,     0,   387,     0,   389,  -321,     0,   390,
       0,     0,     0,   392,     0,     0,   394,   395,   396,  4162,
     397,     0,     0,     0,   399,   400,   401,   402,   403,   404,
     405,     0,   407,   408,     0,   409,     0,     0,     0,     0,
     411,   412,   413,     0,     0,     0,     0,   415,     0,     0,
       0,   416,     0,     0,   418,     0,   420,     0,   421,     0,
       0,   424,   425,     0,     0,     0,     0,     0,   426,   427,
     428,     0,   429,   430,     0,   431,     0,     0,   432,     0,
       0,   433,     0,   435,   436,   437,   438,   439,     0,     0,
       0,     0,   441,     0,   442,   443,   444,   445,   446,   447,
       0,     0,   448,   449,   450,   451,     0,   452,   453,     0,
       0,   454,   455,   456,   457,   458,     0,     0,   459,   460,
       0,   461,   462,   463,   464,   465,     0,     0,     0,     0,
     466,   467,   468,   469,   470,   471,     0,   472,   473,     0,
       0,     0,     0,   475,   476,   477,     0,   478,   479,     0,
     480,   481,     0,     0,     0,     0,     0,   484,     0,     0,
    4425,     0,     0,     0,   487,   488,   489,     0,     0,     0,
       0,     0,     0,   490,     0,     0,   491,     0,     0,     0,
     492,   493,   494,   495,   496,     0,     0,  -321,     0,     0,
       0,   497,     0,     0,   499,     0,   501,     0,   137,   502,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,   145,     0,     0,     0,     0,   147,   148,   149,
     150,   151,     0,     0,     0,     0,     0,     0,   154,     0,
       0,     0,   155,     0,     0,   156,   157,   158,     0,   159,
       0,     0,     0,     0,     0,   162,     0,     0,   163,   164,
       0,   165,   166,     0,     0,     0,     0,   169,   170,   171,
     172,     0,     0,   174,   175,     0,   176,   177,     0,   178,
     179,     0,   181,     0,   183,   184,   185,   186,     0,   187,
     188,     0,   189,   190,   191,     0,   193,     0,     0,     0,
     194,     0,     0,   195,     0,   196,     0,     0,   197,     0,
       0,     0,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,     0,     0,     0,     0,     0,   204,   205,
       0,   206,     0,     0,     0,   207,     0,   208,   209,   210,
     211,   212,     0,     0,     0,     0,     0,     0,   214,   215,
     216,     0,     0,     0,   217,     0,     0,   219,     0,   220,
     221,   222,     0,     0,   223,   224,     0,   225,   226,   227,
     228,   229,     0,     0,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,   239,   240,     0,     0,
       0,     0,     0,     0,     0,   243,     0,   244,     0,   245,
       0,   246,   247,   248,   249,     0,   250,     0,   251,     0,
       0,     0,     0,   253,     0,     0,     0,     0,     0,   256,
       0,     0,     0,   257,   258,   259,   260,     0,     0,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,     0,
     266,     0,     0,     0,     0,   268,     0,     0,     0,   269,
     270,     0,   271,   272,     0,     0,     0,   273,     0,     0,
       0,   275,     0,     0,   276,     0,     0,   277,   278,     0,
       0,     0,     0,     0,   279,   280,     0,   281,     0,   282,
       0,   283,   284,     0,     0,     0,     0,     0,     0,     0,
     285,     0,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,     0,
     303,   304,   305,     0,   306,   307,   308,   309,     0,   310,
     311,     0,     0,     0,     0,   312,   313,   314,   315,   316,
     317,     0,     0,   318,   319,     0,   320,     0,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,     0,
       0,   331,   332,     0,     0,   333,   334,   335,   336,     0,
       0,     0,     0,   338,     0,     0,     0,   339,     0,   340,
     341,   342,     0,   343,   344,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   348,   349,
       0,     0,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,     0,     0,     0,   363,   364,     0,
     365,     0,   366,   367,   368,   369,   370,     0,   371,   372,
     373,     0,     0,   374,     0,     0,     0,   375,   376,   377,
     378,   379,     0,     0,   380,   381,   382,   383,   384,     0,
     385,     0,     0,   387,     0,   389,     0,     0,   390,     0,
       0,     0,   392,     0,     0,   394,   395,   396,     0,   397,
       0,     0,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   407,   408,     0,   409,     0,     0,     0,     0,   411,
     412,   413,     0,     0,     0,     0,   415,     0,     0,     0,
     416,     0,     0,   418,     0,   420,     0,   421,     0,     0,
     424,   425,     0,     0,     0,     0,     0,   426,   427,   428,
       0,   429,   430,     0,   431,     0,     0,   432,     0,     0,
     433,     0,   435,   436,   437,   438,   439,     0,     0,     0,
       0,   441,     0,   442,   443,   444,   445,   446,   447,     0,
       0,   448,   449,   450,   451,     0,   452,   453,     0,     0,
     454,   455,   456,   457,   458,     0,     0,   459,   460,     0,
     461,   462,   463,   464,   465,     0,     0,     0,     0,   466,
     467,   468,   469,   470,   471,     0,   472,   473,     0,     0,
       0,     0,   475,   476,   477,     0,   478,   479,     0,   480,
     481,     0,     0,     0,     0,     0,   484,     0,     0,   485,
       0,     0,     0,   487,   488,   489,     0,     0,     0,     0,
       0,     0,   490,     0,     0,   491,     0,     0,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,     0,
     497,     0,     0,   499,     0,   501,     0,     0,   502
};

static const yytype_int16 yycheck[] =
{
       6,   126,   663,   598,   990,   597,   598,   991,   619,    20,
     906,   907,   122,    19,   885,  1338,  1174,    23,  1174,    30,
     916,   597,  1338,    11,  1605,    36,    32,   538,  1538,  1903,
       6,  1080,  1276,    39,  1121,  1738,    42,  1905,  1325,  1428,
      46,  1074,  1075,  1859,   951,   732,  1408,    53,   925,  2088,
    1527,  2157,  1536,  1527,   920,  1197,  2609,   923,  1276,  2537,
     635,  2393,  1204,  2437,  2222,  3367,  1111,   933,   692,  2227,
    2959,  2114,  2901,   648,   951,  2496,  2497,  2525,  1527,  1517,
     659,   660,   948,   949,   950,  1144,   952,  1811,    94,  1331,
    2051,  1440,  2725,  2055,  1517,   995,   995,  2318,  1521,  1934,
    1523,  1982,  1517,  2051,  1892,   677,  1521,  2057,  1523,  1458,
     116,  2061,   118,  2582,  2182,   121,   122,   123,  2182,  2518,
    1469,  1470,  2072,  2455,  2504,  2604,    34,  2526,  2610,  2356,
    2855,     4,  3372,  2753,  2084,  1507,    20,  2757,  3599,   800,
      16,    17,   118,  2759,    20,   121,  1205,  1206,  1586,  1997,
    1209,  1210,  1211,  1212,   971,  1214,  1215,  1216,  1217,  1218,
    1219,  1220,  1221,  1586,   788,   789,   790,    74,     9,  3156,
    3390,  1586,  3430,  3431,    25,    47,  3434,   801,    22,  2817,
      61,  2906,  3239,    17,  2566,  2567,    78,    30,    29,  2006,
    2007,  1243,  2205,    22,    35,  3453,    16,    17,   953,  3473,
      10,  3459,    79,    35,  2034,    34,  2023,  2312,    16,    17,
      51,   108,  3647,  1901,    51,    64,    60,    61,   149,    48,
     149,  2182,  2727,  2040,  2041,    17,   190,    30,  2585,    82,
     190,    60,    61,   143,  2182,  3657,    51,   672,   673,  2056,
    2171,   267,  2059,  2060,   149,  2062,   318,    21,  2065,  2066,
      66,  3008,  2069,    20,    20,   830,    11,  2074,    72,   216,
    3100,    11,  2079,  2080,  2081,  2082,  2083,   129,  2025,   268,
    2087,   155,  2089,   196,    63,   159,    23,   367,  2095,  2096,
    2097,  2098,    84,   225,  2101,    68,  2103,  4185,    86,   252,
     865,   132,   421,  3595,   446,   284,   473,   124,    78,   525,
      16,    17,  2043,  2756,    16,    17,   408,  2137,   270,  2139,
    2140,  2693,  2694,    58,    12,  2145,  2146,   252,   193,   426,
     110,   155,  3704,   124,  2154,  2155,   846,    24,   263,  2159,
      16,    17,    16,    17,    16,    17,    16,    17,    16,    17,
      63,    12,   268,    56,    16,    17,    69,    94,   368,  2166,
    2167,  2168,  2169,    21,   155,    12,   130,   269,   127,  2739,
     272,  2741,   254,    16,    17,   240,   159,   268,   124,    36,
     553,   124,   553,   393,    40,   553,   126,   364,   523,   378,
     129,   232,    16,    17,    36,   421,    16,    17,   811,   265,
       8,   166,   159,   159,    16,    17,   357,    12,   193,   155,
     604,   250,   155,   229,   145,   591,   442,   129,    34,   519,
     229,   513,    30,    16,    17,    16,    17,    16,    17,    16,
      17,   196,   307,  1110,    16,    17,    35,  3685,   491,   255,
     175,   608,   609,   162,   179,    61,  3694,  1124,  2451,   229,
     476,   139,  1021,   404,   648,   190,    16,    17,   243,   675,
     654,   561,   378,   973,   443,   155,   879,  4049,   124,  3717,
      22,   647,   130,   314,  3722,   646,   189,   612,   139,   646,
     167,    78,    34,   575,   254,   653,  2306,   378,   465,   586,
      16,    17,   139,   285,  3945,   408,    48,   236,    71,   452,
    1386,    71,  2701,    16,    17,   624,   648,  1481,    60,    61,
     462,   377,   444,   378,   380,  1401,   418,    16,    17,   193,
     573,   193,   190,   519,   616,   521,   285,  3819,  2966,   285,
      16,    17,   277,   458,   139,  3907,  3766,    16,    17,    16,
      17,  2911,  2912,   553,  4432,   362,   542,  3006,  2524,  1200,
     546,  3010,  3011,   155,  1906,  2588,   213,   672,   673,  2592,
    3028,   557,  3277,  3278,  3279,   561,  3396,   563,   648,    16,
      17,   213,  2072,  2606,  2607,   379,   523,  1433,   268,   377,
    1436,   481,   380,   579,   646,  2618,  1442,   322,    16,    17,
      16,    17,  1093,  1094,  1208,  1020,  2625,  2025,   159,  1276,
      74,   597,   591,  3318,  3319,  3320,   622,  4189,   408,   605,
    4022,  1225,  2025,  1114,  2647,  1471,  1472,  1507,  1507,  2570,
    2025,  2570,  1123,  2051,   451,   468,  1493,  3857,   416,   625,
    2043,  3378,  2570,   546,  1135,  1136,  1137,  1976,  2043,   635,
     380,   637,  1143,  2701,   623,  1070,   451,  2701,   421,  2894,
     429,   382,   648,   649,  3149,   144,   359,   254,  1892,   655,
    3007,   657,  3639,   659,   660,   421,   268,  2106,   664,   665,
     624,   377,  3300,   669,   380,   377,  3940,    25,   380,  2517,
    1249,  3560,   417,   679,  1892,   491,   682,   683,    16,    17,
    2723,   687,   456,   406,   533,  1585,  1585,  4148,   648,   482,
     621,   377,   621,   377,   380,   377,   380,   377,   380,   377,
     380,  2531,   380,   513,  4139,   377,   583,  1766,   380,    64,
     551,   543,  1467,  2818,   546,  1760,   621,   827,  1777,   616,
    3960,  1780,   565,  3943,   377,  2738,   732,   380,    16,    17,
     611,  3369,   624,  2171,   575,    16,    17,  1789,   646,   646,
    2701,   582,  3124,   377,  2182,   589,   380,   377,  2171,  1328,
     380,  3991,   624,  2701,  1571,   377,  2171,   633,   380,  2182,
     589,  2591,   565,  2593,  2695,   575,  1345,  2182,   652,  2457,
    2600,  3145,   648,   565,   377,  3155,   377,   380,   377,   380,
     377,   380,  2599,   380,  2614,   377,  3843,   793,   380,   795,
     624,  2621,  2549,  2165,  3414,  2612,   906,   648,   565,   157,
     910,   911,  3418,  2633,  2634,  2635,   616,   377,  3035,  2639,
     380,   648,   674,   633,   924,   821,   822,   823,   652,   825,
     826,   827,  1397,   829,   830,   633,  4066,  2568,  3448,   835,
    2660,  4292,   140,  3449,  3450,   841,  3456,    16,    17,   647,
     648,   377,   632,  3463,   380,  1417,   822,   853,   597,  3836,
     826,   652,   159,   829,   377,    16,    17,   380,   524,   865,
     866,   654,  1437,   629,   870,   639,    16,    17,   377,   592,
     556,   380,    16,    17,   232,   597,  2692,    16,    17,   989,
    3605,   377,  2699,   549,   380,  4143,   553,  4145,   377,   618,
     377,   380,   604,   380,   900,   250,   652,    16,    17,   652,
     906,   553,   649,   648,   910,   911,  3388,  3376,   655,  3357,
     194,   482,   378,  3361,   580,  2399,  3125,   633,   924,  1511,
     377,   633,   622,   380,   159,  3404,   410,  1052,  1053,  1054,
      16,    17,  3306,  4525,   543,   651,   648,   546,  3644,   377,
     523,   377,   380,   523,   380,   102,   159,   633,  2529,   633,
    1525,   633,   652,   633,    12,   633,   314,   175,  3357,  3412,
    3413,   633,  3361,  4203,  2838,   971,   648,  3420,   648,   647,
    3423,  3424,   138,   580,   473,   647,   648,    16,    17,   285,
     633,  2967,  2968,   989,   857,   991,  3366,  3440,  3031,  3321,
      16,    17,  4232,   834,   647,   648,  1683,   604,  4300,   633,
     355,  3454,   360,   633,  2878,    43,  3459,  3460,  3461,  3462,
     622,   633,   363,  1019,   648,  1021,  1912,   647,   648,    16,
      17,   111,  1594,   390,   114,   647,   648,   589,   336,   627,
     633,   454,   633,   556,   633,  2996,   633,  2996,    25,   377,
     652,   633,   380,  1019,   647,   648,   647,   648,  2996,   648,
     647,   648,   614,    21,  3309,   647,   648,  3125,   210,   543,
     393,  3125,    46,   633,  1971,   188,  1072,   580,  2884,    20,
    1076,   438,  2953,    51,  2584,  2585,   121,  1187,   648,   372,
      72,   139,  3788,   654,   646,   396,   196,     8,   175,   377,
     574,   604,   380,   190,  1971,  2002,   377,   633,  1964,   380,
    2935,   467,   225,   255,  1110,   389,   853,  2496,  2497,  1975,
     633,  2549,  1978,  1979,  1224,   421,  2904,   188,  1124,   866,
      16,    17,  3084,   870,   633,  2002,  2549,  2851,  3834,  3762,
     155,  3352,  2570,   129,  2549,  3085,   519,   633,   152,   648,
     185,    16,    17,  2640,   633,  2568,   633,   646,    99,   163,
      12,   650,   648,  2568,   225,  1779,  2505,   323,  2207,   648,
     515,   648,   130,   157,  3125,   346,  2643,  1277,  1174,  2643,
     528,   473,   164,  3852,  2416,   482,   633,  3125,   533,   491,
     277,  1187,   648,  3631,  3632,    16,    17,  2329,   369,    16,
      17,   648,   249,  2252,  2643,   633,    25,   633,   377,   417,
     225,   380,    16,    17,   155,  1892,   490,   249,   159,  3025,
     648,   391,   648,   159,  4043,  1794,   377,  1792,  1224,   380,
     553,    16,    17,  1229,  1334,   546,   210,   377,  1234,  4058,
     380,   654,  2548,   377,   122,  4124,   380,   282,   377,   190,
     236,   380,  4142,  1249,   190,   232,   193,   482,  2335,  2336,
    2566,  2567,   473,   175,  1829,   206,  2959,  2695,   377,   617,
     211,   380,   183,  2701,   225,  2165,  2165,    16,    17,   482,
    1276,  1277,  2695,    99,  3313,   630,    22,   139,  2701,  2437,
    2695,   648,   233,  2328,    16,    17,  2701,   707,    34,   240,
     648,   377,   396,  2338,   380,   633,   647,   193,   408,   371,
    4602,   252,    48,  1878,  1879,    16,    17,  1313,   346,  1315,
     648,  1317,   263,    32,    60,    61,   324,   268,   363,  1894,
      16,    17,  1328,   629,   285,  1072,   277,   314,  1334,  1076,
     417,   639,   640,   641,   642,   643,   644,   274,   377,  1345,
    1346,   380,   232,  3386,   646,   633,   140,   654,  2407,  3770,
    1926,   377,   633,   241,   380,    16,    17,   155,    59,   779,
     648,   654,   376,  3521,   421,  3408,   360,   648,  1374,  2527,
     121,  2527,  4078,   360,    25,   521,  1382,  2693,  2694,   421,
     377,   359,  1388,   380,  2868,    16,    17,   379,   371,    31,
    3764,  1397,    16,    17,   665,   346,    16,    17,    16,    17,
     546,  1407,  1408,   232,  1514,  3235,   353,   233,  3224,    16,
      17,  4117,  1418,  1419,  1420,  1421,  1422,  1423,   369,   444,
      16,    17,  1428,   604,   361,   646,   252,   378,  1434,  1435,
     648,  1437,    16,    17,   185,  1441,   546,   263,    80,   203,
     473,   654,  1418,  1419,  1420,  1318,  1422,  4126,   444,  4128,
      16,    17,    12,   121,   633,   646,   417,   408,  1464,  1435,
      16,    17,  2620,   654,  2620,  1441,   646,   360,   558,   648,
     360,   561,   633,   451,  4016,    16,    17,   473,   121,  2888,
     603,   377,   466,   633,   380,   314,   647,  1234,   456,   633,
      16,    17,    16,    17,   633,   417,     0,  3007,   648,    16,
      17,   403,   377,   481,   648,   380,   157,   458,  1514,   648,
     274,   153,  4412,  4413,   633,   602,  3994,   129,  3015,  1525,
     346,    16,    17,  1529,   243,    20,   435,  1533,  1534,   648,
     481,   282,   603,   473,   528,   423,   482,   582,   552,  1412,
     157,   528,   336,   551,    16,    17,   377,   633,   267,   380,
     377,   129,  3049,   380,   825,    16,    17,   629,  2996,   126,
    3057,   648,   648,   377,  3061,  1571,   380,    16,    17,  2978,
    1317,    16,    17,  3947,   473,  3085,   584,   997,   529,   139,
     206,   232,   377,   159,  1590,   380,  1592,  1593,  2484,  1595,
    1596,    85,  4134,   279,   633,    16,    17,    16,    17,  1346,
     543,   597,  1608,   546,  1610,   514,   307,   633,   159,   648,
     104,  3108,   363,   646,   282,   232,  1592,  1593,    16,    17,
     234,   647,  3780,   617,   236,   473,   252,   652,   377,   243,
     617,   380,   458,    16,    17,   528,   633,   206,   528,   282,
     591,  4305,   530,   178,  4308,   377,   629,  1520,   380,   473,
     646,   648,  3482,   604,   214,   341,    52,   600,   236,  1784,
    2904,  3993,   553,   314,   646,   193,   377,    63,   489,   380,
     183,   622,   654,   624,  1421,   242,  1423,  1683,  1684,   234,
     602,   377,    16,    17,   380,  1795,  2904,  3125,   243,  2976,
     546,  2740,  2834,    16,    17,   363,   647,   648,  4159,  4160,
     651,   652,  3125,   529,   553,   210,   646,   473,  2332,   360,
    3125,   430,    16,    17,   478,   416,   377,  1464,  2229,   380,
     363,    16,    17,   166,   617,    16,    17,   617,   121,  1854,
     124,  2889,  2243,  2889,    16,    17,   473,   633,  1744,   126,
     268,    16,    17,   360,   138,   258,   377,   646,   126,   380,
     255,   647,   378,   377,   654,   646,   380,   377,   633,   377,
     380,   403,   380,  3869,  3870,  2276,  4319,    16,    17,   383,
     377,  4435,   647,   380,   595,    41,  3253,    12,  3252,   565,
    1786,   377,  1529,   425,   380,   224,  1792,  1534,  1794,  1795,
     491,    25,   185,   377,   359,   193,   380,   646,   646,  1909,
    1806,  3285,   633,    16,    17,  1811,   633,    42,  3124,   178,
    1816,   377,    16,    17,   380,   636,   647,   459,   624,   633,
     647,   377,   646,  1829,   380,   651,   650,   362,   383,  2492,
    3646,   582,   444,   647,  2345,  3874,   377,   523,   633,   380,
    2464,  1847,   648,   589,    78,  1851,   359,   641,   642,   643,
     644,   377,   647,   377,   380,   242,   380,  3560,    93,   127,
     377,   473,    97,   380,   610,   611,   444,   133,    16,    17,
      17,   436,  1878,  1879,  1880,  1881,   518,   528,   274,  3230,
     646,   124,   377,  3234,   633,   380,  1892,   166,  1894,   282,
    3828,    16,    17,    16,    17,   473,    25,  2489,   647,   121,
    1906,   633,   124,  1909,   147,   377,    16,    17,   380,   646,
     221,   528,   223,  2489,   582,   647,   377,   196,  3856,   380,
    1926,   516,   633,   157,   546,    16,    17,  2590,   377,   323,
     206,   380,   377,   604,  1940,   380,   647,   633,   592,   582,
     121,   184,   176,   124,  1007,  1008,   214,   507,   508,    78,
     510,   647,   512,  2616,  2617,   107,   377,   552,   377,   380,
     243,   380,   550,   185,   229,    19,   617,  4428,  4429,   529,
     363,  1977,   633,   292,   293,  3805,   647,   648,  3340,   377,
      34,   264,   380,  1989,  1047,   597,   647,   356,   357,    39,
    1996,   213,  1865,   362,   377,   121,    46,   380,   232,    25,
     617,   640,   633,  1876,   185,    59,  2598,  3720,   647,   633,
    3723,   604,   247,   633,   166,   633,   647,   285,  3420,   597,
      69,  3423,  3424,   647,   157,   224,   633,   647,   157,   647,
    2901,   648,   213,   647,   646,  2942,   543,   633,  3440,   546,
     647,  2948,   577,   377,   196,   193,   380,   176,   206,   633,
     611,   647,    78,   614,   377,   648,   229,   380,   593,   185,
     282,   654,  1935,   647,   136,  2942,  3353,   633,   646,  3782,
    2180,  2948,  3159,   377,  2184,   229,   380,   633,  2974,   151,
     314,   647,   377,   640,  2950,   380,   377,   213,   323,   380,
     647,   647,   633,   190,  2100,   377,  3183,  3184,   380,   232,
    1847,   282,   377,   232,  1851,   380,   647,   633,  2114,   633,
      60,    61,  2222,   372,   433,   434,   633,  2227,   745,  3206,
     354,   647,    72,   647,   356,   357,   360,   134,   377,  1830,
     647,   380,  1833,  1880,  1881,  1836,   121,  2010,   633,   240,
     767,   363,   625,   626,   647,   648,  2019,  2020,   190,    17,
     176,   386,  3310,   780,   781,    47,   282,  2030,  2031,  2032,
    2033,   633,  2035,  2036,   377,   648,   193,   380,   647,   648,
     285,    78,   633,   377,  2180,   647,   380,    17,  2184,   609,
    2186,    75,   363,  2189,   633,   314,   647,   481,   633,   582,
    2196,  2197,  2198,  2199,   647,    69,  2202,   652,   647,   159,
     185,   107,   647,   647,   648,    11,   232,  3365,   577,  3365,
     598,  2321,   633,  2189,   633,    58,  2222,  2904,   647,   648,
     654,  2227,  4096,    75,   593,   354,   647,   360,   647,   377,
    1977,   360,   380,   107,   374,   633,   221,   363,   223,  4194,
    3398,  2351,  3398,  4060,  4199,   166,  4201,   647,   648,  1996,
     633,   646,   377,   307,   377,   380,   408,   380,  4088,  4089,
    4090,  4091,   513,   498,   647,  2138,   189,   377,  2141,  2142,
     380,  2144,   140,     6,  2147,  2148,  2149,  2150,  2151,  2152,
    2153,  4097,   444,  2156,    11,  2158,   377,  4104,   314,   380,
    4107,  4108,  4109,  4110,   528,   189,   646,   282,  4166,   633,
     140,   107,   646,   613,   614,   540,   616,   646,   618,   215,
     633,  2886,   648,   647,   646,  2321,   646,    78,  2829,   461,
     126,   195,   647,   648,   647,   232,   647,   648,   354,   633,
     647,   648,   175,   646,   360,   229,   179,   189,   633,   646,
    2346,   646,   633,   647,   646,  2351,    78,   190,  3381,  3382,
     646,   633,   647,   646,   121,   229,   647,   124,   633,   646,
     582,   255,   646,  4193,  2370,   647,    16,    17,    60,    61,
    2376,  2377,   647,  2379,   647,   648,   502,   229,   363,   149,
     150,  3770,   646,   617,   633,   647,   648,   647,   648,    34,
     196,   647,   648,   646,   546,   528,   157,   553,   647,   528,
    2406,   582,   544,   255,   278,  4222,  4223,  3303,   550,   646,
    4226,  2377,  3656,  2379,  4231,   646,    61,   646,   185,   225,
     633,  4124,   646,   575,   654,   157,  2536,  2537,   646,   633,
     646,  2437,   647,   648,   647,  2441,  3594,   646,  3594,   646,
    2446,  2447,  2448,   647,   647,   648,   213,   354,    12,  2196,
    2197,  2198,  2458,   360,  2460,   646,   582,   119,   600,  3508,
    3704,  1086,  1087,  1088,   616,   170,   111,   646,   336,   114,
     646,   232,   278,  1098,   616,    78,   646,   122,   384,   322,
    2446,  2447,  2448,  2489,   617,   633,   646,   393,   617,    92,
    2496,  2497,   369,   140,   400,   121,   336,  4007,  4008,  2609,
     232,    20,   528,   646,  1129,  3806,  3807,  1132,   633,   646,
     633,    78,   406,   225,  4095,   282,   647,   648,   646,   648,
     427,  2527,   647,   633,   647,   647,   648,    63,  1153,  1154,
    2536,  2537,  1157,    69,   647,   648,   604,   647,   390,    75,
      34,   646,   633,   110,    99,   647,   648,   646,  3532,   496,
    1175,  1176,    88,   646,   406,    29,   647,   646,   220,   185,
     647,   648,   647,   648,   646,    59,   646,  2578,   646,   121,
     646,  2577,   124,    67,   417,   139,  2582,   646,  2589,   646,
      99,  2587,  2588,   646,  2595,  2458,  2592,   213,  2594,   495,
     157,   617,  2580,   354,   647,   648,   363,   582,  2604,   360,
    2606,  2607,   408,  2609,  2610,   479,   647,   648,  2619,  2615,
     647,   648,  2618,  2624,  2620,   646,   484,   485,   646,  2630,
    2631,   528,   354,  2629,   646,   499,   647,   648,   360,  2376,
    2377,   646,  2379,   185,  2640,   646,   155,   646,   132,    49,
     159,  2647,  2648,   646,   484,   485,   647,   648,  3735,   646,
     214,   646,  2658,   189,   257,   646,   282,   647,   648,   195,
     646,   213,   229,   157,   326,   646,   427,   161,   330,   188,
     544,   190,   546,   479,   646,   337,   550,   646,   233,   646,
     587,   647,   648,  3194,   647,   648,    29,   206,   646,   336,
     121,   646,   211,   229,   600,   427,   279,   252,   646,  2446,
    2447,  2448,   646,   348,   198,   646,   225,   646,   263,    34,
     617,   646,  3953,  3954,   233,  2840,  2722,  2723,   592,   255,
     646,   240,   216,  2596,  2597,    30,   600,   647,   648,  4603,
     282,   334,   646,   252,    59,  3246,   230,   363,   544,   279,
     546,   646,    67,   646,   263,   204,   313,  3339,   646,   268,
    2623,   647,   648,   415,   185,   646,   359,     6,   277,   647,
     648,   647,   648,  3339,   331,   647,   648,   528,   646,   637,
     638,   639,   640,   641,   642,   643,   644,    99,   647,   648,
     647,   648,   213,   647,   648,   279,    49,   354,    26,    27,
     648,   346,   467,   159,   600,   591,   528,   637,   638,   639,
     640,   641,   642,   643,   644,   647,   648,   132,    57,   471,
     641,   363,   647,   648,   369,   582,   419,   183,  2691,    99,
     647,   648,    60,    61,    62,   481,   587,   346,   654,  4070,
     654,   197,   157,  4074,    72,   165,   161,   484,   485,   646,
      78,   268,   208,   190,   489,  2851,   647,   648,    86,  2855,
     369,   282,   311,   312,   390,   587,   617,   316,   317,   378,
     523,  2867,   647,   648,   647,   648,   543,    16,    17,   165,
     406,   523,   110,   198,   647,   648,   647,   648,   279,  2885,
    2886,    26,  2629,  2889,   156,   617,   124,   648,   648,   408,
     128,   216,   258,   259,   143,  4136,  4137,    87,  2904,   648,
    2906,  4224,  4225,   458,   648,   230,  3890,   370,  4224,  4225,
     513,   233,  3896,   407,  2920,   539,   561,   647,  3028,   157,
     286,   155,   416,  4278,    69,  3984,  3518,    72,  1161,  1162,
     252,    76,   363,    78,  3323,  3324,  4094,   431,  4094,   458,
     124,   263,   110,   507,   508,   509,   510,   511,   512,   653,
     595,  3816,  3817,   233,   279,   449,   582,   619,  3575,  3576,
       6,   528,   481,   499,   646,   529,   115,   116,   117,   118,
     119,   109,   252,   635,   529,  2722,     4,   544,   648,   124,
     393,   472,   616,   263,   243,  3506,  3507,   353,   648,    56,
    1615,   229,   639,   640,   641,   642,   643,   644,   492,   237,
    3006,   390,   436,   473,  3010,  3011,   170,   110,    63,  3015,
     529,   481,   222,   648,    69,   648,   254,   654,    72,    12,
      75,   621,  3028,   139,   346,  3031,   647,   540,   541,   523,
     582,   544,   545,    88,   647,   548,     9,   550,   648,   405,
     654,   140,   647,  3049,   267,   647,   647,  2920,   654,   543,
     646,  3057,   546,   547,   648,  3061,   592,   654,   648,   157,
    1685,  4416,   653,   557,  1689,   279,   346,   279,   217,   218,
     219,   220,   591,   279,   279,   313,   279,    49,  2951,  2952,
     279,  2954,   407,   648,   603,   604,   648,  3093,  1713,   369,
    3096,   416,   407,   331,   159,  3101,  3102,   461,   375,   543,
     369,   369,  3108,   622,   648,   624,   431,   601,   357,   274,
     255,   648,   391,   648,   565,   648,   107,  3123,   565,   390,
    2867,    12,   648,   159,   449,   369,   369,    32,   647,   648,
    3136,  3652,   651,   652,   189,    72,   458,  3143,   608,   609,
     195,  4299,  4497,  4299,  4499,   648,   648,   385,  3154,    26,
      27,   582,   243,   641,   246,   393,  3029,   541,   180,   190,
    4144,   648,   524,  4518,   596,  3038,   494,   492,   394,   135,
     173,   420,  4043,   422,   229,   166,   646,   326,   458,   328,
     329,   330,   648,    60,    61,    62,   647,  4058,   337,   159,
     648,   159,   159,  4548,  4549,    72,   159,   159,   523,   159,
     255,    78,   648,   159,   160,   196,   159,   529,   159,    86,
     159,   356,   357,   159,   159,   159,  3326,   362,   159,   159,
     159,   159,   547,   159,   369,   463,   159,   159,   377,   159,
     159,   380,   557,   110,  3240,   140,   159,   336,   229,   159,
     159,   197,  3248,  3679,  3680,  3837,   598,   124,   628,   529,
     603,   128,   208,   196,   369,  3128,  3692,   369,   369,   193,
     648,   406,   647,  3699,   647,   647,   415,  3273,   647,   647,
    3276,  3277,  3278,  3279,   641,   647,   601,   647,   647,   193,
     157,   646,   520,   521,   522,  3291,   640,   278,  3724,   648,
     528,  3727,   248,   648,   140,   482,   647,   647,   647,   647,
     591,   647,   647,   259,  3310,  3311,   544,   648,  3314,   647,
     548,   647,  3318,  3319,  3320,   646,   140,  4213,   644,   832,
    3326,   470,   471,   646,   140,   646,  3332,   647,   553,  4388,
     286,   648,   477,  3339,  3340,   292,   293,   553,   243,   543,
    3861,  3862,   553,  3864,  3865,   646,   622,   231,   646,  3096,
     535,   406,   229,   591,    11,   648,   646,   654,   646,  3365,
     237,    36,   267,   646,    81,  3490,    83,   265,   654,   654,
    3376,   193,   654,   648,   648,  3248,   416,   254,   600,   193,
    3386,   647,  3388,   528,   481,   484,   485,   648,   648,   190,
     267,    47,  3398,  3988,   350,   513,  3143,   243,  3404,   513,
    3406,   472,  3408,   393,  4562,   513,  4562,   124,   513,   344,
     648,  3521,   403,   513,    75,  4399,  4400,   408,  4402,   243,
    4479,   390,   565,   135,   253,   390,  4037,  4585,   538,  4585,
     147,   336,   390,   253,    78,  4593,   313,  4593,   544,   114,
     390,  4599,   544,  4599,   499,   135,   121,   592,    92,    47,
     392,   356,   357,   369,   331,   646,   566,   646,   646,   390,
     278,   654,  4446,   390,  4448,  4449,   390,   184,  3474,   390,
     619,   604,   390,   647,  3480,  3348,   433,   434,   647,   153,
     239,   239,   654,   159,   633,   634,   635,   647,   479,   133,
     336,   647,   647,   647,   647,   647,   647,   565,  3474,  3505,
    3506,  3507,   648,   178,  3614,   553,   648,   648,   385,   629,
     185,   274,   336,    47,   646,  3521,   393,  4112,   646,   159,
     336,   646,   565,  4288,  4185,   430,   159,   646,   193,   240,
     193,   204,   553,   553,   249,   421,   363,   592,   213,   638,
     639,   640,   641,   642,   643,   644,  4530,   504,   505,   506,
     159,   159,   648,   544,  2141,  2142,   159,  2144,   648,   550,
    2147,  2148,  2149,  2150,  2151,  2152,  2153,   393,   478,  2156,
     252,  2158,   252,   381,  4560,   327,   173,   110,   110,   484,
     485,   654,   692,  3589,   575,   255,   463,   697,  3594,   255,
    4355,  3701,   497,   646,   439,   646,   374,    20,   553,  3605,
     206,   454,   646,   390,   654,  4370,   641,   282,  3614,   600,
     241,    36,   646,   257,   646,   241,   646,   646,   728,   369,
     647,   647,   647,  3496,   647,   616,   225,   269,   390,   648,
     648,   647,   647,   647,   744,   647,   646,   654,   484,   485,
     565,   654,   647,   520,   521,   522,  3652,   654,   565,   648,
     565,   528,  3663,   648,   654,  3661,   375,   193,   647,   243,
     484,   485,   193,   193,  3670,   647,   647,   544,   484,   485,
    3780,   548,   347,   421,   159,   597,   125,   252,   788,   789,
     790,   791,   252,   358,   369,   646,   255,   362,   363,   114,
     334,   801,   255,   647,  4459,  3701,   121,  3822,   624,    20,
    4596,   648,   565,   496,  4469,   369,   473,   369,   363,  4301,
    4475,   428,   356,   357,   591,   359,    47,   265,   378,   475,
     648,   456,  3728,   277,  3730,    11,   421,   146,   624,  3839,
     641,   193,   637,   638,   639,   640,   641,   642,   643,   644,
     648,   648,   646,  4508,   647,   646,   648,   647,   647,   646,
    3623,  3757,   646,   178,   646,  4520,   261,  4522,   647,   647,
     185,   648,   647,   206,  3770,   647,   159,   483,   395,   646,
    4535,  4432,   252,   252,  3780,   419,   648,   646,   124,   124,
     546,   646,   402,   654,   646,   404,   369,   369,   213,    78,
     647,   637,   638,   639,   640,   641,   642,   643,   644,  4564,
    4565,   468,   496,   647,  4569,   648,   647,   647,    20,   268,
     647,   647,   647,   637,   638,   639,   640,   641,   642,   643,
     644,   637,   638,   639,   640,   641,   642,   643,   644,    34,
    3703,    34,   647,  3839,   647,   647,   647,   647,   333,   257,
     416,   647,   174,   648,   277,  4440,  3852,   204,   240,   566,
     567,   568,   569,   570,   571,  3861,  3862,   282,  3864,  3865,
     646,    47,   647,   654,   648,   648,   333,  3740,   211,   513,
     604,   159,   604,  3746,   646,   646,   646,   646,   553,   647,
     310,   646,   646,   558,  3994,   614,   561,   614,   597,   646,
     124,   255,   255,  4554,   362,    34,   491,   363,    82,   142,
     647,   333,   577,   648,   646,   363,   172,   582,   647,   546,
     585,   375,   608,   255,  3661,   646,   624,  1027,    55,   369,
     604,   604,   347,   240,   358,   648,  4587,   624,    65,   454,
     609,   553,  3938,  3939,   363,   648,   553,   362,   363,   553,
      77,   647,   647,   597,  3950,   534,   646,   646,   646,   517,
     190,   388,    89,    90,    91,   647,    55,   135,   647,   647,
     375,   555,   135,   157,   639,   640,    65,   408,   105,  3842,
      74,   190,  1082,  1083,   646,   429,   647,  3983,    77,    63,
    3986,  1091,  1092,  1093,  1094,  1095,  1096,  1097,  3994,   375,
      89,    90,    91,    63,   154,  1105,  1106,   621,  1108,  1109,
      31,   648,   655,  1113,  1114,   646,   105,  1117,  1118,  1119,
    1120,   647,  1122,  1123,   535,    14,   270,     5,   369,  4025,
    1130,  1131,   369,  1133,  1134,  1135,  1136,  1137,   621,   193,
    1140,  1141,  1142,  1143,  1144,  1145,  1146,  1147,  1148,  1149,
    1150,   375,  1152,   133,    31,  1155,  1156,   375,   142,    47,
    1160,    47,   152,    47,  1164,  1165,  1166,    47,   646,   646,
     646,    47,  4187,   129,   240,   153,   148,  1177,  1178,  1179,
     597,   652,   646,    47,    47,    47,  1186,   621,   153,   224,
     284,   652,   655,  1193,  1194,  1195,   123,  1197,  4094,   464,
     462,   648,   363,    53,  1204,  1205,  1206,   647,  1208,  1209,
    1210,  1211,  1212,   556,  1214,  1215,  1216,  1217,  1218,  1219,
    1220,  1221,   142,   652,   222,  1225,  1226,  4227,    13,   647,
    4126,   647,  4128,   209,   648,   153,   648,    47,   553,   556,
     648,    53,   652,   558,   153,   190,   561,   190,   190,   556,
     225,   443,   623,   124,   646,   363,   481,   192,   648,  3483,
    4156,  3482,   577,  2358,  2160,  4161,  2565,   582,   673,  3755,
     585,  4051,  4378,  4188,   115,   116,   117,   118,   119,  4379,
    1004,  3753,  3757,  3937,  4587,  4543,    46,   599,  1891,  2851,
    1816,  4046,  4046,  4046,  4550,  4046,  4059,  4046,   325,  4046,
    4046,  4046,  3939,   566,  4046,  4456,  4046,  4348,  4456,    26,
      27,  4046,  4429,    98,  4046,   342,  4046,  4374,  4373,  4319,
    1523,  3946,  4218,  1045,   639,   640,  2113,  1527,  3055,  3588,
    2880,  4227,  2885,  3291,  1331,  4218,   325,  3984,  4303,  3591,
    4479,  4440,  4396,  4112,   129,    62,  3983,   529,  3499,  2723,
    2106,  1585,  3129,   342,  3408,  2650,  3386,  3431,   143,  2114,
    3464,    78,  3888,  3431,  3662,  3711,  4301,  3701,  2536,    86,
    2807,  3231,  3234,  3226,  4270,  4133,   217,   218,   219,   220,
     534,   166,  1382,   533,   169,    11,    11,  4137,  4136,  4070,
    1599,  4062,  2194,   110,  4394,  1395,  4074,   182,  3950,  2643,
    3896,  2113,  1478,  4299,   602,  1474,  3667,   124,  2432,  3387,
    1581,   128,  1880,  1413,  1534,  2867,  3286,  2399,  2449,   204,
     620,  1900,  2314,  4319,  3248,  2840,   453,   897,  2228,  3355,
    1124,  2313,  2528,  4010,   697,  4131,  4410,  3480,  4411,  2339,
     157,  3398,   469,  3853,   229,  1493,  4515,  1098,  3839,  2199,
    2454,   236,  1235,  1317,   990,   990,  2394,  3594,  4221,  1346,
    2436,  3305,  3304,  3365,  4299,   728,   990,   609,   990,   688,
    1608,    26,    27,  1972,  1426,   598,  1455,  1805,  1353,  1973,
     469,   744,  3406,  3289,  4477,   326,  4326,   328,   329,   330,
    4511,  4593,   277,  4406,  4599,  3704,   337,  3310,  4394,  2487,
    1382,  3339,  2480,   882,   531,    60,    61,    62,    12,    13,
     597,  1741,   229,  1851,  4410,  4411,   597,    72,  1929,  2479,
     237,  2473,   549,    78,  1895,  1838,  4086,  1369,   791,  1590,
    3273,    86,   591,  4092,   884,  4038,   673,   254,   525,   525,
      -1,  3732,   531,    -1,   673,   673,    -1,  4310,  4311,    -1,
      -1,    -1,    -1,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     549,    -1,    -1,    -1,    -1,  4461,    -1,    -1,    -1,   124,
      -1,    -1,  4468,   128,   415,    -1,    -1,    -1,    -1,    -1,
      -1,  4581,    -1,    -1,    -1,  4600,    -1,    -1,    -1,    -1,
      -1,    -1,     6,    -1,    98,    -1,   313,    11,    -1,    13,
      -1,    15,   157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    26,    27,   331,    -1,    -1,    -1,    -1,    -1,
      -1,  1621,    -1,  4519,   409,   129,    -1,    -1,  4524,   470,
     471,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,
      -1,    -1,    -1,    57,   429,    -1,    -1,    -1,    62,    63,
      -1,    -1,   437,    -1,    -1,    -1,    70,    -1,  4554,    -1,
     445,    -1,   166,    -1,    78,   169,  4562,    -1,   385,    -1,
      -1,    -1,    86,    -1,   229,    -1,   393,    -1,   182,    -1,
      -1,    95,   237,    -1,    -1,  4581,    -1,    -1,   473,  4585,
      -1,  4587,    -1,    -1,    -1,    -1,   110,  4593,    -1,   254,
     204,   486,   487,  4599,    -1,    -1,    -1,    -1,    -1,    -1,
     124,    -1,    -1,    -1,   128,    -1,    -1,    -1,    -1,  1719,
    1720,  1721,   136,   137,    -1,   229,    -1,    -1,    -1,   143,
      -1,    -1,   236,    -1,  1734,    -1,    -1,   151,    -1,    -1,
      -1,   155,    -1,   157,    -1,    -1,   463,    -1,    -1,    -1,
      -1,    -1,    -1,   538,   168,    -1,    -1,    -1,   313,    -1,
    1760,    -1,    -1,    -1,  1027,    -1,  1766,    -1,    -1,  1769,
      -1,  1771,    -1,   277,   188,    -1,   331,  1777,   619,  1779,
    1780,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     575,    -1,    -1,   634,   635,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   520,   521,   522,    -1,    -1,    -1,    -1,
      -1,   528,   597,   227,   599,   229,    -1,    -1,    -1,  1082,
    1083,    -1,    -1,   237,    -1,    -1,    -1,   544,  1091,  1092,
     385,   548,  1095,  1096,  1097,    -1,    -1,    -1,   393,    -1,
     254,    -1,  1105,  1106,    -1,  1108,  1109,    -1,    -1,    -1,
    1113,    -1,    -1,    -1,  1117,  1118,  1119,  1120,    -1,  1122,
      -1,    -1,    -1,   277,  1864,    -1,    -1,  1130,  1131,    -1,
    1133,  1134,    -1,    -1,   591,  1875,    -1,  1140,  1141,  1142,
      -1,    -1,  1145,  1146,  1147,  1148,  1149,  1150,    -1,  1152,
      -1,    -1,  1155,  1156,    -1,    -1,    -1,  1160,    -1,   313,
      -1,  1164,  1165,  1166,    -1,   409,    -1,  1907,   463,   413,
      -1,    -1,    -1,    -1,  1177,  1178,  1179,   331,    -1,    -1,
      -1,   335,    -1,  1186,    -1,   429,    -1,  1927,    -1,    -1,
    1193,  1194,  1195,   437,  1934,    -1,    -1,    -1,    -1,    -1,
      -1,   445,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,
      -1,    -1,    -1,  1226,   378,   520,   521,   522,    -1,   473,
      13,   385,    15,   528,    -1,    -1,   390,    -1,    -1,   393,
      -1,    -1,   486,   487,    -1,    -1,    12,    13,    31,   544,
      -1,    -1,    35,   548,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    49,    50,    -1,    -1,
     424,    -1,    -1,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    -1,    -1,    -1,   438,   439,   440,   441,    -1,    -1,
      -1,    -1,    -1,    -1,   538,    -1,   591,    80,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   463,
      -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   575,    98,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   129,   130,   131,    -1,
      -1,    -1,    -1,   597,    -1,   599,    -1,    -1,    -1,   142,
     143,    -1,    -1,   129,    -1,    -1,   520,   521,   522,    -1,
      -1,    -1,   155,    -1,   528,    -1,    -1,   143,    -1,  1382,
      -1,    -1,    -1,    -1,    -1,    -1,   169,    -1,    -1,    -1,
     544,    -1,  1395,    -1,   548,  2135,    -1,    -1,    -1,    -1,
     166,    -1,    -1,   169,   187,    -1,    -1,    -1,    -1,    -1,
    1413,    -1,    -1,    -1,    -1,    -1,   182,    -1,    -1,   202,
      -1,   204,    -1,    -1,   578,    -1,   209,    -1,    -1,   212,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   591,   204,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   236,    -1,   238,    -1,    -1,    -1,    -1,
    4046,    -1,    -1,   229,    -1,    -1,    -1,    -1,  2208,    -1,
     236,    -1,  2212,   256,    -1,    -1,    -1,  2217,  2218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2226,    -1,    -1,  2229,
     273,    -1,    -1,    -1,   277,    -1,    -1,    -1,   652,  2239,
    2240,    -1,  2242,  2243,    -1,  2245,  2246,  2247,  2248,  2249,
      -1,   277,  2252,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2261,    -1,    -1,    -1,    -1,    -1,    -1,  2268,    -1,
    2270,    -1,  2272,  2273,    -1,  2275,  2276,    -1,    -1,    -1,
    2280,  2281,  2282,    -1,    -1,    -1,  2286,  2287,  2288,    -1,
    2290,    -1,  2292,    -1,  2294,    -1,  2296,    -1,  2298,    -1,
      -1,    -1,    -1,  2303,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4159,  4160,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2322,    -1,    -1,    -1,    -1,    -1,    -1,  2329,
     373,    -1,  2332,    -1,    -1,    -1,    -1,    -1,  2338,    -1,
      -1,  2341,    -1,    -1,    -1,  2345,    -1,   390,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1621,    -1,
     403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   414,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   409,    -1,    -1,    -1,   413,    -1,    -1,
      -1,    -1,    -1,   436,    -1,    -1,   439,    -1,   441,    -1,
      -1,   444,    -1,   429,   447,   448,    -1,  2407,    -1,    -1,
      -1,   437,    -1,    -1,   457,    -1,   459,    -1,    -1,   445,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,    -1,
     473,  4277,  4278,    -1,    -1,    -1,    -1,    -1,   481,    -1,
      -1,    -1,  4288,   486,    -1,   488,    -1,   473,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1719,  1720,  1721,    -1,
     486,   487,    -1,    -1,  2464,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   518,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   527,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    13,    -1,    15,    -1,    -1,  1760,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1769,    -1,  1771,  4355,
      -1,    -1,   538,    -1,    35,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4370,    -1,    -1,    -1,    49,    50,
      -1,    -1,    -1,    -1,    -1,   578,    57,    -1,    -1,    -1,
      -1,    62,    63,    -1,    -1,    -1,    -1,   590,  2548,   575,
      -1,   594,    -1,    -1,   597,    -1,    -1,    -1,    -1,    80,
     603,    -1,    -1,    -1,    -1,    -1,  2566,  2567,    -1,    -1,
    4416,   597,    -1,   599,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,  4428,  4429,    -1,    -1,    -1,    -1,   631,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,
      -1,  1864,    -1,   646,    -1,    -1,    -1,    -1,   129,   130,
     131,    -1,  1875,  4459,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   142,   143,  4469,    -1,    -1,    -1,    -1,    -1,  4475,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1907,    -1,    -1,    -1,   169,    -1,
      -1,  4497,    -1,  4499,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4508,    -1,  1927,    -1,   187,    -1,    -1,    -1,
      -1,  1934,  4518,    -1,  4520,    -1,  4522,    -1,    -1,    -1,
      -1,   202,    -1,   204,    -1,    -1,    -1,    -1,   209,  4535,
      -1,   212,    -1,  2693,  2694,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4548,  4549,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   236,    -1,   238,  4564,  4565,
      -1,    -1,    -1,  4569,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   256,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2744,    -1,    -1,    -1,  2748,    -1,
      -1,    -1,   273,    -1,    -1,    -1,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2768,  2769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2789,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2798,    -1,
    2800,    -1,  2802,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    -1,    -1,    -1,    39,    -1,    41,    -1,    43,    44,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2829,
      -1,    -1,    -1,    -1,  2834,    -1,    61,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2863,    -1,    -1,    -1,    -1,    -1,   390,
      -1,    -1,  2135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   403,    -1,    -1,    -1,   111,    -1,    -1,   114,
      -1,    -1,    -1,   414,    -1,    -1,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   436,   141,    -1,   439,    -1,
     441,    -1,    -1,   444,    -1,    -1,   447,   448,    -1,    -1,
      -1,    -1,    -1,   158,    -1,  2935,   457,    -1,   459,    -1,
      -1,    -1,    -1,    -1,    -1,  2208,   467,    -1,    -1,  2212,
      -1,    -1,   473,    -1,  2217,  2218,    -1,  2957,    -1,   184,
     481,   186,    -1,  2226,    -1,   486,    -1,   488,    -1,    -1,
      -1,    -1,    -1,    -1,   199,   200,  2239,  2240,    -1,  2242,
      -1,  2981,  2245,  2246,  2247,  2248,  2249,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   518,  2261,    -1,
      -1,    -1,    -1,    -1,    -1,  2268,   527,  2270,    -1,  2272,
    2273,    -1,  2275,    -1,    -1,    -1,   241,  2280,  2281,  2282,
      -1,    -1,    -1,  2286,  2287,  2288,    -1,  2290,    -1,  2292,
      -1,  2294,    -1,  2296,    -1,  2298,    -1,    -1,    -1,    -1,
    2303,    -1,    -1,    -1,    -1,    -1,   271,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,   281,   578,   283,  2322,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   590,
      -1,    -1,    -1,   594,    -1,  2338,   597,    -1,  2341,    -1,
      -1,    -1,   603,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   319,   320,   321,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     631,    -1,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
     345,    -1,    -1,   348,  3124,   646,    -1,    -1,    -1,    -1,
      -1,    -1,     6,    -1,    -1,    -1,    -1,    11,    -1,    13,
     365,   366,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    26,    27,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3162,    -1,    -1,   226,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   398,   399,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,  3187,    62,    -1,
      -1,  3191,  3192,    -1,  3194,    -1,    -1,    -1,   423,    -1,
      -1,    -1,    -1,  3203,    78,    -1,    -1,    -1,  3208,    -1,
      -1,  3211,    86,  3213,  3214,    -1,    -1,    -1,    -1,    -1,
      -1,    95,    -1,    -1,    -1,    -1,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   110,   298,   299,   300,
     301,   302,   303,   304,   305,   306,  3246,   308,   309,    -1,
     124,    -1,   477,    -1,   128,    -1,   481,    -1,    -1,    -1,
      -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,   493,   143,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   151,    -1,    -1,
    3280,    -1,    -1,   157,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3304,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   554,
      -1,    -1,    -1,   558,    -1,    -1,   561,   562,   563,   564,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   237,    -1,    -1,    -1,  3367,    -1,    -1,
      -1,    -1,   433,   434,    -1,  3375,    -1,    -1,    -1,    -1,
     254,    -1,    -1,    -1,    -1,   610,   611,    -1,    -1,    -1,
      -1,    -1,    34,    35,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   277,    -1,    -1,    -1,    -1,    -1,    -1,
     635,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,
      -1,    -1,    -1,    -1,    -1,    67,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    96,    -1,    98,   331,    -1,    -1,
      -1,   335,    -1,    -1,    -1,    -1,   108,    -1,    -1,    -1,
      -1,  3471,  3472,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2744,    -1,    -1,    -1,  2748,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   378,  2768,  2769,    -1,    -1,    -1,
      -1,   385,    -1,    -1,   156,   157,    -1,    -1,    -1,   393,
     162,    -1,    -1,   165,    -1,    -1,  2789,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2798,    -1,  2800,    -1,  2802,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   194,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,   203,    -1,   205,    -1,   439,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   228,   229,   230,   463,
      -1,    -1,    -1,    -1,    -1,  3595,    -1,    -1,    -1,    -1,
    2863,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   253,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   274,    -1,    -1,  3635,  3636,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3644,    -1,   520,   521,   522,    -1,
      -1,    -1,    -1,    -1,   528,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   307,    -1,    -1,    -1,    -1,
     544,    -1,  2935,    -1,   548,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2957,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   591,  2981,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   397,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   407,   408,    -1,    -1,   411,
     412,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3788,    -1,
     432,    -1,  3792,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3819,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3834,    -1,   478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   523,    -1,    -1,    -1,    -1,   528,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3162,
      -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   557,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3187,    -1,    -1,    -1,  3191,  3192,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3203,    -1,    -1,    -1,    -1,  3208,    -1,    -1,  3211,    -1,
    3213,  3214,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   601,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3984,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3992,    -1,    -1,    -1,    -1,    -1,    -1,  3999,
      -1,  4001,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3304,    -1,    -1,    -1,    -1,  4046,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4078,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3375,    -1,    -1,    -1,    -1,  4117,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4153,    -1,    -1,    -1,    -1,    -1,  4159,
    4160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4198,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3471,  3472,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4263,    -1,  4265,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4275,    -1,  4277,  4278,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4288,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3595,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4353,    -1,  4355,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4370,  4371,  3635,  3636,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3644,    -1,    -1,    -1,    -1,    -1,    -1,  4388,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4415,  4416,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4428,  4429,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4459,
      -1,    -1,    -1,    -1,    -1,    -1,  4466,    -1,    -1,  4469,
      -1,    -1,    -1,    -1,    -1,  4475,    -1,    -1,    -1,  4479,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4490,    -1,    -1,    -1,    -1,    -1,    -1,  4497,    -1,  4499,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4508,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4518,    -1,
    4520,    -1,  4522,    -1,    -1,  3788,    -1,    -1,    -1,  3792,
      -1,    -1,    -1,    -1,    -1,  4535,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4548,  4549,
      -1,    -1,    -1,    -1,    -1,    -1,  3819,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4564,  4565,    -1,    -1,    -1,  4569,
      -1,  3834,    -1,    -1,    -1,  4575,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4602,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3992,
      -1,    -1,    -1,    -1,    -1,    -1,  3999,    -1,  4001,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4078,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4117,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4153,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4263,    -1,  4265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4300,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4353,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4371,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4466,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4490,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    45,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,  4575,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,  4602,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,   260,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,   572,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    12,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    12,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      36,    37,    38,    39,    40,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
     236,   237,   238,   239,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,   263,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,   605,
     606,   607,   608,   609,    -1,    -1,   612,   613,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,    -1,    -1,    -1,    -1,   645,
     646,    -1,    -1,   649,   650,    -1,    -1,   653,   654,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      36,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,    -1,   209,   210,    -1,   212,   213,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
      -1,   237,   238,    -1,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,    -1,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,    -1,   311,   312,   313,   314,    -1,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,    -1,   352,   353,   354,   355,
      -1,    -1,    -1,   359,   360,    -1,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,    -1,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,    -1,
      -1,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
      -1,    -1,   538,   539,   540,   541,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
      -1,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,    -1,
      -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,   653,   654,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,    -1,    -1,   187,    -1,    -1,    -1,   191,   192,
      -1,   194,   195,   196,    -1,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,    -1,   209,   210,    -1,   212,
      -1,    -1,   215,   216,    -1,    -1,    -1,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,   242,
      -1,    -1,    -1,   246,   247,    -1,   249,   250,    -1,    -1,
      -1,   254,   255,    -1,   257,   258,    -1,    -1,   261,    -1,
      -1,   264,   265,    -1,   267,    -1,    -1,    -1,   271,   272,
      -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,    -1,   311,   312,
     313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,
     323,   324,   325,   326,   327,    -1,    -1,   330,   331,    -1,
     333,    -1,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,
     353,   354,   355,    -1,    -1,    -1,   359,   360,    -1,    -1,
      -1,   364,    -1,   366,   367,   368,    -1,   370,   371,   372,
      -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   384,   385,   386,    -1,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,    -1,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,   456,    -1,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,   471,   472,
     473,    -1,    -1,   476,   477,   478,   479,    -1,    -1,    -1,
     483,    -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,
      -1,   494,   495,   496,   497,   498,   499,    -1,    -1,    -1,
      -1,   504,   505,   506,    -1,   508,   509,    -1,   511,    -1,
      -1,   514,    -1,    -1,   517,   518,   519,   520,   521,   522,
     523,    -1,    -1,    -1,   527,   528,    -1,   530,   531,   532,
     533,   534,   535,    -1,    -1,   538,   539,   540,   541,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,    -1,
      -1,   554,   555,    -1,   557,   558,   559,   560,   561,    -1,
      -1,    -1,    -1,   566,   567,   568,   569,   570,   571,    -1,
     573,   574,    -1,    -1,    -1,   578,   579,   580,   581,    -1,
     583,   584,    -1,   586,   587,    -1,   589,   590,    -1,    -1,
     593,    -1,    -1,   596,    -1,   598,    -1,   600,   601,   602,
      -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,
      -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,
      -1,    -1,    -1,    -1,   627,   628,    -1,   630,   631,   632,
      -1,    -1,   635,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,
      22,   654,    24,    25,    26,    27,    28,    29,    -1,    31,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,
      52,    -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,    -1,    -1,   187,    -1,    -1,    -1,   191,
     192,    -1,   194,   195,   196,    -1,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,    -1,   209,   210,    -1,
     212,    -1,    -1,   215,   216,    -1,    -1,    -1,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,
     242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,    -1,
      -1,    -1,   254,   255,    -1,   257,   258,    -1,    -1,   261,
      -1,    -1,   264,   265,    -1,    -1,    -1,    -1,    -1,   271,
     272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,    -1,   311,
     312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,
     322,   323,   324,   325,   326,   327,    -1,    -1,   330,   331,
      -1,   333,    -1,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,
     352,   353,   354,   355,    -1,    -1,    -1,   359,   360,    -1,
      -1,    -1,   364,    -1,   366,   367,   368,    -1,   370,   371,
     372,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   384,   385,   386,    -1,   388,   389,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,    -1,    -1,   445,    -1,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,   471,
     472,    -1,    -1,    -1,   476,   477,   478,   479,    -1,    -1,
      -1,   483,    -1,    -1,    -1,   487,    -1,   489,   490,   491,
     492,    -1,   494,   495,   496,   497,   498,   499,    -1,    -1,
      -1,    -1,   504,   505,   506,    -1,   508,   509,    -1,   511,
      -1,    -1,   514,    -1,    -1,   517,   518,   519,   520,   521,
     522,   523,    -1,    -1,    -1,   527,   528,    -1,   530,   531,
     532,   533,   534,   535,    -1,    -1,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,    -1,   557,   558,   559,   560,   561,
      -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,   571,
      -1,   573,   574,    -1,    -1,    -1,   578,   579,   580,   581,
      -1,   583,   584,    -1,   586,   587,    -1,   589,   590,    -1,
      -1,   593,    -1,    -1,   596,    -1,   598,    -1,   600,   601,
     602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,
     612,    -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,
      -1,    -1,    -1,    -1,    -1,   627,   628,    -1,   630,   631,
     632,    -1,    -1,   635,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    22,   654,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
      -1,   182,   183,   184,    -1,    -1,   187,    -1,    -1,    -1,
     191,   192,    -1,   194,    -1,   196,    -1,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,    -1,   209,   210,
      -1,   212,    -1,    -1,   215,   216,    -1,    -1,    -1,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,    -1,   230,
      -1,   232,    -1,    -1,    -1,    -1,   237,   238,    -1,    -1,
      -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,
      -1,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
     261,    -1,    -1,   264,   265,    -1,    -1,    -1,    -1,    -1,
     271,   272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,    -1,
     311,   312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,
      -1,   322,   323,   324,   325,   326,   327,    -1,    -1,   330,
     331,    -1,   333,    -1,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,    -1,    -1,   348,   349,    -1,
      -1,   352,   353,   354,   355,    -1,    -1,    -1,   359,   360,
      -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,   370,
     371,   372,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   384,   385,   386,    -1,   388,   389,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,   404,   405,    -1,   407,    -1,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,    -1,   420,
      -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,    -1,   437,   438,    -1,   440,
     441,   442,    -1,    -1,   445,    -1,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,   456,    -1,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,    -1,
     471,   472,   473,    -1,    -1,   476,   477,   478,   479,    -1,
      -1,    -1,   483,    -1,    -1,    -1,   487,    -1,   489,   490,
     491,   492,    -1,   494,   495,   496,   497,   498,    -1,    -1,
      -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,    -1,
     511,    -1,    -1,   514,    -1,    -1,   517,   518,   519,   520,
     521,   522,   523,    -1,    -1,    -1,   527,   528,    -1,   530,
     531,   532,   533,   534,   535,    -1,    -1,   538,   539,   540,
     541,    -1,   543,   544,    -1,    -1,   547,   548,   549,   550,
     551,    -1,    -1,   554,   555,    -1,   557,   558,   559,   560,
     561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,
     571,    -1,   573,   574,    -1,    -1,    -1,   578,   579,   580,
     581,    -1,   583,   584,    -1,   586,   587,    -1,   589,   590,
      -1,    -1,   593,    -1,    -1,   596,    -1,   598,    -1,   600,
     601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,
      -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,   620,
      -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,   630,
     631,   632,    -1,    -1,   635,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,   647,    -1,    18,    19,
      -1,    -1,    22,   654,    24,    25,    26,    27,    28,    29,
      -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,    49,
      -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,    -1,    -1,   187,    -1,    -1,
      -1,   191,   192,    -1,   194,    -1,   196,    -1,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,   209,
     210,    -1,   212,    -1,    -1,   215,   216,    -1,    -1,    -1,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,    -1,
     230,    -1,   232,    -1,    -1,    -1,    -1,   237,   238,    -1,
      -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,
      -1,   261,    -1,    -1,   264,   265,    -1,    -1,    -1,    -1,
      -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
      -1,   311,   312,   313,   314,    -1,   316,   317,    -1,    -1,
      -1,    -1,   322,   323,   324,   325,   326,   327,    -1,    -1,
     330,   331,    -1,   333,    -1,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,    -1,    -1,   348,   349,
      -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,   359,
     360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,
     370,   371,   372,    -1,   374,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   384,   385,   386,    -1,   388,   389,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,    -1,    -1,   445,    -1,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,   471,   472,    -1,    -1,    -1,   476,   477,   478,   479,
      -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,   489,
     490,   491,   492,    -1,   494,   495,   496,   497,   498,    -1,
      -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,
      -1,   511,    -1,    -1,   514,    -1,    -1,   517,   518,   519,
     520,   521,   522,   523,    -1,    -1,    -1,   527,   528,    -1,
     530,   531,   532,   533,   534,   535,    -1,    -1,   538,   539,
     540,   541,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,    -1,   557,   558,   559,
     560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,
     570,   571,    -1,   573,   574,    -1,    -1,    -1,   578,   579,
     580,   581,    -1,   583,   584,    -1,   586,   587,    -1,   589,
     590,    -1,    -1,   593,    -1,    -1,   596,    -1,   598,    -1,
     600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,
      -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,
     620,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,
     630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     5,   647,     7,     8,
       9,    10,    11,   653,   654,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
     169,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,    -1,   182,   183,   184,    -1,    -1,   187,    -1,
      -1,    -1,   191,   192,    -1,   194,    -1,   196,    -1,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,
     209,   210,    -1,   212,    -1,    -1,   215,   216,    -1,    -1,
      -1,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
      -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,   238,
      -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,
     249,   250,    -1,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,   261,    -1,    -1,   264,   265,    -1,    -1,    -1,
      -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,
     279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,    -1,   311,   312,   313,   314,    -1,   316,   317,    -1,
      -1,    -1,    -1,   322,   323,   324,   325,   326,   327,    -1,
      -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,
     359,   360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,
      -1,   370,   371,   372,    -1,   374,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   384,   385,   386,    -1,   388,
     389,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,   438,
      -1,   440,   441,   442,    -1,    -1,   445,    -1,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,   456,    -1,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,   471,   472,    -1,    -1,    -1,   476,   477,   478,
     479,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,
     489,   490,   491,   492,    -1,   494,   495,   496,   497,   498,
      -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,
     509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,   518,
     519,   520,   521,   522,   523,    -1,    -1,    -1,   527,   528,
      -1,   530,   531,   532,   533,   534,   535,    -1,    -1,   538,
     539,   540,   541,    -1,   543,   544,    -1,    -1,   547,   548,
     549,   550,   551,    -1,    -1,   554,   555,    -1,   557,   558,
     559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,
     569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,   578,
     579,   580,   581,    -1,   583,   584,    -1,   586,   587,    -1,
     589,   590,    -1,    -1,   593,    -1,    -1,   596,    -1,   598,
      -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,
     609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,
     619,   620,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,
      -1,   630,   631,   632,    -1,    -1,   635,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    14,   646,    -1,    -1,
      18,    19,    -1,    -1,    22,   654,    24,    25,    26,    27,
      28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,    -1,    -1,   187,
      -1,    -1,    -1,   191,   192,    -1,   194,    -1,   196,    -1,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
      -1,   209,   210,    -1,   212,    -1,    -1,   215,   216,    -1,
      -1,    -1,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,    -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,
     238,    -1,   240,    -1,   242,    -1,    -1,    -1,   246,   247,
      -1,   249,   250,    -1,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,   261,    -1,    -1,   264,   265,    -1,    -1,
      -1,    -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,
     278,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,    -1,   311,   312,   313,   314,    -1,   316,   317,
      -1,    -1,    -1,    -1,   322,   323,   324,   325,   326,   327,
      -1,    -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,    -1,    -1,
     348,   349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,
      -1,   359,   360,    -1,    -1,    -1,   364,    -1,   366,   367,
     368,    -1,   370,   371,   372,    -1,   374,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   384,   385,   386,    -1,
     388,   389,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,    -1,    -1,   445,    -1,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,   471,   472,    -1,    -1,    -1,   476,   477,
     478,   479,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,
      -1,   489,   490,   491,   492,    -1,   494,   495,   496,   497,
     498,    -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,
     508,   509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,
     518,   519,   520,   521,   522,   523,    -1,    -1,    -1,   527,
     528,    -1,   530,   531,   532,   533,   534,   535,    -1,    -1,
     538,   539,   540,   541,    -1,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,    -1,   557,
     558,   559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,
     568,   569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,
     578,   579,   580,   581,    -1,   583,   584,    -1,   586,   587,
      -1,   589,   590,    -1,    -1,   593,    -1,    -1,   596,    -1,
     598,    -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,
      -1,   609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,
     618,   619,   620,    -1,    -1,    -1,    -1,    -1,    -1,   627,
     628,    -1,   630,   631,   632,    -1,    -1,   635,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    -1,    22,   654,    24,    25,    26,
      27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
      -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,    -1,    -1,
     187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,   196,
      -1,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,   216,
      -1,    -1,    -1,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,    -1,
     237,   238,    -1,    -1,    -1,   242,    -1,    -1,    -1,   246,
     247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,   261,    -1,    -1,   264,   265,    -1,
      -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,   276,
      -1,   278,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,    -1,   311,   312,   313,   314,    -1,   316,
     317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,   326,
     327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,    -1,
      -1,   348,   349,    -1,    -1,   352,   353,   354,   355,    -1,
      -1,    -1,   359,   360,    -1,    -1,    -1,   364,    -1,   366,
     367,   368,    -1,   370,   371,   372,    -1,   374,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,   386,
      -1,   388,   389,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,   404,   405,    -1,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,    -1,
     437,   438,    -1,   440,   441,   442,    -1,    -1,   445,    -1,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,   456,
      -1,    -1,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,   476,
     477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,    -1,
     487,    -1,   489,   490,   491,   492,    -1,   494,   495,   496,
     497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,   506,
      -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,    -1,
     517,   518,   519,   520,   521,   522,   523,    -1,    -1,    -1,
     527,   528,    -1,   530,   531,   532,   533,   534,   535,    -1,
      -1,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,    -1,
     557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,   566,
     567,   568,   569,   570,   571,    -1,   573,   574,    -1,    -1,
      -1,   578,   579,   580,   581,    -1,   583,   584,    -1,   586,
     587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,   596,
      -1,   598,    -1,   600,   601,   602,    -1,    -1,    -1,    -1,
      -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,   616,
     617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,    -1,
     627,   628,    -1,   630,   631,   632,    -1,    -1,   635,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,   646,
      -1,    -1,    18,    19,    -1,    -1,    22,   654,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,    -1,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
      -1,   237,   238,    -1,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,    -1,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,    -1,   311,   312,   313,   314,    -1,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,   355,
      -1,    -1,    -1,   359,   360,    -1,    -1,    -1,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,    -1,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,    -1,
      -1,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
      -1,    -1,   538,   539,   540,   541,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
      -1,    -1,   578,   579,   580,   581,    -1,   583,   584,    -1,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,    -1,
      -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,    -1,    -1,   641,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,   654,    18,
      19,    -1,    -1,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
     169,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,    -1,   182,   183,   184,    -1,    -1,   187,    -1,
      -1,    -1,   191,   192,    -1,   194,    -1,   196,    -1,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,
     209,   210,    -1,   212,    -1,    -1,   215,   216,    -1,    -1,
      -1,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
      -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,   238,
      -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,
     249,   250,    -1,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,   261,    -1,    -1,   264,   265,    -1,    -1,    -1,
      -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,
     279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,    -1,   311,   312,   313,   314,    -1,   316,   317,    -1,
      -1,    -1,    -1,   322,   323,   324,   325,   326,   327,    -1,
      -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,
     359,   360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,
      -1,   370,   371,   372,    -1,   374,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   384,   385,   386,    -1,   388,
     389,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,   438,
      -1,   440,   441,   442,    -1,    -1,   445,    -1,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,   456,    -1,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,   471,   472,    -1,    -1,    -1,   476,   477,   478,
     479,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,
     489,   490,   491,   492,    -1,   494,   495,   496,   497,   498,
      -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,
     509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,   518,
     519,   520,   521,   522,   523,    -1,    -1,    -1,   527,   528,
      -1,   530,   531,   532,   533,   534,   535,    -1,    -1,   538,
     539,   540,   541,    -1,   543,   544,    -1,    -1,   547,   548,
     549,   550,   551,    -1,    -1,   554,   555,    -1,   557,   558,
     559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,
     569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,   578,
     579,   580,   581,    -1,   583,   584,    -1,   586,   587,    -1,
     589,   590,    -1,    -1,   593,    -1,    -1,   596,    -1,   598,
      -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,
     609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,
     619,   620,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,
      -1,   630,   631,   632,    -1,    -1,   635,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,   653,   654,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,    -1,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
      -1,   237,   238,    -1,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,    -1,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,    -1,   311,   312,   313,   314,    -1,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,   355,
      -1,    -1,    -1,   359,   360,    -1,    -1,    -1,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,    -1,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,    -1,
      -1,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
      -1,    -1,   538,   539,   540,   541,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
      -1,    -1,   578,   579,   580,   581,    -1,   583,   584,    -1,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,    -1,
      -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    22,   654,    24,
      25,    26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,
      35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,
      -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,
      55,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,    -1,   182,   183,   184,
      -1,    -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,
      -1,   196,    -1,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,
     215,   216,    -1,    -1,    -1,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,
      -1,    -1,   237,   238,    -1,    -1,    -1,   242,    -1,    -1,
      -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,   264,
     265,    -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,
      -1,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,    -1,   311,   312,   313,   314,
      -1,   316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,
     325,   326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,    -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,
     355,    -1,    -1,    -1,   359,   360,    -1,    -1,    -1,   364,
      -1,   366,   367,   368,    -1,   370,   371,   372,    -1,   374,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,
     385,   386,    -1,   388,   389,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,   404,
     405,    -1,   407,    -1,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,    -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,
     445,    -1,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,   471,   472,    -1,    -1,
      -1,   476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,
      -1,    -1,   487,    -1,   489,   490,   491,   492,    -1,   494,
     495,   496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,
     505,   506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,
      -1,    -1,   517,   518,   519,   520,   521,   522,   523,    -1,
      -1,    -1,   527,   528,    -1,   530,   531,   532,   533,   534,
     535,    -1,    -1,   538,   539,   540,   541,    -1,   543,   544,
      -1,    -1,   547,   548,   549,   550,   551,    -1,    -1,   554,
     555,    -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,
      -1,   566,   567,   568,   569,   570,   571,    -1,   573,   574,
      -1,    -1,    -1,   578,   579,   580,   581,    -1,   583,   584,
      -1,   586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,
      -1,   596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,
      -1,    -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,
      -1,   616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,
      -1,    -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,
     635,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,   654,
      24,    25,    26,    27,    28,    29,    -1,    31,    -1,    -1,
      -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
      44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,
      -1,    55,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    -1,    73,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,    -1,    -1,   187,    -1,    -1,    -1,   191,   192,    -1,
     194,    -1,   196,    -1,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,
      -1,   215,   216,    -1,    -1,    -1,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,    -1,   230,    -1,   232,    -1,
      -1,    -1,    -1,   237,   238,    -1,    -1,    -1,   242,    -1,
      -1,    -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,
     254,    -1,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,
     264,   265,    -1,    -1,    -1,    -1,    -1,   271,   272,    -1,
     274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,    -1,   311,   312,   313,
     314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,   323,
     324,   325,   326,   327,    -1,    -1,   330,   331,    -1,   333,
      -1,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,   353,
     354,   355,    -1,    -1,    -1,   359,   360,    -1,    -1,    -1,
     364,    -1,   366,   367,   368,    -1,   370,   371,   372,    -1,
     374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     384,   385,   386,    -1,   388,   389,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,    -1,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,   471,   472,    -1,
      -1,    -1,   476,   477,   478,   479,    -1,    -1,    -1,   483,
      -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,    -1,
     494,   495,   496,   497,   498,    -1,    -1,    -1,    -1,    -1,
     504,   505,   506,    -1,   508,   509,    -1,   511,    -1,    -1,
     514,    -1,    -1,   517,   518,   519,   520,   521,   522,   523,
      -1,    -1,    -1,   527,   528,    -1,   530,   531,   532,   533,
     534,   535,    -1,    -1,   538,   539,   540,   541,    -1,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,    -1,   557,   558,   559,   560,   561,    -1,    -1,
      -1,    -1,   566,   567,   568,   569,   570,   571,    -1,   573,
     574,    -1,    -1,    -1,   578,   579,   580,   581,    -1,   583,
     584,    -1,   586,   587,    -1,   589,   590,    -1,    -1,   593,
      -1,    -1,   596,    -1,   598,    -1,   600,   601,   602,    -1,
      -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,    -1,
      -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,    -1,
      -1,    -1,    -1,   627,   628,    -1,   630,   631,   632,    -1,
      -1,   635,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
     654,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,    -1,    -1,   187,    -1,    -1,    -1,   191,   192,
      -1,   194,    -1,   196,    -1,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,    -1,   209,   210,    -1,   212,
      -1,    -1,   215,   216,    -1,    -1,    -1,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,    -1,   230,    -1,   232,
      -1,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,   242,
      -1,    -1,    -1,   246,   247,    -1,   249,   250,    -1,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,   261,    -1,
      -1,   264,   265,    -1,    -1,    -1,    -1,    -1,   271,   272,
      -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,    -1,   311,   312,
     313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,
     323,   324,   325,   326,   327,    -1,    -1,   330,   331,    -1,
     333,    -1,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,
     353,   354,   355,    -1,    -1,    -1,   359,   360,    -1,    -1,
      -1,   364,    -1,   366,   367,   368,    -1,   370,   371,   372,
      -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   384,   385,   386,    -1,   388,   389,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,    -1,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,   456,    -1,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,   471,   472,
      -1,    -1,    -1,   476,   477,   478,   479,    -1,    -1,    -1,
     483,    -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,
      -1,   494,   495,   496,   497,   498,    -1,    -1,    -1,    -1,
      -1,   504,   505,   506,    -1,   508,   509,    -1,   511,    -1,
      -1,   514,    -1,    -1,   517,   518,   519,   520,   521,   522,
     523,    -1,    -1,    -1,   527,   528,    -1,   530,   531,   532,
     533,   534,   535,    -1,    -1,   538,   539,   540,   541,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,    -1,
      -1,   554,   555,    -1,   557,   558,   559,   560,   561,    -1,
      -1,    -1,    -1,   566,   567,   568,   569,   570,   571,    -1,
     573,   574,    -1,    -1,    -1,   578,   579,   580,   581,    -1,
     583,   584,    -1,   586,   587,    -1,   589,   590,    -1,    -1,
     593,    -1,    -1,   596,    -1,   598,    -1,   600,   601,   602,
      -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,
      -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,
      -1,    -1,    -1,    -1,   627,   628,    -1,   630,   631,   632,
      -1,    -1,   635,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,
      22,   654,    24,    25,    26,    27,    28,    29,    -1,    31,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,
      52,    -1,    -1,    55,    56,    -1,    58,    59,    60,    61,
      62,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,    -1,    -1,   187,    -1,    -1,    -1,   191,
     192,    -1,   194,    -1,   196,    -1,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,    -1,   209,   210,    -1,
     212,    -1,    -1,   215,   216,    -1,    -1,    -1,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,    -1,   230,    -1,
     232,    -1,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,
     242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,    -1,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,   261,
      -1,    -1,   264,   265,    -1,    -1,    -1,    -1,    -1,   271,
     272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,    -1,   311,
     312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,
     322,   323,   324,   325,   326,   327,    -1,    -1,   330,   331,
      -1,   333,    -1,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,
     352,   353,   354,   355,    -1,    -1,    -1,   359,   360,    -1,
      -1,    -1,   364,    -1,   366,   367,   368,    -1,   370,   371,
     372,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   384,   385,   386,    -1,   388,   389,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,    -1,    -1,   445,    -1,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,   471,
     472,    -1,    -1,    -1,   476,   477,   478,   479,    -1,    -1,
      -1,   483,    -1,    -1,    -1,   487,    -1,   489,   490,   491,
     492,    -1,   494,   495,   496,   497,   498,    -1,    -1,    -1,
      -1,    -1,   504,   505,   506,    -1,   508,   509,    -1,   511,
      -1,    -1,   514,    -1,    -1,   517,   518,   519,   520,   521,
     522,   523,    -1,    -1,    -1,   527,   528,    -1,   530,   531,
     532,   533,   534,   535,    -1,    -1,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,    -1,   557,   558,   559,   560,   561,
      -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,   571,
      -1,   573,   574,    -1,    -1,    -1,   578,   579,   580,   581,
      -1,   583,   584,    -1,   586,   587,    -1,   589,   590,    -1,
      -1,   593,    -1,    -1,   596,    -1,   598,    -1,   600,   601,
     602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,
     612,    -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,
      -1,    -1,    -1,    -1,    -1,   627,   628,    -1,   630,   631,
     632,    -1,    -1,   635,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,
      -1,   653,    22,    -1,    24,    25,    26,    27,    28,    29,
      -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,    49,
      -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,    -1,    -1,   187,    -1,    -1,
      -1,   191,   192,    -1,   194,    -1,   196,    -1,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,   209,
     210,    -1,   212,    -1,    -1,   215,   216,    -1,    -1,    -1,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,    -1,
     230,    -1,   232,    -1,    -1,    -1,    -1,   237,   238,    -1,
      -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,
      -1,   261,    -1,    -1,   264,   265,   266,    -1,    -1,    -1,
      -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
      -1,   311,   312,   313,   314,    -1,   316,   317,    -1,    -1,
      -1,    -1,   322,   323,   324,   325,   326,   327,    -1,    -1,
     330,   331,    -1,   333,    -1,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,    -1,    -1,   348,   349,
      -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,   359,
     360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,
     370,   371,   372,    -1,   374,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   384,   385,   386,    -1,   388,   389,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,    -1,    -1,   445,    -1,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,   471,   472,    -1,    -1,    -1,   476,   477,   478,   479,
      -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,   489,
     490,   491,   492,    -1,   494,   495,   496,   497,   498,    -1,
      -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,
      -1,   511,    -1,    -1,   514,    -1,    -1,   517,   518,   519,
     520,   521,   522,   523,    -1,    -1,    -1,   527,   528,    -1,
     530,   531,   532,   533,   534,   535,    -1,    -1,   538,   539,
     540,   541,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,    -1,   553,   554,   555,    -1,   557,   558,   559,
     560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,
     570,   571,    -1,   573,   574,    -1,    -1,    -1,   578,   579,
     580,   581,    -1,   583,   584,    -1,   586,   587,    -1,   589,
     590,    -1,    -1,   593,    -1,    -1,   596,    -1,   598,    -1,
     600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,
      -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,
     620,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,
     630,   631,   632,    -1,    -1,   635,    -1,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    19,    -1,   653,    22,    -1,    24,    25,    26,    27,
      28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,    -1,    -1,   187,
      -1,    -1,    -1,   191,   192,    -1,   194,    -1,   196,    -1,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
      -1,   209,   210,    -1,   212,    -1,    -1,   215,   216,    -1,
      -1,    -1,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,    -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,
     238,    -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,
      -1,   249,   250,    -1,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,   261,    -1,    -1,   264,   265,   266,    -1,
      -1,    -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,
     278,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,    -1,   311,   312,   313,   314,    -1,   316,   317,
      -1,    -1,    -1,    -1,   322,   323,   324,   325,   326,   327,
      -1,    -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,    -1,    -1,
     348,   349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,
      -1,   359,   360,    -1,    -1,    -1,   364,    -1,   366,   367,
     368,    -1,   370,   371,   372,    -1,   374,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   384,   385,   386,    -1,
     388,   389,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,    -1,    -1,   445,    -1,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,   471,   472,    -1,    -1,    -1,   476,   477,
     478,   479,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,
      -1,   489,   490,   491,   492,    -1,   494,   495,   496,   497,
     498,    -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,
     508,   509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,
     518,   519,   520,   521,   522,   523,    -1,    -1,    -1,   527,
     528,    -1,   530,   531,   532,   533,   534,   535,    -1,    -1,
     538,   539,   540,   541,    -1,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,    -1,   553,   554,   555,    -1,   557,
     558,   559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,
     568,   569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,
     578,   579,   580,   581,    -1,   583,   584,    -1,   586,   587,
      -1,   589,   590,    -1,    -1,   593,    -1,    -1,   596,    -1,
     598,    -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,
      -1,   609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,
     618,   619,   620,    -1,    -1,    -1,    -1,    -1,    -1,   627,
     628,    -1,   630,   631,   632,    -1,    -1,   635,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,   653,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,    -1,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
      -1,   237,   238,    -1,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,    -1,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,    -1,   311,   312,   313,   314,    -1,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,   355,
      -1,    -1,    -1,   359,   360,    -1,    -1,    -1,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,    -1,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,    -1,
      -1,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
      -1,    -1,   538,   539,   540,   541,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
      -1,    -1,   578,   579,   580,   581,    -1,   583,   584,    -1,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,    -1,
      -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,    -1,   635,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    19,    -1,   653,    22,    -1,
      24,    25,    26,    27,    28,    29,    -1,    31,    -1,    -1,
      -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
      44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,
      -1,    55,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    -1,    73,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,    -1,    -1,   187,    -1,    -1,    -1,   191,   192,    -1,
     194,    -1,   196,    -1,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,
      -1,   215,   216,    -1,    -1,    -1,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,    -1,   230,    -1,   232,    -1,
      -1,    -1,    -1,   237,   238,    -1,    -1,    -1,   242,    -1,
      -1,    -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,
     254,    -1,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,
     264,   265,   266,    -1,    -1,    -1,    -1,   271,   272,    -1,
     274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,    -1,   311,   312,   313,
     314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,   323,
     324,   325,   326,   327,    -1,    -1,   330,   331,    -1,   333,
      -1,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,   353,
     354,   355,    -1,    -1,    -1,   359,   360,    -1,    -1,    -1,
     364,    -1,   366,   367,   368,    -1,   370,   371,   372,    -1,
     374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     384,   385,   386,    -1,   388,   389,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,    -1,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,   471,   472,    -1,
      -1,    -1,   476,   477,   478,   479,    -1,    -1,    -1,   483,
      -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,    -1,
     494,   495,   496,   497,   498,    -1,    -1,    -1,    -1,    -1,
     504,   505,   506,    -1,   508,   509,    -1,   511,    -1,    -1,
     514,    -1,    -1,   517,   518,   519,   520,   521,   522,   523,
      -1,    -1,    -1,   527,   528,    -1,   530,   531,   532,   533,
     534,   535,    -1,    -1,   538,   539,   540,   541,    -1,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,    -1,   553,
     554,   555,    -1,   557,   558,   559,   560,   561,    -1,    -1,
      -1,    -1,   566,   567,   568,   569,   570,   571,    -1,   573,
     574,    -1,    -1,    -1,   578,   579,   580,   581,    -1,   583,
     584,    -1,   586,   587,    -1,   589,   590,    -1,    -1,   593,
      -1,    -1,   596,    -1,   598,    -1,   600,   601,   602,    -1,
      -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,    -1,
      -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,    -1,
      -1,    -1,    -1,   627,   628,    -1,   630,   631,   632,    -1,
      -1,   635,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,   653,
      22,    -1,    24,    25,    26,    27,    28,    29,    -1,    31,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,
      52,    -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,    -1,    -1,   187,    -1,    -1,    -1,   191,
     192,    -1,   194,    -1,   196,    -1,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,    -1,   209,   210,    -1,
     212,    -1,    -1,   215,   216,    -1,    -1,    -1,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,    -1,   230,    -1,
     232,    -1,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,
     242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,    -1,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,   261,
      -1,    -1,   264,   265,    -1,    -1,    -1,    -1,    -1,   271,
     272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,    -1,   311,
     312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,
     322,   323,   324,   325,   326,   327,    -1,    -1,   330,   331,
      -1,   333,    -1,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,
     352,   353,   354,   355,    -1,    -1,    -1,   359,   360,    -1,
      -1,    -1,   364,    -1,   366,   367,   368,    -1,   370,   371,
     372,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   384,   385,   386,    -1,   388,   389,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,    -1,    -1,   445,    -1,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,   471,
     472,    -1,    -1,    -1,   476,   477,   478,   479,    -1,    -1,
      -1,   483,    -1,    -1,    -1,   487,    -1,   489,   490,   491,
     492,    -1,   494,   495,   496,   497,   498,    -1,    -1,    -1,
      -1,    -1,   504,   505,   506,    -1,   508,   509,    -1,   511,
      -1,    -1,   514,    -1,    -1,   517,   518,   519,   520,   521,
     522,   523,    -1,    -1,    -1,   527,   528,    -1,   530,   531,
     532,   533,   534,   535,    -1,    -1,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,    -1,   557,   558,   559,   560,   561,
      -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,   571,
      -1,   573,   574,    -1,    -1,    -1,   578,   579,   580,   581,
      -1,   583,   584,    -1,   586,   587,    -1,   589,   590,    -1,
      -1,   593,    -1,    -1,   596,    -1,   598,    -1,   600,   601,
     602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,
     612,    -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,
      -1,    -1,    -1,    -1,    -1,   627,   628,    -1,   630,   631,
     632,    -1,    -1,   635,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,
      -1,   653,    22,    -1,    24,    25,    26,    27,    28,    29,
      -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,    49,
      -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,    -1,    -1,   187,    -1,    -1,
      -1,   191,   192,    -1,   194,    -1,   196,    -1,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,   209,
     210,    -1,   212,    -1,    -1,   215,   216,    -1,    -1,    -1,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,    -1,
     230,    -1,   232,    -1,    -1,    -1,    -1,   237,   238,    -1,
      -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,
      -1,   261,    -1,    -1,   264,   265,    -1,    -1,    -1,    -1,
      -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
      -1,   311,   312,   313,   314,    -1,   316,   317,    -1,    -1,
      -1,    -1,   322,   323,   324,   325,   326,   327,    -1,    -1,
     330,   331,    -1,   333,    -1,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,    -1,    -1,   348,   349,
      -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,   359,
     360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,
     370,   371,   372,    -1,   374,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   384,   385,   386,    -1,   388,   389,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,    -1,    -1,   445,    -1,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,   471,   472,    -1,    -1,    -1,   476,   477,   478,   479,
      -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,   489,
     490,   491,   492,    -1,   494,   495,   496,   497,   498,    -1,
      -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,
      -1,   511,    -1,    -1,   514,    -1,    -1,   517,   518,   519,
     520,   521,   522,   523,    -1,    -1,    -1,   527,   528,    -1,
     530,   531,   532,   533,   534,   535,    -1,    -1,   538,   539,
     540,   541,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,    -1,   557,   558,   559,
     560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,
     570,   571,    -1,   573,   574,    -1,    -1,    -1,   578,   579,
     580,   581,    -1,   583,   584,    -1,   586,   587,    -1,   589,
     590,    -1,    -1,   593,    -1,    -1,   596,    -1,   598,    -1,
     600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,
      -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,
     620,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,
     630,   631,   632,    -1,    -1,   635,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,   653,    -1,    24,    25,    26,    27,    28,
      -1,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    -1,
      -1,    -1,    -1,    52,    53,    -1,    55,    56,    -1,    58,
      59,    -1,    -1,    -1,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    -1,
      79,    -1,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,    -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,    -1,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
      -1,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,   181,   182,   183,   184,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   192,    -1,   194,    -1,   196,    -1,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,
      -1,   210,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,   221,   222,   223,   224,    -1,   226,   227,   228,
      -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,
     249,   250,   251,    -1,    -1,   254,    -1,    -1,    -1,   258,
      -1,    -1,   261,   262,    -1,   264,   265,    -1,    -1,    -1,
      -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,
     279,    -1,    -1,    -1,    -1,   284,    -1,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,    -1,   311,   312,   313,   314,    -1,   316,   317,    -1,
      -1,    -1,    -1,   322,   323,   324,   325,   326,   327,    -1,
      -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,
      -1,   360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,
      -1,   370,   371,   372,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   385,   386,    -1,    -1,
     389,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,    -1,    -1,    -1,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,    -1,
      -1,   440,    -1,   442,   443,    -1,   445,    -1,    -1,    -1,
     449,    -1,    -1,   452,   453,   454,   455,   456,    -1,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,    -1,   471,    -1,    -1,    -1,    -1,   476,   477,   478,
      -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,
      -1,   490,    -1,   492,    -1,   494,    -1,    -1,   497,   498,
      -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,
     509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,    -1,
     519,   520,   521,   522,   523,    -1,    -1,    -1,    -1,   528,
      -1,   530,   531,   532,   533,   534,   535,    -1,    -1,   538,
     539,   540,   541,    -1,   543,   544,    -1,    -1,   547,   548,
     549,   550,   551,    -1,    -1,   554,   555,    -1,   557,   558,
     559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,
     569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,    -1,
     579,   580,   581,    -1,   583,   584,    -1,   586,   587,    -1,
      -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,
      -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,
     609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,
     619,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
      -1,   630,    -1,   632,    -1,    -1,   635,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,   648,
      18,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,    -1,    -1,   187,
      -1,    -1,    -1,   191,   192,    -1,   194,    -1,   196,    -1,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
      -1,   209,   210,    -1,   212,    -1,    -1,   215,   216,    -1,
      -1,    -1,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,    -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,
     238,    -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,
      -1,   249,   250,    -1,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,   261,    -1,    -1,   264,   265,    -1,    -1,
      -1,    -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,
     278,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,    -1,   311,   312,   313,   314,    -1,   316,   317,
      -1,    -1,    -1,    -1,   322,   323,   324,   325,   326,   327,
      -1,    -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,    -1,    -1,
     348,   349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,
      -1,   359,   360,    -1,    -1,    -1,   364,    -1,   366,   367,
     368,    -1,   370,   371,   372,    -1,   374,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   384,   385,   386,    -1,
     388,   389,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,    -1,    -1,   445,    -1,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,   471,   472,    -1,    -1,    -1,   476,   477,
     478,   479,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,
      -1,   489,   490,   491,   492,    -1,   494,   495,   496,   497,
     498,    -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,
     508,   509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,
     518,   519,   520,   521,   522,   523,    -1,    -1,    -1,   527,
     528,    -1,   530,   531,   532,   533,   534,   535,    -1,    -1,
     538,   539,   540,   541,    -1,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,    -1,   557,
     558,   559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,
     568,   569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,
     578,   579,   580,   581,    -1,   583,   584,    -1,   586,   587,
      -1,   589,   590,    -1,    -1,   593,    -1,    -1,   596,    -1,
     598,    -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,
      -1,   609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,
     618,   619,   620,    -1,    -1,    -1,    -1,    -1,    -1,   627,
     628,    -1,   630,   631,   632,    -1,     5,   635,     7,     8,
       9,    10,    11,   641,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
     169,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,    -1,   182,   183,   184,    -1,    -1,   187,    -1,
      -1,    -1,   191,   192,    -1,   194,    -1,   196,    -1,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,
     209,   210,    -1,   212,    -1,    -1,   215,   216,    -1,    -1,
      -1,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
      -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,   238,
      -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,
     249,   250,    -1,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,   261,    -1,    -1,   264,   265,    -1,    -1,    -1,
      -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,
     279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,    -1,   311,   312,   313,   314,    -1,   316,   317,    -1,
      -1,    -1,    -1,   322,   323,   324,   325,   326,   327,    -1,
      -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,
     359,   360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,
      -1,   370,   371,   372,    -1,   374,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   384,   385,   386,    -1,   388,
     389,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,   438,
      -1,   440,   441,   442,    -1,    -1,   445,    -1,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,   456,    -1,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,   471,   472,    -1,    -1,    -1,   476,   477,   478,
     479,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,
     489,   490,   491,   492,    -1,   494,   495,   496,   497,   498,
      -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,
     509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,   518,
     519,   520,   521,   522,   523,    -1,    -1,    -1,   527,   528,
      -1,   530,   531,   532,   533,   534,   535,    -1,    -1,   538,
     539,   540,   541,    -1,   543,   544,    -1,    -1,   547,   548,
     549,   550,   551,    -1,    -1,   554,   555,    -1,   557,   558,
     559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,
     569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,   578,
     579,   580,   581,    -1,   583,   584,    -1,   586,   587,    -1,
     589,   590,    -1,    -1,   593,    -1,    -1,   596,    -1,   598,
      -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,
     609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,
     619,   620,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,
      -1,   630,   631,   632,    -1,     5,   635,     7,     8,     9,
      10,    11,   641,    -1,    14,    -1,    -1,    -1,    18,    19,
      -1,    -1,    22,    -1,    24,    25,    26,    27,    28,    29,
      -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,    49,
      -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,    -1,    -1,   187,    -1,    -1,
      -1,   191,   192,    -1,   194,    -1,   196,    -1,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,   209,
     210,    -1,   212,    -1,    -1,   215,   216,    -1,    -1,    -1,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,    -1,
     230,    -1,   232,    -1,    -1,    -1,    -1,   237,   238,    -1,
      -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,
      -1,   261,    -1,    -1,   264,   265,    -1,    -1,    -1,    -1,
      -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
      -1,   311,   312,   313,   314,    -1,   316,   317,    -1,    -1,
      -1,    -1,   322,   323,   324,   325,   326,   327,    -1,    -1,
     330,   331,    -1,   333,    -1,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,    -1,    -1,   348,   349,
      -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,   359,
     360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,
     370,   371,   372,    -1,   374,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   384,   385,   386,    -1,   388,   389,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,    -1,    -1,   445,    -1,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,   471,   472,    -1,    -1,    -1,   476,   477,   478,   479,
      -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,   489,
     490,   491,   492,    -1,   494,   495,   496,   497,   498,    -1,
      -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,
      -1,   511,    -1,    -1,   514,    -1,    -1,   517,   518,   519,
     520,   521,   522,   523,    -1,    -1,    -1,   527,   528,    -1,
     530,   531,   532,   533,   534,   535,    -1,    -1,   538,   539,
     540,   541,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,    -1,   557,   558,   559,
     560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,
     570,   571,    -1,   573,   574,    -1,    -1,    -1,   578,   579,
     580,   581,    -1,   583,   584,    -1,   586,   587,    -1,   589,
     590,    -1,    -1,   593,    -1,    -1,   596,    -1,   598,    -1,
     600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,
      -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,
     620,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,
     630,   631,   632,    -1,     5,   635,     7,     8,     9,    10,
      11,   641,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    22,    -1,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
      -1,   182,   183,   184,    -1,    -1,   187,    -1,    -1,    -1,
     191,   192,    -1,   194,    -1,   196,    -1,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,    -1,   209,   210,
      -1,   212,    -1,    -1,   215,   216,    -1,    -1,    -1,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,    -1,   230,
      -1,   232,    -1,    -1,    -1,    -1,   237,   238,    -1,    -1,
      -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,
      -1,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
     261,    -1,    -1,   264,   265,    -1,    -1,    -1,    -1,    -1,
     271,   272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,    -1,
     311,   312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,
      -1,   322,   323,   324,   325,   326,   327,    -1,    -1,   330,
     331,    -1,   333,    -1,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,    -1,    -1,   348,   349,    -1,
      -1,   352,   353,   354,   355,    -1,    -1,    -1,   359,   360,
      -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,   370,
     371,   372,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   384,   385,   386,    -1,   388,   389,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,   404,   405,    -1,   407,    -1,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,    -1,   420,
      -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,    -1,   437,   438,    -1,   440,
     441,   442,    -1,    -1,   445,    -1,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,   456,    -1,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,    -1,
     471,   472,    -1,    -1,    -1,   476,   477,   478,   479,    -1,
      -1,    -1,   483,    -1,    -1,    -1,   487,    -1,   489,   490,
     491,   492,    -1,   494,   495,   496,   497,   498,    -1,    -1,
      -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,    -1,
     511,    -1,    -1,   514,    -1,    -1,   517,   518,   519,   520,
     521,   522,   523,    -1,    -1,    -1,   527,   528,    -1,   530,
     531,   532,   533,   534,   535,    -1,    -1,   538,   539,   540,
     541,    -1,   543,   544,    -1,    -1,   547,   548,   549,   550,
     551,    -1,    -1,   554,   555,    -1,   557,   558,   559,   560,
     561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,
     571,    -1,   573,   574,    -1,    -1,    -1,   578,   579,   580,
     581,    -1,   583,   584,    -1,   586,   587,    -1,   589,   590,
      -1,    -1,   593,    -1,    -1,   596,    -1,   598,    -1,   600,
     601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,
      -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,   620,
      -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,   630,
     631,   632,    -1,     5,   635,     7,     8,     9,    10,    11,
     641,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    -1,    31,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,
      52,    -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,    -1,    -1,    -1,   191,
     192,    -1,   194,    -1,   196,    -1,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,    -1,   209,   210,    -1,
     212,   213,    -1,   215,   216,    -1,    -1,    -1,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,    -1,   230,    -1,
     232,    -1,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,
     242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,    -1,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,   261,
      -1,    -1,   264,   265,    -1,    -1,    -1,    -1,    -1,   271,
     272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,
     282,    -1,    -1,    -1,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,    -1,   311,
     312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,
     322,   323,   324,   325,   326,   327,    -1,    -1,   330,   331,
      -1,   333,    -1,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,
     352,   353,   354,   355,   356,   357,    -1,   359,   360,    -1,
      -1,   363,   364,    -1,   366,   367,   368,    -1,   370,   371,
     372,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   384,   385,   386,    -1,   388,   389,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,    -1,    -1,   445,    -1,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,   471,
     472,    -1,    -1,    -1,   476,   477,   478,   479,    -1,    -1,
      -1,   483,    -1,    -1,    -1,   487,    -1,   489,   490,   491,
     492,    -1,   494,   495,   496,   497,   498,    -1,    -1,   501,
     502,   503,   504,   505,   506,    -1,   508,   509,    -1,   511,
      -1,    -1,   514,    -1,    -1,   517,   518,   519,   520,   521,
     522,   523,    -1,    -1,    -1,   527,   528,    -1,   530,   531,
     532,   533,   534,   535,    -1,    -1,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,    -1,   557,   558,   559,   560,   561,
      -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,   571,
      -1,   573,   574,    -1,    -1,    -1,   578,   579,   580,   581,
     582,   583,   584,    -1,   586,   587,    -1,   589,   590,    -1,
      -1,   593,    -1,    -1,   596,    -1,   598,    -1,   600,   601,
     602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,
     612,    -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,
      -1,    -1,    -1,    -1,    -1,   627,   628,    -1,   630,   631,
     632,    -1,     5,   635,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    34,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,   159,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,    -1,    -1,   187,    -1,    -1,    -1,   191,   192,
      -1,   194,    -1,   196,    -1,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,    -1,   209,   210,    -1,   212,
      -1,    -1,   215,   216,    -1,    -1,    -1,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,    -1,   230,    -1,   232,
      -1,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,   242,
      -1,    -1,    -1,   246,   247,    -1,   249,   250,    -1,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,   261,    -1,
      -1,   264,   265,   266,    -1,    -1,    -1,    -1,   271,   272,
      -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,    -1,   311,   312,
     313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,
     323,   324,   325,   326,   327,    -1,    -1,   330,   331,    -1,
     333,    -1,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,
     353,   354,   355,    -1,    -1,    -1,   359,   360,    -1,    -1,
      -1,   364,    -1,   366,   367,   368,    -1,   370,   371,   372,
      -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   384,   385,   386,    -1,   388,   389,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,    -1,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,   456,    -1,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,   471,   472,
      -1,    -1,    -1,   476,   477,   478,   479,    -1,    -1,   482,
     483,    -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,
      -1,   494,   495,   496,   497,   498,    -1,    -1,    -1,    -1,
      -1,   504,   505,   506,    -1,   508,   509,    -1,   511,    -1,
      -1,   514,    -1,    -1,   517,   518,   519,   520,   521,   522,
     523,    -1,    -1,    -1,   527,   528,    -1,   530,   531,   532,
     533,   534,   535,    -1,    -1,   538,   539,   540,   541,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,    -1,
     553,   554,   555,    -1,   557,   558,   559,   560,   561,    -1,
      -1,    -1,    -1,   566,   567,   568,   569,   570,   571,    -1,
     573,   574,    -1,    -1,    -1,   578,   579,   580,   581,    -1,
     583,   584,    -1,   586,   587,    -1,   589,   590,    -1,    -1,
     593,    -1,    -1,   596,    -1,   598,    -1,   600,   601,   602,
      -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,
      -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,
      -1,    -1,    -1,    -1,   627,   628,    -1,   630,   631,   632,
      -1,     5,   635,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,
      24,    25,    26,    27,    28,    29,    -1,    31,    -1,    -1,
      34,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
      44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,
      -1,    55,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    -1,    73,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
     124,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,    -1,    -1,   187,    -1,    -1,    -1,   191,   192,    -1,
     194,    -1,   196,    -1,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,
      -1,   215,   216,    -1,    -1,    -1,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,    -1,   230,    -1,   232,    -1,
      -1,    -1,    -1,   237,   238,    -1,    -1,    -1,   242,    -1,
      -1,    -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,
     254,    -1,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,
     264,   265,   266,    -1,    -1,    -1,    -1,   271,   272,    -1,
     274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,    -1,   311,   312,   313,
     314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,   323,
     324,   325,   326,   327,    -1,    -1,   330,   331,    -1,   333,
      -1,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,   353,
     354,   355,    -1,    -1,    -1,   359,   360,    -1,    -1,    -1,
     364,    -1,   366,   367,   368,    -1,   370,   371,   372,    -1,
     374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     384,   385,   386,    -1,   388,   389,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,    -1,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,   471,   472,    -1,
      -1,    -1,   476,   477,   478,   479,    -1,    -1,    -1,   483,
      -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,    -1,
     494,   495,   496,   497,   498,    -1,    -1,    -1,    -1,    -1,
     504,   505,   506,    -1,   508,   509,    -1,   511,    -1,    -1,
     514,    -1,    -1,   517,   518,   519,   520,   521,   522,   523,
      -1,    -1,    -1,   527,   528,    -1,   530,   531,   532,   533,
     534,   535,    -1,    -1,   538,   539,   540,   541,    -1,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,    -1,   553,
     554,   555,    -1,   557,   558,   559,   560,   561,    -1,    -1,
      -1,    -1,   566,   567,   568,   569,   570,   571,    -1,   573,
     574,    -1,    -1,    -1,   578,   579,   580,   581,    -1,   583,
     584,    -1,   586,   587,    -1,   589,   590,    -1,    -1,   593,
      -1,    -1,   596,    -1,   598,    -1,   600,   601,   602,    -1,
      -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,    -1,
      -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,    -1,
      -1,    -1,    -1,   627,   628,    -1,   630,   631,   632,    -1,
       5,   635,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,
      25,    26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,
      35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,
      -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,
      55,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,    -1,   182,   183,   184,
      -1,    -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,
      -1,   196,    -1,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,
     215,   216,    -1,    -1,    -1,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,
      -1,    -1,   237,   238,    -1,    -1,    -1,   242,    -1,    -1,
      -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,   264,
     265,    -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,
      -1,   276,    -1,   278,   279,    -1,    -1,   282,    -1,    -1,
      -1,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,    -1,   311,   312,   313,   314,
      -1,   316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,
     325,   326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,    -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,
     355,    -1,    -1,    -1,   359,   360,    -1,    -1,   363,   364,
      -1,   366,   367,   368,    -1,   370,   371,   372,    -1,   374,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,
     385,   386,   387,   388,   389,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,   404,
     405,    -1,   407,    -1,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,    -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,
     445,    -1,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,   471,   472,    -1,    -1,
      -1,   476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,
      -1,    -1,   487,    -1,   489,   490,   491,   492,    -1,   494,
     495,   496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,
     505,   506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,
      -1,    -1,   517,   518,   519,   520,   521,   522,   523,    -1,
      -1,    -1,   527,   528,    -1,   530,   531,   532,   533,   534,
     535,    -1,    -1,   538,   539,   540,   541,    -1,   543,   544,
      -1,    -1,   547,   548,   549,   550,   551,    -1,    -1,   554,
     555,    -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,
      -1,   566,   567,   568,   569,   570,   571,    -1,   573,   574,
      -1,    -1,    -1,   578,   579,   580,   581,   582,   583,   584,
      -1,   586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,
      -1,   596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,
      -1,    -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,
      -1,   616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,
      -1,    -1,   627,   628,    -1,   630,   631,   632,    -1,     5,
     635,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    34,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,    -1,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
      -1,   237,   238,    -1,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,    -1,   264,   265,
     266,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,    -1,   311,   312,   313,   314,    -1,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,   355,
      -1,    -1,    -1,   359,   360,    -1,    -1,    -1,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,    -1,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,    -1,
      -1,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
      -1,    -1,   538,   539,   540,   541,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,   553,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
      -1,    -1,   578,   579,   580,   581,    -1,   583,   584,    -1,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,    -1,
      -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,     5,   635,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
      -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,   103,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,    -1,    -1,
     187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,   196,
      -1,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,   216,
      -1,    -1,    -1,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,    -1,
     237,   238,    -1,    -1,    -1,   242,    -1,    -1,    -1,   246,
     247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,   261,    -1,    -1,   264,   265,   266,
      -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,   276,
      -1,   278,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,    -1,   311,   312,   313,   314,    -1,   316,
     317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,   326,
     327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,    -1,
      -1,   348,   349,    -1,    -1,   352,   353,   354,   355,    -1,
      -1,    -1,   359,   360,    -1,    -1,    -1,   364,    -1,   366,
     367,   368,    -1,   370,   371,   372,    -1,   374,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,   386,
      -1,   388,   389,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,   404,   405,    -1,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,    -1,
     437,   438,    -1,   440,   441,   442,    -1,    -1,   445,    -1,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,   456,
      -1,    -1,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,   476,
     477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,    -1,
     487,    -1,   489,   490,   491,   492,    -1,   494,   495,   496,
     497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,   506,
      -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,    -1,
     517,   518,   519,   520,   521,   522,   523,    -1,    -1,    -1,
     527,   528,    -1,   530,   531,   532,   533,   534,   535,    -1,
      -1,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,   550,   551,    -1,   553,   554,   555,    -1,
     557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,   566,
     567,   568,   569,   570,   571,    -1,   573,   574,    -1,    -1,
      -1,   578,   579,   580,   581,    -1,   583,   584,    -1,   586,
     587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,   596,
      -1,   598,    -1,   600,   601,   602,    -1,    -1,    -1,    -1,
      -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,   616,
     617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,    -1,
     627,   628,    -1,   630,   631,   632,    -1,     5,   635,     7,
       8,     9,    10,    11,    12,    -1,    14,    -1,    -1,    -1,
      18,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,    -1,    -1,   187,
      -1,    -1,    -1,   191,   192,    -1,   194,    -1,   196,    -1,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
      -1,   209,   210,    -1,   212,    -1,    -1,   215,   216,    -1,
      -1,    -1,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,    -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,
     238,    -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,
      -1,   249,   250,    -1,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,   261,    -1,    -1,   264,   265,   266,    -1,
      -1,    -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,
     278,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,    -1,   311,   312,   313,   314,    -1,   316,   317,
      -1,    -1,    -1,    -1,   322,   323,   324,   325,   326,   327,
      -1,    -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,    -1,    -1,
     348,   349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,
      -1,   359,   360,    -1,    -1,    -1,   364,    -1,   366,   367,
     368,    -1,   370,   371,   372,    -1,   374,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   384,   385,   386,    -1,
     388,   389,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,    -1,    -1,   445,    -1,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,   471,   472,    -1,    -1,    -1,   476,   477,
     478,   479,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,
      -1,   489,   490,   491,   492,    -1,   494,   495,   496,   497,
     498,    -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,
     508,   509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,
     518,   519,   520,   521,   522,   523,    -1,    -1,    -1,   527,
     528,    -1,   530,   531,   532,   533,   534,   535,    -1,    -1,
     538,   539,   540,   541,    -1,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,    -1,   553,   554,   555,    -1,   557,
     558,   559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,
     568,   569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,
     578,   579,   580,   581,    -1,   583,   584,    -1,   586,   587,
      -1,   589,   590,    -1,    -1,   593,    -1,    -1,   596,    -1,
     598,    -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,
      -1,   609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,
     618,   619,   620,    -1,    -1,    -1,    -1,    -1,    -1,   627,
     628,    -1,   630,   631,   632,    -1,     5,   635,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    -1,    35,    36,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
     169,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,    -1,   182,   183,   184,    -1,    -1,   187,    -1,
      -1,    -1,   191,   192,    -1,   194,    -1,   196,    -1,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,
     209,   210,    -1,   212,   213,    -1,   215,   216,    -1,    -1,
      -1,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
      -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,   238,
      -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,
     249,   250,    -1,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,   261,    -1,    -1,   264,   265,    -1,    -1,    -1,
      -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,
     279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,    -1,   311,   312,   313,   314,    -1,   316,   317,    -1,
      -1,    -1,    -1,   322,   323,   324,   325,   326,   327,    -1,
      -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,
     359,   360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,
      -1,   370,   371,   372,    -1,   374,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   384,   385,   386,    -1,   388,
     389,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,   438,
      -1,   440,   441,   442,    -1,    -1,   445,    -1,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,   456,    -1,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,   471,   472,    -1,    -1,    -1,   476,   477,   478,
     479,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,
     489,   490,   491,   492,    -1,   494,   495,   496,   497,   498,
      -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,
     509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,   518,
     519,   520,   521,   522,   523,    -1,    -1,    -1,   527,   528,
      -1,   530,   531,   532,   533,   534,   535,    -1,    -1,   538,
     539,   540,   541,    -1,   543,   544,    -1,    -1,   547,   548,
     549,   550,   551,    -1,   553,   554,   555,    -1,   557,   558,
     559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,
     569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,   578,
     579,   580,   581,    -1,   583,   584,    -1,   586,   587,    -1,
     589,   590,    -1,    -1,   593,    -1,    -1,   596,    -1,   598,
      -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,
     609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,
     619,   620,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,
      -1,   630,   631,   632,    -1,     5,   635,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,
      -1,    -1,    22,    -1,    24,    25,    26,    27,    28,    29,
      -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,    49,
      -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,    -1,    -1,   187,    -1,    -1,
      -1,   191,   192,    -1,   194,    -1,   196,    -1,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,   209,
     210,    -1,   212,    -1,    -1,   215,   216,    -1,    -1,    -1,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,    -1,
     230,    -1,   232,    -1,    -1,    -1,    -1,   237,   238,    -1,
      -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,
      -1,   261,    -1,    -1,   264,   265,   266,    -1,    -1,    -1,
      -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
      -1,   311,   312,   313,   314,    -1,   316,   317,    -1,    -1,
      -1,    -1,   322,   323,   324,   325,   326,   327,    -1,    -1,
     330,   331,    -1,   333,    -1,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,    -1,    -1,   348,   349,
      -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,   359,
     360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,
     370,   371,   372,    -1,   374,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   384,   385,   386,    -1,   388,   389,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,    -1,    -1,   445,    -1,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,   471,   472,    -1,    -1,    -1,   476,   477,   478,   479,
      -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,   489,
     490,   491,   492,    -1,   494,   495,   496,   497,   498,    -1,
      -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,
      -1,   511,    -1,    -1,   514,    -1,    -1,   517,   518,   519,
     520,   521,   522,   523,    -1,    -1,    -1,   527,   528,    -1,
     530,   531,   532,   533,   534,   535,    -1,    -1,   538,   539,
     540,   541,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,    -1,   553,   554,   555,    -1,   557,   558,   559,
     560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,
     570,   571,    -1,   573,   574,    -1,    -1,    -1,   578,   579,
     580,   581,    -1,   583,   584,    -1,   586,   587,    -1,   589,
     590,    -1,    -1,   593,    -1,    -1,   596,    -1,   598,    -1,
     600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,
      -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,
     620,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,
     630,   631,   632,    -1,     5,   635,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    22,    -1,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    34,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
      -1,   182,   183,   184,    -1,    -1,   187,    -1,    -1,    -1,
     191,   192,    -1,   194,    -1,   196,    -1,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,    -1,   209,   210,
      -1,   212,    -1,    -1,   215,   216,    -1,    -1,    -1,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,    -1,   230,
      -1,   232,    -1,    -1,    -1,    -1,   237,   238,    -1,    -1,
      -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,
      -1,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
     261,    -1,    -1,   264,   265,   266,    -1,    -1,    -1,    -1,
     271,   272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,    -1,
     311,   312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,
      -1,   322,   323,   324,   325,   326,   327,    -1,    -1,   330,
     331,    -1,   333,    -1,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,    -1,    -1,   348,   349,    -1,
      -1,   352,   353,   354,   355,    -1,    -1,    -1,   359,   360,
      -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,   370,
     371,   372,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   384,   385,   386,    -1,   388,   389,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,   404,   405,    -1,   407,    -1,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,    -1,   420,
      -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,    -1,   437,   438,    -1,   440,
     441,   442,    -1,    -1,   445,    -1,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,   456,    -1,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,    -1,
     471,   472,    -1,    -1,    -1,   476,   477,   478,   479,    -1,
      -1,    -1,   483,    -1,    -1,    -1,   487,    -1,   489,   490,
     491,   492,    -1,   494,   495,   496,   497,   498,    -1,    -1,
      -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,    -1,
     511,    -1,    -1,   514,    -1,    -1,   517,   518,   519,   520,
     521,   522,   523,    -1,    -1,    -1,   527,   528,    -1,   530,
     531,   532,   533,   534,   535,    -1,    -1,   538,   539,   540,
     541,    -1,   543,   544,    -1,    -1,   547,   548,   549,   550,
     551,    -1,   553,   554,   555,    -1,   557,   558,   559,   560,
     561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,
     571,    -1,   573,   574,    -1,    -1,    -1,   578,   579,   580,
     581,    -1,   583,   584,    -1,   586,   587,    -1,   589,   590,
      -1,    -1,   593,    -1,    -1,   596,    -1,   598,    -1,   600,
     601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,
      -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,   620,
      -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,   630,
     631,   632,    -1,     5,   635,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    -1,    31,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,
      52,    -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,    -1,    -1,   187,    -1,    -1,    -1,   191,
     192,    -1,   194,    -1,   196,    -1,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,    -1,   209,   210,    -1,
     212,    -1,    -1,   215,   216,    -1,    -1,    -1,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,    -1,   230,    -1,
     232,    -1,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,
     242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,    -1,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,   261,
      -1,    -1,   264,   265,   266,    -1,    -1,    -1,    -1,   271,
     272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,    -1,   311,
     312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,
     322,   323,   324,   325,   326,   327,    -1,    -1,   330,   331,
      -1,   333,    -1,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,
     352,   353,   354,   355,    -1,    -1,    -1,   359,   360,    -1,
      -1,    -1,   364,    -1,   366,   367,   368,    -1,   370,   371,
     372,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   384,   385,   386,    -1,   388,   389,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,    -1,    -1,   445,    -1,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,   471,
     472,    -1,    -1,    -1,   476,   477,   478,   479,    -1,    -1,
      -1,   483,    -1,    -1,    -1,   487,    -1,   489,   490,   491,
     492,    -1,   494,   495,   496,   497,   498,    -1,    -1,    -1,
      -1,    -1,   504,   505,   506,    -1,   508,   509,    -1,   511,
      -1,    -1,   514,    -1,    -1,   517,   518,   519,   520,   521,
     522,   523,    -1,    -1,    -1,   527,   528,    -1,   530,   531,
     532,   533,   534,   535,    -1,    -1,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
      -1,   553,   554,   555,    -1,   557,   558,   559,   560,   561,
      -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,   571,
      -1,   573,   574,    -1,    -1,    -1,   578,   579,   580,   581,
      -1,   583,   584,    -1,   586,   587,    -1,   589,   590,    -1,
      -1,   593,    -1,    -1,   596,    -1,   598,    -1,   600,   601,
     602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,
     612,    -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,
      -1,    -1,    -1,    -1,    -1,   627,   628,    -1,   630,   631,
     632,    -1,     5,   635,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    20,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,    -1,    -1,   187,    -1,    -1,    -1,   191,   192,
      -1,   194,    -1,   196,    -1,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,    -1,   209,   210,    -1,   212,
      -1,    -1,   215,   216,    -1,    -1,    -1,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,    -1,   230,    -1,   232,
      -1,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,   242,
      -1,    -1,    -1,   246,   247,    -1,   249,   250,    -1,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,   261,    -1,
      -1,   264,   265,    -1,    -1,    -1,    -1,    -1,   271,   272,
      -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,    -1,   311,   312,
     313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,
     323,   324,   325,   326,   327,    -1,    -1,   330,   331,    -1,
     333,    -1,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,
     353,   354,   355,    -1,    -1,    -1,   359,   360,    -1,    -1,
      -1,   364,    -1,   366,   367,   368,    -1,   370,   371,   372,
      -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   384,   385,   386,    -1,   388,   389,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,    -1,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,   456,    -1,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,   471,   472,
      -1,    -1,    -1,   476,   477,   478,   479,    -1,    -1,    -1,
     483,    -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,
      -1,   494,   495,   496,   497,   498,    -1,    -1,    -1,    -1,
      -1,   504,   505,   506,    -1,   508,   509,    -1,   511,    -1,
      -1,   514,    -1,    -1,   517,   518,   519,   520,   521,   522,
     523,    -1,    -1,    -1,   527,   528,    -1,   530,   531,   532,
     533,   534,   535,    -1,    -1,   538,   539,   540,   541,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,    -1,
     553,   554,   555,    -1,   557,   558,   559,   560,   561,    -1,
      -1,    -1,    -1,   566,   567,   568,   569,   570,   571,    -1,
     573,   574,    -1,    -1,    -1,   578,   579,   580,   581,    -1,
     583,   584,    -1,   586,   587,    -1,   589,   590,    -1,    -1,
     593,    -1,    -1,   596,    -1,   598,    -1,   600,   601,   602,
      -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,
      -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,
      -1,    -1,    -1,    -1,   627,   628,    -1,   630,   631,   632,
      -1,     5,   635,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,
      24,    25,    26,    27,    28,    29,    -1,    31,    -1,    -1,
      -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
      44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,
      -1,    55,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    -1,    73,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,   171,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,    -1,    -1,   187,    -1,    -1,    -1,   191,   192,    -1,
     194,    -1,   196,    -1,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,
      -1,   215,   216,    -1,    -1,    -1,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,    -1,   230,    -1,   232,    -1,
      -1,    -1,    -1,   237,   238,    -1,    -1,    -1,   242,    -1,
      -1,    -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,
     254,    -1,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,
     264,   265,    -1,    -1,    -1,    -1,    -1,   271,   272,    -1,
     274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,    -1,   311,   312,   313,
     314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,   323,
     324,   325,   326,   327,    -1,    -1,   330,   331,    -1,   333,
      -1,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,   353,
     354,   355,    -1,    -1,    -1,   359,   360,    -1,    -1,    -1,
     364,    -1,   366,   367,   368,    -1,   370,   371,   372,    -1,
     374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     384,   385,   386,    -1,   388,   389,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,    -1,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,   471,   472,    -1,
      -1,    -1,   476,   477,   478,   479,    -1,    -1,    -1,   483,
      -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,    -1,
     494,   495,   496,   497,   498,    -1,    -1,    -1,    -1,    -1,
     504,   505,   506,    -1,   508,   509,    -1,   511,    -1,    -1,
     514,    -1,    -1,   517,   518,   519,   520,   521,   522,   523,
      -1,    -1,    -1,   527,   528,    -1,   530,   531,   532,   533,
     534,   535,    -1,    -1,   538,   539,   540,   541,    -1,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,    -1,   557,   558,   559,   560,   561,    -1,    -1,
      -1,    -1,   566,   567,   568,   569,   570,   571,    -1,   573,
     574,    -1,    -1,    -1,   578,   579,   580,   581,    -1,   583,
     584,    -1,   586,   587,    -1,   589,   590,    -1,    -1,   593,
      -1,    -1,   596,    -1,   598,    -1,   600,   601,   602,    -1,
      -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,    -1,
      -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,    -1,
      -1,    -1,    -1,   627,   628,    -1,   630,   631,   632,    -1,
       5,   635,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,
      25,    26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,
      35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,
      -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,
      55,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,    -1,   182,   183,   184,
      -1,    -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,
      -1,   196,    -1,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,
     215,   216,    -1,    -1,    -1,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,
      -1,    -1,   237,   238,    -1,    -1,    -1,   242,    -1,    -1,
      -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,   264,
     265,    -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,
      -1,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,    -1,   311,   312,   313,   314,
      -1,   316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,
     325,   326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,    -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,
     355,    -1,    -1,    -1,   359,   360,    -1,    -1,    -1,   364,
      -1,   366,   367,   368,    -1,   370,   371,   372,    -1,   374,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,
     385,   386,    -1,   388,   389,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,   404,
     405,    -1,   407,    -1,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,    -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,
     445,    -1,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,   471,   472,    -1,    -1,
      -1,   476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,
      -1,    -1,   487,    -1,   489,   490,   491,   492,    -1,   494,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,   504,
     505,   506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,
      -1,    -1,   517,   518,   519,   520,   521,   522,   523,    -1,
      -1,    -1,   527,   528,    -1,   530,   531,   532,   533,   534,
     535,    -1,    -1,   538,   539,   540,   541,    -1,   543,   544,
      -1,    -1,   547,   548,   549,   550,   551,    -1,    -1,   554,
     555,    -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,
      -1,   566,   567,   568,   569,   570,   571,    -1,   573,   574,
      -1,    -1,    -1,   578,   579,   580,   581,    -1,   583,   584,
      -1,   586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,
      -1,   596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,
      -1,    -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,
      -1,   616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,
      -1,    -1,   627,   628,    -1,   630,   631,   632,    -1,     5,
     635,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,    -1,
      -1,   187,    -1,    -1,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
      -1,   237,   238,    -1,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,    -1,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,    -1,   311,   312,   313,   314,    -1,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,   355,
      -1,    -1,    -1,   359,   360,    -1,    -1,    -1,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,    -1,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,    -1,
      -1,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
      -1,    -1,   538,   539,   540,   541,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
      -1,    -1,   578,   579,   580,   581,    -1,   583,   584,    -1,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,    -1,
      -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,     5,   635,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
      -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,   124,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,    -1,    -1,
     187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,   196,
      -1,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,   216,
      -1,    -1,    -1,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,    -1,
     237,   238,    -1,    -1,    -1,   242,    -1,    -1,    -1,   246,
     247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,   261,    -1,    -1,   264,   265,    -1,
      -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,   276,
      -1,   278,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,    -1,   311,   312,   313,   314,    -1,   316,
     317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,   326,
     327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,    -1,
      -1,   348,   349,    -1,    -1,   352,   353,   354,   355,    -1,
      -1,    -1,   359,   360,    -1,    -1,    -1,   364,    -1,   366,
     367,   368,    -1,   370,   371,   372,    -1,   374,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,   386,
      -1,   388,   389,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,   404,   405,    -1,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,    -1,
     437,   438,    -1,   440,   441,   442,    -1,    -1,   445,    -1,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,   456,
      -1,    -1,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,   476,
     477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,    -1,
     487,    -1,   489,   490,   491,   492,    -1,   494,   495,   496,
     497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,   506,
      -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,    -1,
     517,   518,   519,   520,   521,   522,   523,    -1,    -1,    -1,
     527,   528,    -1,   530,   531,   532,   533,   534,   535,    -1,
      -1,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,    -1,
     557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,   566,
     567,   568,   569,   570,   571,    -1,   573,   574,    -1,    -1,
      -1,   578,   579,   580,   581,    -1,   583,   584,    -1,   586,
     587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,   596,
      -1,   598,    -1,   600,   601,   602,    -1,    -1,    -1,    -1,
      -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,   616,
     617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,    -1,
     627,   628,    -1,   630,   631,   632,    -1,     5,   635,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      48,    49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,   124,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,    -1,    -1,   187,
      -1,    -1,    -1,   191,   192,    -1,   194,    -1,   196,    -1,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
      -1,   209,   210,    -1,   212,    -1,    -1,   215,   216,    -1,
      -1,    -1,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,    -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,
     238,    -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,
      -1,   249,   250,    -1,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,   261,    -1,    -1,   264,   265,    -1,    -1,
      -1,    -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,
     278,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,    -1,   311,   312,   313,   314,    -1,   316,   317,
      -1,    -1,    -1,    -1,   322,   323,   324,   325,   326,   327,
      -1,    -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,    -1,    -1,
     348,   349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,
      -1,   359,   360,    -1,    -1,    -1,   364,    -1,   366,   367,
     368,    -1,   370,   371,   372,    -1,   374,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   384,   385,   386,    -1,
     388,   389,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,    -1,    -1,   445,    -1,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,   471,   472,    -1,    -1,    -1,   476,   477,
     478,   479,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,
      -1,   489,   490,   491,   492,    -1,   494,   495,   496,   497,
     498,    -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,
     508,   509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,
     518,   519,   520,   521,   522,   523,    -1,    -1,    -1,   527,
     528,    -1,   530,   531,   532,   533,   534,   535,    -1,    -1,
     538,   539,   540,   541,    -1,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,    -1,   557,
     558,   559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,
     568,   569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,
     578,   579,   580,   581,    -1,   583,   584,    -1,   586,   587,
      -1,   589,   590,    -1,    -1,   593,    -1,    -1,   596,    -1,
     598,    -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,
      -1,   609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,
     618,   619,   620,    -1,    -1,    -1,    -1,    -1,    -1,   627,
     628,    -1,   630,   631,   632,    -1,     5,   635,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    22,    -1,    24,    25,    26,    27,    28,
      29,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,
      49,    -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
     169,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,    -1,   182,   183,   184,    -1,    -1,   187,    -1,
      -1,    -1,   191,   192,    -1,   194,    -1,   196,    -1,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,
     209,   210,    -1,   212,    -1,    -1,   215,   216,    -1,    -1,
      -1,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
      -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,   238,
      -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,
     249,   250,    -1,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,   261,    -1,    -1,   264,   265,    -1,    -1,    -1,
      -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,
     279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,    -1,   311,   312,   313,   314,    -1,   316,   317,    -1,
      -1,    -1,    -1,   322,   323,   324,   325,   326,   327,    -1,
      -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,
     359,   360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,
      -1,   370,   371,   372,    -1,   374,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   384,   385,   386,    -1,   388,
     389,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,   438,
      -1,   440,   441,   442,    -1,    -1,   445,    -1,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,   456,    -1,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,   471,   472,    -1,    -1,    -1,   476,   477,   478,
     479,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,
     489,   490,   491,   492,    -1,   494,   495,   496,   497,   498,
      -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,
     509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,   518,
     519,   520,   521,   522,   523,    -1,    -1,    -1,   527,   528,
      -1,   530,   531,   532,   533,   534,   535,    -1,    -1,   538,
     539,   540,   541,    -1,   543,   544,    -1,    -1,   547,   548,
     549,   550,   551,    -1,    -1,   554,   555,    -1,   557,   558,
     559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,
     569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,   578,
     579,   580,   581,    -1,   583,   584,    -1,   586,   587,    -1,
     589,   590,    -1,    -1,   593,    -1,    -1,   596,    -1,   598,
      -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,
     609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,
     619,   620,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,
      -1,   630,   631,   632,    -1,     5,   635,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,
      -1,    -1,    22,    -1,    24,    25,    26,    27,    28,    29,
      -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    48,    49,
      -1,    -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,    -1,    -1,   187,    -1,    -1,
      -1,   191,   192,    -1,   194,    -1,   196,    -1,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,   209,
     210,    -1,   212,    -1,    -1,   215,   216,    -1,    -1,    -1,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,    -1,
     230,    -1,   232,    -1,    -1,    -1,    -1,   237,   238,    -1,
      -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,
      -1,   261,    -1,    -1,   264,   265,    -1,    -1,    -1,    -1,
      -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
      -1,   311,   312,   313,   314,    -1,   316,   317,    -1,    -1,
      -1,    -1,   322,   323,   324,   325,   326,   327,    -1,    -1,
     330,   331,    -1,   333,    -1,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,    -1,    -1,   348,   349,
      -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,   359,
     360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,
     370,   371,   372,    -1,   374,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   384,   385,   386,    -1,   388,   389,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,    -1,    -1,   445,    -1,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,   471,   472,    -1,    -1,    -1,   476,   477,   478,   479,
      -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,   489,
     490,   491,   492,    -1,   494,   495,   496,   497,   498,    -1,
      -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,
      -1,   511,    -1,    -1,   514,    -1,    -1,   517,   518,   519,
     520,   521,   522,   523,    -1,    -1,    -1,   527,   528,    -1,
     530,   531,   532,   533,   534,   535,    -1,    -1,   538,   539,
     540,   541,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,    -1,   557,   558,   559,
     560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,
     570,   571,    -1,   573,   574,    -1,    -1,    -1,   578,   579,
     580,   581,    -1,   583,   584,    -1,   586,   587,    -1,   589,
     590,    -1,    -1,   593,    -1,    -1,   596,    -1,   598,    -1,
     600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,
      -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,
     620,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,
     630,   631,   632,    -1,     5,   635,     7,     8,     9,    10,
      11,    12,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    22,    -1,    24,    25,    26,    27,    28,    29,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    48,    49,    -1,
      -1,    52,    -1,    -1,    55,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
      -1,   182,   183,   184,    -1,    -1,   187,    -1,    -1,    -1,
     191,   192,    -1,   194,    -1,   196,    -1,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,    -1,   209,   210,
      -1,   212,    -1,    -1,   215,   216,    -1,    -1,    -1,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,    -1,   230,
      -1,   232,    -1,    -1,    -1,    -1,   237,   238,    -1,    -1,
      -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,
      -1,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
     261,    -1,    -1,   264,   265,    -1,    -1,    -1,    -1,    -1,
     271,   272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,    -1,
     311,   312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,
      -1,   322,   323,   324,   325,   326,   327,    -1,    -1,   330,
     331,    -1,   333,    -1,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,    -1,    -1,   348,   349,    -1,
      -1,   352,   353,   354,   355,    -1,    -1,    -1,   359,   360,
      -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,   370,
     371,   372,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   384,   385,   386,    -1,   388,   389,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,   404,   405,    -1,   407,    -1,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,    -1,   420,
      -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,    -1,   437,   438,    -1,   440,
     441,   442,    -1,    -1,   445,    -1,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,   456,    -1,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,    -1,
     471,   472,    -1,    -1,    -1,   476,   477,   478,   479,    -1,
      -1,    -1,   483,    -1,    -1,    -1,   487,    -1,   489,   490,
     491,   492,    -1,   494,   495,   496,   497,   498,    -1,    -1,
      -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,    -1,
     511,    -1,    -1,   514,    -1,    -1,   517,   518,   519,   520,
     521,   522,   523,    -1,    -1,    -1,   527,   528,    -1,   530,
     531,   532,   533,   534,   535,    -1,    -1,   538,   539,   540,
     541,    -1,   543,   544,    -1,    -1,   547,   548,   549,   550,
     551,    -1,    -1,   554,   555,    -1,   557,   558,   559,   560,
     561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,
     571,    -1,   573,   574,    -1,    -1,    -1,   578,   579,   580,
     581,    -1,   583,   584,    -1,   586,   587,    -1,   589,   590,
      -1,    -1,   593,    -1,    -1,   596,    -1,   598,    -1,   600,
     601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,
      -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,   620,
      -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,   630,
     631,   632,    -1,     5,   635,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    -1,    31,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,
      52,    -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,    -1,    -1,   187,    -1,    -1,    -1,   191,
     192,    -1,   194,    -1,   196,    -1,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,    -1,   209,   210,    -1,
     212,    -1,    -1,   215,   216,    -1,    -1,    -1,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,    -1,   230,    -1,
     232,    -1,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,
     242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,    -1,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,   261,
      -1,    -1,   264,   265,    -1,    -1,    -1,    -1,    -1,   271,
     272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,    -1,   311,
     312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,
     322,   323,   324,   325,   326,   327,    -1,    -1,   330,   331,
      -1,   333,    -1,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,
     352,   353,   354,   355,    -1,    -1,    -1,   359,   360,    -1,
      -1,    -1,   364,    -1,   366,   367,   368,    -1,   370,   371,
     372,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   384,   385,   386,    -1,   388,   389,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,    -1,    -1,   445,    -1,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,   471,
     472,    -1,    -1,    -1,   476,   477,   478,   479,    -1,    -1,
      -1,   483,    -1,    -1,    -1,   487,    -1,   489,   490,   491,
     492,    -1,   494,   495,   496,   497,   498,    -1,    -1,    -1,
      -1,    -1,   504,   505,   506,    -1,   508,   509,    -1,   511,
      -1,    -1,   514,    -1,    -1,   517,   518,   519,   520,   521,
     522,   523,    -1,    -1,    -1,   527,   528,    -1,   530,   531,
     532,   533,   534,   535,    -1,    -1,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,    -1,   557,   558,   559,   560,   561,
      -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,   571,
      -1,   573,   574,    -1,    -1,    -1,   578,   579,   580,   581,
      -1,   583,   584,    -1,   586,   587,    -1,   589,   590,    -1,
      -1,   593,    -1,    -1,   596,    -1,   598,    -1,   600,   601,
     602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,
     612,    -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,
      -1,    -1,    -1,    -1,    -1,   627,   628,    -1,   630,   631,
     632,    -1,     5,   635,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,
      -1,    -1,    55,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,    -1,    -1,   187,    -1,    -1,    -1,   191,   192,
      -1,   194,    -1,   196,    -1,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,    -1,   209,   210,    -1,   212,
      -1,    -1,   215,   216,    -1,    -1,    -1,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,    -1,   230,    -1,   232,
      -1,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,   242,
      -1,    -1,    -1,   246,   247,    -1,   249,   250,    -1,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,   261,    -1,
      -1,   264,   265,    -1,    -1,    -1,    -1,    -1,   271,   272,
      -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,    -1,   311,   312,
     313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,
     323,   324,   325,   326,   327,    -1,    -1,   330,   331,    -1,
     333,    -1,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,
     353,   354,   355,    -1,    -1,    -1,   359,   360,    -1,    -1,
      -1,   364,    -1,   366,   367,   368,    -1,   370,   371,   372,
      -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   384,   385,   386,    -1,   388,   389,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,    -1,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,   456,    -1,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,   471,   472,
      -1,    -1,    -1,   476,   477,   478,   479,    -1,    -1,    -1,
     483,    -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,
      -1,   494,   495,   496,   497,   498,    -1,    -1,    -1,    -1,
      -1,   504,   505,   506,    -1,   508,   509,    -1,   511,    -1,
      -1,   514,    -1,    -1,   517,   518,   519,   520,   521,   522,
     523,    -1,    -1,    -1,   527,   528,    -1,   530,   531,   532,
     533,   534,   535,    -1,    -1,   538,   539,   540,   541,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,    -1,
      -1,   554,   555,    -1,   557,   558,   559,   560,   561,    -1,
      -1,    -1,    -1,   566,   567,   568,   569,   570,   571,    -1,
     573,   574,    -1,    -1,    -1,   578,   579,   580,   581,    -1,
     583,   584,    -1,   586,   587,    -1,   589,   590,    -1,    -1,
     593,    -1,    -1,   596,    -1,   598,    -1,   600,   601,   602,
      -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,
      -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,
      -1,    -1,    -1,    -1,   627,   628,    -1,   630,   631,   632,
      -1,     5,   635,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,
      24,    25,    26,    27,    28,    29,    -1,    31,    -1,    -1,
      -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
      44,    -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,
      -1,    55,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    -1,    73,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,    -1,    -1,   187,    -1,    -1,    -1,   191,   192,    -1,
     194,    -1,   196,    -1,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,
      -1,   215,   216,    -1,    -1,    -1,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,    -1,   230,    -1,   232,    -1,
      -1,    -1,    -1,   237,   238,    -1,    -1,    -1,   242,    -1,
      -1,    -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,
     254,    -1,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,
     264,   265,    -1,    -1,    -1,    -1,    -1,   271,   272,    -1,
     274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,    -1,   311,   312,   313,
     314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,   323,
     324,   325,   326,   327,    -1,    -1,   330,   331,    -1,   333,
      -1,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,   353,
     354,   355,    -1,    -1,    -1,   359,   360,    -1,    -1,    -1,
     364,    -1,   366,   367,   368,    -1,   370,   371,   372,    -1,
     374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     384,   385,   386,    -1,   388,   389,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,    -1,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,   471,   472,    -1,
      -1,    -1,   476,   477,   478,   479,    -1,    -1,    -1,   483,
      -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,    -1,
     494,   495,   496,   497,   498,    -1,    -1,    -1,    -1,    -1,
     504,   505,   506,    -1,   508,   509,    -1,   511,    -1,    -1,
     514,    -1,    -1,   517,   518,   519,   520,   521,   522,   523,
      -1,    -1,    -1,   527,   528,    -1,   530,   531,   532,   533,
     534,   535,    -1,    -1,   538,   539,   540,   541,    -1,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,    -1,   553,
     554,   555,    -1,   557,   558,   559,   560,   561,    -1,    -1,
      -1,    -1,   566,   567,   568,   569,   570,   571,    -1,   573,
     574,    -1,    -1,    -1,   578,   579,   580,   581,    -1,   583,
     584,    -1,   586,   587,    -1,   589,   590,    -1,    -1,   593,
      -1,    -1,   596,    -1,   598,    -1,   600,   601,   602,    -1,
      -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,    -1,
      -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,    -1,
      -1,    -1,    -1,   627,   628,    -1,   630,   631,   632,    -1,
       5,   635,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,
      25,    26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,
      35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,
      -1,    46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,
      55,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,    -1,   182,   183,   184,
      -1,    -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,
      -1,   196,    -1,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,
     215,   216,    -1,    -1,    -1,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,
      -1,    -1,   237,   238,    -1,    -1,    -1,   242,    -1,    -1,
      -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,   264,
     265,    -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,
      -1,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,    -1,   311,   312,   313,   314,
      -1,   316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,
     325,   326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,    -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,
     355,    -1,    -1,    -1,   359,   360,    -1,    -1,    -1,   364,
      -1,   366,   367,   368,    -1,   370,   371,   372,    -1,   374,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,
     385,   386,    -1,   388,   389,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,   404,
     405,    -1,   407,    -1,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,    -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,
     445,    -1,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,   471,   472,    -1,    -1,
      -1,   476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,
      -1,    -1,   487,    -1,   489,   490,   491,   492,    -1,   494,
     495,   496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,
     505,   506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,
      -1,    -1,   517,   518,   519,   520,   521,   522,   523,    -1,
      -1,    -1,   527,   528,    -1,   530,   531,   532,   533,   534,
     535,    -1,    -1,   538,   539,   540,   541,    -1,   543,   544,
      -1,    -1,   547,   548,   549,   550,   551,    -1,    -1,   554,
     555,    -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,
      -1,   566,   567,   568,   569,   570,   571,    -1,   573,   574,
      -1,    -1,    -1,   578,   579,   580,   581,    -1,   583,   584,
      -1,   586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,
      -1,   596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,
      -1,    -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,
      -1,   616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,
      -1,    -1,   627,   628,    -1,   630,   631,   632,    -1,     5,
     635,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    22,    -1,    24,    25,
      26,    27,    28,    29,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    48,    49,    -1,    -1,    52,    -1,    -1,    55,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,    -1,
      -1,   187,    -1,    -1,    -1,   191,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,
     216,    -1,    -1,    -1,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
      -1,   237,   238,    -1,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,   261,    -1,    -1,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,    -1,   311,   312,   313,   314,    -1,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,   355,
      -1,    -1,    -1,   359,   360,    -1,    -1,    -1,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
     386,    -1,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
      -1,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,   523,    -1,    -1,
      -1,   527,   528,    -1,   530,   531,   532,   533,   534,   535,
      -1,    -1,   538,   539,   540,   541,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
      -1,    -1,   578,   579,   580,   581,    -1,   583,   584,    -1,
     586,   587,    -1,   589,   590,    -1,    -1,   593,    -1,    -1,
     596,    -1,   598,    -1,   600,   601,   602,    -1,    -1,    -1,
      -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,
     616,   617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,   627,   628,    -1,   630,   631,   632,    -1,     5,   635,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    -1,    -1,    -1,    24,    25,    26,
      27,    28,    -1,    -1,    31,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
      -1,    -1,    -1,    -1,    -1,    52,    53,    -1,    55,    56,
      -1,    58,    59,    -1,    -1,    -1,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    -1,    79,    -1,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    -1,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,    -1,    -1,    -1,   145,   146,
     147,    -1,   149,   150,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,    -1,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,   181,   182,   183,   184,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   192,    -1,   194,    -1,   196,
      -1,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,    -1,    -1,   210,    -1,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,   226,
     227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,   246,
     247,    -1,   249,   250,   251,    -1,    -1,   254,    -1,    -1,
      -1,   258,    -1,    -1,   261,   262,    -1,   264,   265,    -1,
      -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,   276,
      -1,   278,   279,    -1,    -1,    -1,    -1,   284,    -1,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,    -1,   311,   312,   313,   314,    -1,   316,
     317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,   326,
     327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,    -1,
      -1,   348,   349,    -1,    -1,   352,   353,   354,   355,    -1,
      -1,    -1,    -1,   360,    -1,    -1,    -1,   364,    -1,   366,
     367,   368,    -1,   370,   371,   372,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,
      -1,    -1,   389,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,    -1,    -1,    -1,   404,   405,    -1,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,    -1,
     437,    -1,    -1,   440,    -1,   442,   443,    -1,   445,    -1,
      -1,    -1,   449,    -1,    -1,   452,   453,   454,   455,   456,
      -1,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,    -1,   471,    -1,    -1,    -1,    -1,   476,
     477,   478,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,
     487,    -1,    -1,   490,    -1,   492,    -1,   494,    -1,    -1,
     497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,   506,
      -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,    -1,
     517,    -1,   519,   520,   521,   522,   523,    -1,    -1,    -1,
      -1,   528,    -1,   530,   531,   532,   533,   534,   535,    -1,
      -1,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,    -1,
     557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,   566,
     567,   568,   569,   570,   571,    -1,   573,   574,    -1,    -1,
      -1,    -1,   579,   580,   581,    -1,   583,   584,    -1,   586,
     587,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,
      -1,    -1,    -1,   600,   601,   602,    -1,    -1,    -1,    -1,
      -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,   616,
     617,   618,   619,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,    -1,   630,    -1,   632,    -1,     5,   635,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    19,    -1,    -1,    -1,    -1,    24,    25,    26,    27,
      28,    -1,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,
      -1,    -1,    -1,    -1,    52,    53,    -1,    55,    56,    -1,
      58,    59,    -1,    -1,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    -1,    73,    74,    -1,    76,    77,
      -1,    79,    -1,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    -1,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,    -1,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,    -1,    -1,    -1,   145,   146,   147,
      -1,   149,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,    -1,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,   181,   182,   183,   184,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   192,    -1,   194,    -1,   196,    -1,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
      -1,    -1,   210,    -1,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,   220,   221,   222,   223,   224,    -1,   226,   227,
     228,    -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,
      -1,   249,   250,   251,    -1,    -1,   254,    -1,    -1,    -1,
     258,    -1,    -1,   261,   262,    -1,   264,   265,    -1,    -1,
      -1,    -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,
     278,   279,    -1,    -1,    -1,    -1,   284,    -1,    -1,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,    -1,   311,   312,   313,   314,    -1,   316,   317,
      -1,    -1,    -1,    -1,   322,   323,   324,   325,   326,   327,
      -1,    -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,    -1,    -1,
     348,   349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,
      -1,    -1,   360,    -1,    -1,    -1,   364,    -1,   366,   367,
     368,    -1,   370,   371,   372,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,    -1,
      -1,   389,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,    -1,    -1,    -1,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
      -1,    -1,   440,    -1,   442,   443,    -1,   445,    -1,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,    -1,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,    -1,
     468,   469,    -1,   471,    -1,    -1,    -1,    -1,   476,   477,
     478,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,
      -1,    -1,   490,    -1,   492,    -1,   494,    -1,    -1,   497,
     498,    -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,
     508,   509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,
      -1,   519,   520,   521,   522,   523,    -1,    -1,    -1,    -1,
     528,    -1,   530,   531,   532,   533,   534,   535,    -1,    -1,
     538,   539,   540,   541,    -1,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,    -1,   557,
     558,   559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,
     568,   569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,
      -1,   579,   580,   581,    -1,   583,   584,    -1,   586,   587,
      -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,
      -1,    -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,
      -1,   609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,   623,    -1,    -1,    -1,   627,
      -1,    -1,   630,    -1,   632,    -1,     5,   635,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      19,    -1,    -1,    -1,    -1,    24,    25,    26,    27,    28,
      -1,    -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,
      39,    -1,    -1,    42,    43,    44,    -1,    46,    -1,    -1,
      -1,    -1,    -1,    52,    53,    -1,    55,    56,    -1,    58,
      59,    -1,    -1,    -1,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    -1,    73,    74,    -1,    76,    77,    -1,
      79,    -1,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,    -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,
     149,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
      -1,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,   181,   182,   183,   184,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   192,    -1,   194,    -1,   196,    -1,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,
      -1,   210,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,   221,   222,   223,   224,    -1,   226,   227,   228,
      -1,   230,    -1,   232,    -1,    -1,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,
     249,   250,   251,    -1,    -1,   254,    -1,    -1,    -1,   258,
      -1,    -1,   261,   262,    -1,   264,   265,    -1,    -1,    -1,
      -1,    -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,
     279,    -1,    -1,    -1,    -1,   284,    -1,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,    -1,   311,   312,   313,   314,    -1,   316,   317,    -1,
      -1,    -1,    -1,   322,   323,   324,   325,   326,   327,    -1,
      -1,   330,   331,    -1,   333,    -1,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,
      -1,   360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,
      -1,   370,   371,   372,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   385,   386,    -1,    -1,
     389,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,    -1,    -1,    -1,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,    -1,
      -1,   440,    -1,   442,   443,    -1,   445,    -1,    -1,    -1,
     449,    -1,    -1,   452,   453,   454,   455,   456,    -1,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,    -1,   471,    -1,    -1,    -1,    -1,   476,   477,   478,
      -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,
      -1,   490,    -1,   492,    -1,   494,    -1,    -1,   497,   498,
      -1,    -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,
     509,    -1,   511,    -1,    -1,   514,    -1,    -1,   517,    -1,
     519,   520,   521,   522,   523,    -1,    -1,    -1,    -1,   528,
      -1,   530,   531,   532,   533,   534,   535,    -1,    -1,   538,
     539,   540,   541,    -1,   543,   544,    -1,    -1,   547,   548,
     549,   550,   551,    -1,    -1,   554,   555,    -1,   557,   558,
     559,   560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,
     569,   570,   571,    -1,   573,   574,    -1,    -1,    -1,    -1,
     579,   580,   581,    -1,   583,   584,    -1,   586,   587,    -1,
      -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,
      -1,   600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,
     609,    -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,   623,    -1,    -1,    -1,   627,    -1,
      -1,   630,    -1,   632,    -1,     5,   635,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,
      -1,    -1,    -1,    -1,    24,    25,    26,    27,    28,    -1,
      -1,    31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,
      -1,    -1,    42,    43,    44,    -1,    46,    -1,    -1,    -1,
      -1,    -1,    52,    53,    -1,    55,    56,    -1,    58,    59,
      -1,    -1,    -1,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    -1,    73,    74,    -1,    76,    77,    -1,    79,
      -1,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   192,    -1,   194,    -1,   196,    -1,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,    -1,    -1,
     210,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
     220,   221,   222,   223,   224,    -1,   226,   227,   228,    -1,
     230,    -1,   232,    -1,    -1,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,
     250,   251,    -1,    -1,   254,    -1,    -1,    -1,   258,    -1,
      -1,   261,   262,    -1,   264,   265,    -1,    -1,    -1,    -1,
      -1,   271,   272,    -1,   274,    -1,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,   284,    -1,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
      -1,   311,   312,   313,   314,    -1,   316,   317,    -1,    -1,
      -1,    -1,   322,   323,   324,   325,   326,   327,    -1,    -1,
     330,   331,    -1,   333,    -1,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,    -1,    -1,   348,   349,
      -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,    -1,
     360,    -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,
     370,   371,   372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   385,   386,    -1,    -1,   389,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,    -1,    -1,    -1,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,    -1,    -1,
     440,    -1,   442,   443,    -1,   445,    -1,    -1,    -1,   449,
      -1,    -1,   452,   453,   454,   455,   456,    -1,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,    -1,   468,   469,
      -1,   471,    -1,    -1,    -1,    -1,   476,   477,   478,    -1,
      -1,    -1,    -1,   483,    -1,    -1,    -1,   487,    -1,    -1,
     490,    -1,   492,    -1,   494,    -1,    -1,   497,   498,    -1,
      -1,    -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,
      -1,   511,    -1,    -1,   514,    -1,    -1,   517,    -1,   519,
     520,   521,   522,   523,    -1,    -1,    -1,    -1,   528,    -1,
     530,   531,   532,   533,   534,   535,    -1,    -1,   538,   539,
     540,   541,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,    -1,   557,   558,   559,
     560,   561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,
     570,   571,    -1,   573,   574,    -1,    -1,    -1,    -1,   579,
     580,   581,    -1,   583,   584,    -1,   586,   587,    -1,    -1,
      -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,
     600,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,
      -1,    -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,    -1,
     630,    -1,   632,    -1,     5,   635,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,
      -1,    -1,    -1,    24,    25,    26,    27,    28,    -1,    -1,
      31,    -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,
      -1,    42,    43,    44,    -1,    46,    -1,    -1,    -1,    -1,
      -1,    52,    53,    -1,    55,    56,    -1,    58,    59,    -1,
      -1,    -1,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    -1,    73,    74,    -1,    76,    77,    -1,    79,    -1,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,    -1,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,    -1,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,    -1,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
     181,   182,   183,   184,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   192,    -1,   194,    -1,   196,    -1,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,    -1,    -1,   210,
      -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,
     221,   222,   223,   224,    -1,   226,   227,   228,    -1,   230,
      -1,   232,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,
     251,    -1,    -1,   254,    -1,    -1,    -1,   258,    -1,    -1,
     261,   262,    -1,   264,   265,    -1,    -1,    -1,    -1,    -1,
     271,   272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,
      -1,    -1,    -1,   284,    -1,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,    -1,
     311,   312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,
      -1,   322,   323,   324,   325,   326,   327,    -1,    -1,   330,
     331,    -1,   333,    -1,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,    -1,    -1,   348,   349,    -1,
      -1,   352,   353,   354,   355,    -1,    -1,    -1,    -1,   360,
      -1,    -1,    -1,   364,    -1,   366,   367,   368,    -1,   370,
     371,   372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,   386,    -1,    -1,   389,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
      -1,    -1,    -1,   404,   405,    -1,   407,    -1,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,    -1,   420,
      -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,    -1,   437,    -1,    -1,   440,
      -1,   442,   443,    -1,   445,    -1,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,    -1,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,    -1,
     471,    -1,    -1,    -1,    -1,   476,   477,   478,    -1,    -1,
      -1,    -1,   483,    -1,    -1,    -1,   487,    -1,    -1,   490,
      -1,   492,    -1,   494,    -1,    -1,   497,   498,    -1,    -1,
      -1,    -1,    -1,   504,   505,   506,    -1,   508,   509,    -1,
     511,    -1,    -1,   514,    -1,    -1,   517,    -1,   519,   520,
     521,   522,   523,    -1,    -1,    -1,    -1,   528,    -1,   530,
     531,   532,   533,   534,   535,    -1,    -1,   538,   539,   540,
     541,    -1,   543,   544,    -1,    -1,   547,   548,   549,   550,
     551,    -1,    -1,   554,   555,    -1,   557,   558,   559,   560,
     561,    -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,
     571,    -1,   573,   574,    -1,    -1,    -1,    -1,   579,   580,
     581,    -1,   583,   584,    -1,   586,   587,    -1,    -1,    -1,
      -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,
     601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,
      -1,   612,    -1,    -1,    -1,   616,   617,   618,   619,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,    -1,   630,
      -1,   632,    -1,     5,   635,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    -1,    -1,    31,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      42,    43,    44,    -1,    46,    -1,    -1,    -1,    -1,    -1,
      52,    53,    -1,    55,    56,    -1,    58,    59,    -1,    -1,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      -1,    73,    74,    -1,    76,    77,    -1,    79,    -1,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      -1,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,    -1,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
      -1,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,    -1,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     192,    -1,   194,    -1,   196,    -1,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,    -1,    -1,   210,    -1,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,   228,    -1,   230,    -1,
     232,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,    -1,    -1,    -1,   246,   247,    -1,   249,   250,   251,
      -1,    -1,   254,    -1,    -1,    -1,   258,    -1,    -1,   261,
     262,    -1,   264,   265,    -1,    -1,    -1,    -1,    -1,   271,
     272,    -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,
      -1,    -1,   284,    -1,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,    -1,   311,
     312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,
     322,   323,   324,   325,   326,   327,    -1,    -1,   330,   331,
      -1,   333,    -1,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,
     352,   353,   354,   355,    -1,    -1,    -1,    -1,   360,    -1,
      -1,    -1,   364,    -1,   366,   367,   368,    -1,   370,   371,
     372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   385,   386,    -1,    -1,   389,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,    -1,
      -1,    -1,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,    -1,    -1,   440,    -1,
     442,   443,    -1,   445,    -1,    -1,    -1,   449,    -1,    -1,
     452,   453,   454,   455,   456,    -1,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,    -1,   471,
      -1,    -1,    -1,    -1,   476,   477,   478,    -1,    -1,    -1,
      -1,   483,    -1,    -1,    -1,   487,    -1,    -1,   490,    -1,
     492,    -1,   494,    -1,    -1,   497,   498,    -1,    -1,    -1,
      -1,    -1,   504,   505,   506,    -1,   508,   509,    -1,   511,
      -1,    -1,   514,    -1,    -1,   517,    -1,   519,   520,   521,
     522,   523,    -1,    -1,    -1,    -1,   528,    -1,   530,   531,
     532,   533,   534,   535,    -1,    -1,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,    -1,   557,   558,   559,   560,   561,
      -1,    -1,    -1,    -1,   566,   567,   568,   569,   570,   571,
      -1,   573,   574,    -1,    -1,    -1,    -1,   579,   580,   581,
      -1,   583,   584,    -1,   586,   587,    -1,    -1,    -1,    -1,
      -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,
     602,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,
     612,    -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,    -1,   630,    -1,
     632,    -1,     5,   635,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    19,    -1,    -1,    -1,
      -1,    24,    25,    26,    27,    28,    -1,    -1,    31,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,
      43,    44,    -1,    46,    -1,    -1,    -1,    -1,    -1,    52,
      53,    -1,    55,    56,    -1,    58,    59,    -1,    -1,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    -1,
      73,    74,    -1,    76,    77,    -1,    79,    -1,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    -1,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,    -1,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,    -1,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,   181,   182,
     183,   184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,
      -1,   194,    -1,   196,    -1,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,    -1,    -1,   210,    -1,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,   220,   221,   222,
     223,   224,    -1,   226,   227,   228,    -1,   230,    -1,   232,
      -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
      -1,    -1,    -1,   246,   247,    -1,   249,   250,   251,    -1,
      -1,   254,    -1,    -1,    -1,   258,    -1,    -1,   261,   262,
      -1,   264,   265,    -1,    -1,    -1,    -1,    -1,   271,   272,
      -1,   274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,
      -1,   284,    -1,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,    -1,   311,   312,
     313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,
     323,   324,   325,   326,   327,    -1,    -1,   330,   331,    -1,
     333,    -1,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,
     353,   354,   355,    -1,    -1,    -1,    -1,   360,    -1,    -1,
      -1,   364,    -1,   366,   367,   368,    -1,   370,   371,   372,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,   386,    -1,    -1,   389,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,    -1,    -1,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,    -1,    -1,   440,    -1,   442,
     443,    -1,   445,    -1,    -1,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,    -1,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,    -1,   471,    -1,
      -1,    -1,    -1,   476,   477,   478,    -1,    -1,    -1,    -1,
     483,    -1,    -1,    -1,   487,    -1,    -1,   490,    -1,   492,
      -1,   494,    -1,    -1,   497,   498,    -1,    -1,    -1,    -1,
      -1,   504,   505,   506,    -1,   508,   509,    -1,   511,    -1,
      -1,   514,    -1,    -1,   517,    -1,   519,   520,   521,   522,
     523,    -1,    -1,    -1,    -1,   528,    -1,   530,   531,   532,
     533,   534,   535,    -1,    -1,   538,   539,   540,   541,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,    -1,
      -1,   554,   555,    -1,   557,   558,   559,   560,   561,    -1,
      -1,    -1,    -1,   566,   567,   568,   569,   570,   571,    -1,
     573,   574,    -1,    -1,    -1,    -1,   579,   580,   581,    -1,
     583,   584,    -1,   586,   587,    -1,    -1,    -1,    -1,    -1,
     593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,
      -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,
      -1,    -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,    -1,   630,    -1,   632,
      -1,     5,   635,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    19,    -1,    -1,    -1,    -1,
      24,    25,    26,    27,    28,    -1,    -1,    31,    -1,    -1,
      -1,    35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
      44,    -1,    46,    -1,    -1,    -1,    -1,    -1,    52,    53,
      -1,    55,    56,    -1,    58,    59,    -1,    -1,    -1,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    -1,    73,
      74,    -1,    76,    77,    -1,    79,    -1,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    -1,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,    -1,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,    -1,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,   181,   182,   183,
     184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,
     194,    -1,   196,    -1,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,   221,   222,   223,
     224,    -1,   226,   227,   228,    -1,   230,    -1,   232,    -1,
      -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,   246,   247,    -1,   249,   250,   251,    -1,    -1,
     254,    -1,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,
     264,   265,    -1,    -1,    -1,    -1,    -1,   271,   272,    -1,
     274,    -1,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,
     284,    -1,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,    -1,   311,   312,   313,
     314,    -1,   316,   317,    -1,    -1,    -1,    -1,   322,   323,
     324,   325,   326,   327,    -1,    -1,   330,   331,    -1,   333,
      -1,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,    -1,    -1,   352,   353,
     354,   355,    -1,    -1,    -1,    -1,   360,    -1,    -1,    -1,
     364,    -1,   366,   367,   368,    -1,   370,   371,   372,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   385,   386,    -1,    -1,   389,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,    -1,    -1,    -1,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,    -1,    -1,   440,    -1,   442,   443,
      -1,   445,    -1,    -1,    -1,   449,    -1,    -1,   452,   453,
     454,   455,   456,    -1,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,    -1,   471,    -1,    -1,
      -1,    -1,   476,   477,   478,    -1,    -1,    -1,    -1,   483,
      -1,    -1,    -1,   487,    -1,    -1,   490,    -1,   492,    -1,
     494,    -1,    -1,   497,   498,    -1,    -1,    -1,    -1,    -1,
     504,   505,   506,    -1,   508,   509,    -1,   511,    -1,    -1,
     514,    -1,    -1,   517,    -1,   519,   520,   521,   522,   523,
      -1,    -1,    -1,    -1,   528,    -1,   530,   531,   532,   533,
     534,   535,    -1,    -1,   538,   539,   540,   541,    -1,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,    -1,   557,   558,   559,   560,   561,    -1,    -1,
      -1,    -1,   566,   567,   568,   569,   570,   571,    -1,   573,
     574,    -1,    -1,    -1,    -1,   579,   580,   581,    -1,   583,
     584,    -1,   586,   587,    -1,    -1,    -1,    -1,    -1,   593,
      -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,    -1,
      -1,    -1,    -1,    -1,    -1,   609,    -1,    -1,   612,    -1,
      -1,    -1,   616,   617,   618,   619,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,    -1,   630,    -1,   632,    -1,
       5,   635,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    19,    -1,    -1,    -1,    -1,    24,
      25,    26,    27,    28,    -1,    -1,    31,    -1,    -1,    -1,
      35,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,
      -1,    46,    -1,    -1,    -1,    -1,    -1,    52,    53,    -1,
      55,    56,    -1,    58,    59,    -1,    -1,    -1,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    -1,    73,    74,
      -1,    76,    77,    -1,    79,    -1,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    -1,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,    -1,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,    -1,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,    -1,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,   181,   182,   183,   184,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,   194,
      -1,   196,    -1,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,   220,   221,   222,   223,   224,
      -1,   226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,   246,   247,    -1,   249,   250,   251,    -1,    -1,   254,
      -1,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,   264,
     265,    -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,
      -1,   276,    -1,   278,   279,    -1,    -1,    -1,    -1,   284,
      -1,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,    -1,   311,   312,   313,   314,
      -1,   316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,
     325,   326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,    -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,
     355,    -1,    -1,    -1,    -1,   360,    -1,    -1,    -1,   364,
      -1,   366,   367,   368,    -1,   370,   371,   372,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     385,   386,    -1,    -1,   389,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,    -1,    -1,    -1,   404,
     405,    -1,   407,    -1,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,    -1,   437,    -1,    -1,   440,    -1,   442,   443,    -1,
     445,    -1,    -1,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,    -1,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,    -1,   471,    -1,    -1,    -1,
      -1,   476,   477,   478,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,   487,    -1,    -1,   490,    -1,   492,    -1,   494,
      -1,    -1,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,
     505,   506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,
      -1,    -1,   517,    -1,   519,   520,   521,   522,   523,    -1,
      -1,    -1,    -1,   528,    -1,   530,   531,   532,   533,   534,
     535,    -1,    -1,   538,   539,   540,   541,    -1,   543,   544,
      -1,    -1,   547,   548,   549,   550,   551,    -1,    -1,   554,
     555,    -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,
      -1,   566,   567,   568,   569,   570,   571,    -1,   573,   574,
      -1,    -1,    -1,    -1,   579,   580,   581,    -1,   583,   584,
      -1,   586,   587,    -1,    -1,    -1,    -1,    -1,   593,    -1,
      -1,   596,    -1,    -1,    -1,   600,   601,   602,    -1,    -1,
      -1,    -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,
      -1,   616,   617,   618,   619,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,    -1,   630,    -1,   632,    -1,     5,
     635,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    19,    -1,    -1,    -1,    -1,    24,    25,
      26,    27,    28,    -1,    -1,    31,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
      46,    -1,    -1,    -1,    -1,    -1,    52,    53,    -1,    55,
      56,    -1,    58,    59,    -1,    -1,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    -1,    73,    74,    -1,
      76,    77,    -1,    79,    -1,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    -1,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,    -1,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,    -1,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,    -1,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,   181,   182,   183,   184,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,   194,    -1,
     196,    -1,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,
     246,   247,    -1,   249,   250,   251,    -1,    -1,   254,    -1,
      -1,    -1,   258,    -1,    -1,   261,   262,    -1,   264,   265,
      -1,    -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,
     276,    -1,   278,   279,    -1,    -1,    -1,    -1,   284,    -1,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,    -1,   311,   312,   313,   314,    -1,
     316,   317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,
     326,   327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
      -1,    -1,   348,   349,    -1,    -1,   352,   353,   354,   355,
      -1,    -1,    -1,    -1,   360,    -1,    -1,    -1,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,
     386,    -1,    -1,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,    -1,    -1,    -1,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,    -1,    -1,   440,    -1,   442,   443,    -1,   445,
      -1,    -1,    -1,   449,    -1,    -1,   452,   453,   454,   455,
     456,    -1,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,    -1,   468,   469,    -1,   471,    -1,    -1,    -1,    -1,
     476,   477,   478,    -1,    -1,    -1,    -1,   483,    -1,    -1,
      -1,   487,    -1,    -1,   490,    -1,   492,    -1,   494,    -1,
      -1,   497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,
     506,    -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,
      -1,   517,    -1,   519,   520,   521,   522,   523,    -1,    -1,
      -1,    -1,   528,    -1,   530,   531,   532,   533,   534,   535,
      -1,    -1,   538,   539,   540,   541,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
      -1,   557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,
     566,   567,   568,   569,   570,   571,    -1,   573,   574,    -1,
      -1,    -1,    -1,   579,   580,   581,    -1,   583,   584,    -1,
     586,   587,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,
     596,    -1,    -1,    -1,   600,   601,   602,    -1,    -1,    -1,
      -1,    -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,
     616,   617,   618,   619,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,    -1,   630,    -1,   632,    -1,     5,   635,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    -1,    -1,    -1,    24,    25,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
      -1,    -1,    -1,    -1,    -1,    52,    -1,    -1,    55,    56,
      -1,    58,    59,    -1,    -1,    -1,    -1,    64,    65,    66,
      67,    -1,    -1,    70,    71,    -1,    73,    74,    -1,    76,
      77,    -1,    79,    -1,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    -1,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,    -1,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,    -1,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,    -1,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   192,    -1,   194,    -1,   196,
      -1,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,    -1,    -1,   210,    -1,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,    -1,   230,    -1,   232,    -1,    -1,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,   246,
     247,    -1,   249,   250,    -1,    -1,    -1,   254,    -1,    -1,
      -1,   258,    -1,    -1,   261,    -1,    -1,   264,   265,    -1,
      -1,    -1,    -1,    -1,   271,   272,    -1,   274,    -1,   276,
      -1,   278,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,    -1,   311,   312,   313,   314,    -1,   316,
     317,    -1,    -1,    -1,    -1,   322,   323,   324,   325,   326,
     327,    -1,    -1,   330,   331,    -1,   333,    -1,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,    -1,
      -1,   348,   349,    -1,    -1,   352,   353,   354,   355,    -1,
      -1,    -1,    -1,   360,    -1,    -1,    -1,   364,    -1,   366,
     367,   368,    -1,   370,   371,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,   386,
      -1,    -1,   389,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,    -1,    -1,    -1,   404,   405,    -1,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,    -1,
     437,    -1,    -1,   440,    -1,   442,    -1,    -1,   445,    -1,
      -1,    -1,   449,    -1,    -1,   452,   453,   454,    -1,   456,
      -1,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,    -1,   471,    -1,    -1,    -1,    -1,   476,
     477,   478,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,
     487,    -1,    -1,   490,    -1,   492,    -1,   494,    -1,    -1,
     497,   498,    -1,    -1,    -1,    -1,    -1,   504,   505,   506,
      -1,   508,   509,    -1,   511,    -1,    -1,   514,    -1,    -1,
     517,    -1,   519,   520,   521,   522,   523,    -1,    -1,    -1,
      -1,   528,    -1,   530,   531,   532,   533,   534,   535,    -1,
      -1,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,    -1,
     557,   558,   559,   560,   561,    -1,    -1,    -1,    -1,   566,
     567,   568,   569,   570,   571,    -1,   573,   574,    -1,    -1,
      -1,    -1,   579,   580,   581,    -1,   583,   584,    -1,   586,
     587,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,
      -1,    -1,    -1,   600,   601,   602,    -1,    -1,    -1,    -1,
      -1,    -1,   609,    -1,    -1,   612,    -1,    -1,    -1,   616,
     617,   618,   619,   620,    -1,    -1,    -1,    -1,    -1,    -1,
     627,    -1,    -1,   630,    -1,   632,    -1,    -1,   635
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    13,    15,    31,    35,    49,    50,    57,    62,    63,
      80,    98,   120,   129,   130,   131,   142,   143,   155,   169,
     187,   202,   204,   209,   212,   236,   238,   256,   273,   277,
     373,   390,   403,   414,   436,   439,   441,   444,   447,   448,
     457,   459,   467,   473,   481,   486,   488,   518,   527,   578,
     590,   594,   597,   603,   631,   646,   657,   660,   661,   662,
     663,   664,   666,   671,   673,   680,   713,   740,   747,   748,
     867,  1036,  1078,  1080,  1094,  1097,  1102,  1104,  1105,  1110,
    1113,  1118,  1125,  1137,  1138,  1296,  1298,  1313,  1316,  1341,
    1349,  1360,  1367,  1381,  1385,  1388,  1398,  1404,  1409,  1411,
    1412,  1464,  1494,  1501,  1503,  1510,  1513,  1540,  1546,  1547,
    1548,  1549,  1606,  1614,  1615,    11,   107,   126,   196,   225,
     278,   408,   479,   544,   600,  1074,  1571,  1572,  1573,  1576,
     274,   361,  1112,  1541,   553,  1455,   229,     5,     7,     8,
       9,    10,    11,    14,    18,    19,    22,    24,    25,    26,
      27,    28,    29,    31,    35,    39,    42,    43,    44,    46,
      48,    49,    52,    55,    56,    58,    59,    60,    62,    64,
      65,    66,    67,    68,    70,    71,    73,    74,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    86,    87,    89,
      90,    91,    92,    93,    97,   100,   102,   105,   109,   110,
     111,   114,   119,   120,   125,   126,   128,   132,   134,   135,
     136,   137,   138,   142,   145,   146,   147,   151,   153,   154,
     156,   157,   158,   161,   162,   164,   165,   166,   167,   168,
     169,   172,   173,   174,   175,   176,   179,   180,   182,   183,
     184,   187,   191,   192,   194,   196,   198,   199,   200,   201,
     203,   205,   209,   210,   212,   215,   216,   220,   221,   222,
     223,   226,   227,   228,   230,   232,   237,   238,   242,   246,
     247,   249,   250,   254,   257,   258,   261,   264,   265,   271,
     272,   274,   276,   278,   279,   287,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   307,   308,   309,   311,   312,   313,   314,
     316,   317,   322,   323,   324,   325,   326,   327,   330,   331,
     333,   335,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   348,   349,   352,   353,   354,   355,   359,   360,   364,
     366,   367,   368,   370,   371,   372,   374,   384,   385,   386,
     388,   389,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   403,   404,   405,   407,   409,   410,   411,   412,
     413,   415,   416,   417,   420,   424,   425,   426,   427,   428,
     431,   432,   433,   434,   435,   437,   438,   440,   441,   442,
     445,   447,   449,   450,   452,   453,   454,   456,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   471,
     472,   476,   477,   478,   479,   483,   487,   489,   490,   491,
     492,   494,   495,   496,   497,   498,   504,   505,   506,   508,
     509,   511,   514,   517,   518,   519,   520,   521,   522,   523,
     527,   528,   530,   531,   532,   533,   534,   535,   538,   539,
     540,   541,   543,   544,   547,   548,   549,   550,   551,   554,
     555,   557,   558,   559,   560,   561,   566,   567,   568,   569,
     570,   571,   573,   574,   578,   579,   580,   581,   583,   584,
     586,   587,   589,   590,   593,   596,   598,   600,   601,   602,
     609,   612,   616,   617,   618,   619,   620,   627,   628,   630,
     631,   632,   635,   707,  1453,  1458,  1462,  1463,   307,   543,
     546,  1497,  1497,   627,  1542,    69,   107,   195,   278,   479,
     499,   544,   550,   592,   600,   689,   690,   919,   920,   921,
    1010,  1011,  1012,  1013,  1014,  1015,  1016,  1350,  1297,   107,
     166,   196,   229,   278,   408,   479,   544,   550,   575,   600,
     616,  1309,  1458,  1112,   102,   749,   706,   654,  1450,  1452,
    1458,   672,  1314,   396,    86,   416,  1410,   110,   229,   632,
    1417,    35,   543,  1495,  1497,  1112,   868,  1458,  1405,   467,
     600,  1497,  1112,  1317,  1399,   502,   737,   741,   742,  1458,
     706,  1542,  1458,  1141,  1143,  1144,   519,  1465,  1368,   741,
     491,   573,   491,   546,  1362,   396,    35,  1497,  1502,  1342,
    1458,    31,    80,   153,   403,   425,   459,   518,  1608,   473,
     646,  1139,     0,   155,   658,   403,   175,   191,   391,  1386,
    1450,  1458,   159,  1048,  1458,   159,   707,   206,   707,   266,
    1455,  1458,  1460,   815,   816,   819,   842,  1458,   706,   546,
    1042,  1154,  1571,  1497,  1542,  1119,   714,   654,   565,  1095,
    1106,    17,  1543,   224,   922,   206,  1460,   817,   842,   706,
     380,  1568,  1572,  1573,  1574,  1575,  1576,   546,   920,   229,
    1014,  1013,   229,   229,   225,   285,   417,  1358,  1359,     7,
      22,    28,    34,    36,    37,    38,    40,    53,    54,    60,
      61,    70,    73,    92,    95,    96,   101,   103,   106,   107,
     112,   113,   114,   119,   121,   124,   170,   177,   178,   185,
     191,   199,   201,   207,   213,   220,   224,   236,   239,   263,
     271,   282,   310,   315,   326,   330,   332,   336,   337,   338,
     339,   340,   347,   356,   357,   358,   362,   363,   368,   387,
     393,   398,   399,   401,   415,   443,   444,   456,   458,   464,
     465,   471,   525,   526,   532,   536,   537,   542,   553,   558,
     559,   560,   561,   576,   577,   578,   582,   585,   600,   605,
     606,   607,   608,   613,   615,   619,   620,   635,   639,   640,
     645,   646,   649,   650,   653,   654,   971,  1158,  1159,  1160,
    1161,  1165,  1168,  1169,  1170,  1171,  1172,  1173,  1181,  1185,
    1197,  1436,  1438,  1440,  1441,  1442,  1446,  1448,  1453,  1458,
     224,  1308,  1308,  1308,  1458,   206,  1308,  1308,   842,  1308,
     706,  1308,  1497,   667,  1389,   134,  1514,  1458,   372,    68,
     421,   654,  1460,   127,   214,   285,  1319,  1458,  1158,   240,
    1413,   190,   190,  1496,  1497,    47,   869,   193,    19,    34,
      59,   307,  1373,  1406,  1458,   706,  1114,  1497,   127,   285,
    1320,  1348,    59,   307,   416,   491,  1400,  1401,   609,   738,
     481,   743,  1511,   565,  1543,  1142,    12,   139,   214,   507,
     508,   509,   510,   511,   512,   529,  1148,  1149,  1150,  1567,
    1466,    60,    61,   124,   203,   274,   343,   393,   478,   573,
     653,   973,  1458,  1468,  1480,  1484,  1486,    35,    60,    67,
      73,    96,    98,   108,   157,   162,   165,   194,   196,   203,
     205,   228,   229,   230,   253,   274,   307,   372,   397,   407,
     408,   411,   412,   432,   478,   491,   528,   546,   547,   557,
     601,   618,   973,  1009,  1369,  1373,  1374,  1376,  1481,   743,
     435,   514,  1089,  1090,  1091,   421,   624,  1081,  1082,  1083,
    1089,  1361,  1458,  1348,    36,   213,   553,  1437,  1456,  1607,
    1607,  1607,  1607,  1607,  1143,  1139,   647,   652,  1458,   159,
    1383,  1382,   324,   551,   584,  1038,   598,   103,  1460,  1461,
    1040,   821,   843,  1458,  1039,   374,     6,    57,   143,   357,
     420,   422,   844,  1044,  1461,  1450,   513,  1577,  1578,   166,
    1041,  1103,  1120,  1121,  1122,  1123,  1450,   646,   715,  1458,
     674,  1303,  1304,  1450,  1303,    56,   359,   359,   436,  1544,
     356,   357,  1164,  1458,   820,   843,   189,     6,  1461,  1530,
    1531,   444,    10,   408,   575,   693,  1154,  1570,  1578,  1590,
    1594,  1595,  1601,   693,  1154,  1569,  1578,  1590,  1595,  1601,
    1571,  1576,   922,  1458,  1458,  1458,   193,  1351,  1355,  1356,
    1458,  1358,   646,   646,   646,  1168,   646,   646,   646,  1158,
    1200,   646,   646,   646,   646,   646,   646,   646,   646,   646,
    1157,  1157,   646,   960,   646,   646,   646,   553,   646,   646,
     646,   646,   646,   646,   646,   646,   646,   646,   646,   646,
     646,  1158,   646,   646,   646,  1198,  1199,  1446,  1458,   646,
     646,   646,   646,   646,   646,   646,   646,   646,  1158,   960,
     646,   646,   646,   646,   646,   646,   646,   646,   646,   646,
     646,   646,   646,   646,   646,   646,   646,   646,   960,   553,
     646,   646,   646,   553,   646,   646,   646,    36,   213,   553,
     646,  1157,   960,   960,   646,   646,   646,   646,   646,   646,
    1168,  1168,  1168,  1158,  1562,  1563,  1458,  1186,  1458,    16,
      17,   377,   380,   633,  1162,  1163,   159,   160,   197,   208,
     248,   259,   286,   350,  1166,    32,   140,   243,   267,   336,
     430,   484,   485,   497,   637,   638,   639,   640,   641,   642,
     643,   644,  1164,  1168,    72,   379,   648,  1456,   646,   654,
     170,  1458,   707,  1458,   369,   843,   707,  1460,   360,   617,
     853,   854,  1310,  1311,  1312,  1374,   707,  1461,  1529,  1302,
    1308,   604,   668,    34,    59,    67,   132,   157,   161,   198,
     216,   230,   279,   407,   416,   431,   449,   492,   523,   547,
     557,   601,  1390,  1395,  1396,  1497,    85,   653,   750,   751,
     752,   753,  1458,    12,    13,    98,   129,   143,   166,   169,
     182,   204,   229,   236,   277,   409,   413,   429,   437,   445,
     473,   486,   487,   538,   575,   597,   599,  1515,  1517,  1519,
    1520,    20,   159,  1252,  1253,  1504,  1458,  1074,   496,    49,
      84,   285,  1419,    29,    29,  1450,  1498,  1499,  1111,   269,
     272,   418,   870,   872,   653,   665,  1455,   279,    30,   279,
    1115,  1461,  1116,  1117,  1450,  1098,   240,  1305,  1321,  1322,
    1450,    49,  1402,   648,  1456,    55,    65,    77,    89,    90,
      91,   105,   325,   342,   469,   531,   549,   744,   746,    12,
     413,  1512,  1517,   467,  1545,  1544,   591,  1550,  1551,   641,
    1152,  1153,  1154,  1150,  1467,  1483,  1486,   481,   654,    34,
     124,   159,   482,   974,   975,  1332,  1460,   190,  1332,  1470,
     653,  1460,    34,   124,   977,   978,  1460,   654,  1471,  1469,
    1332,   165,   267,   622,  1380,  1380,   646,   107,   166,   196,
     408,   546,   575,   616,  1380,    12,   931,  1460,   268,  1271,
    1273,   193,   243,  1375,  1377,    71,   523,   190,  1380,   523,
     543,    71,   523,    12,    42,    93,    97,   247,   323,   386,
     498,   540,  1363,  1364,  1365,   165,   216,   523,   523,  1380,
    1380,  1380,  1271,  1380,  1377,   279,   156,    74,   410,   543,
     574,   523,   612,  1079,   648,   371,   629,    87,   648,  1304,
    1074,   648,   370,  1610,   539,  1611,   252,   452,  1609,   647,
    1551,  1553,  1555,  1556,   155,   659,  1460,  1137,  1313,  1316,
    1341,  1349,  1384,  1387,  1437,  1458,   124,   917,   918,   928,
     929,   982,   110,  1157,   653,   708,     6,   822,   708,   646,
     109,   839,   839,   839,     4,   648,   393,  1037,   472,   616,
     707,  1578,  1303,   243,   648,   390,  1131,  1133,  1134,   716,
     717,  1158,   226,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   308,   309,   433,   434,   675,   676,   679,   175,
     417,   648,  1096,    58,   175,   179,   190,   322,   417,  1107,
    1108,  1109,    56,   436,   170,   688,   822,   110,   839,   222,
     648,  1154,  1154,  1154,   166,   196,   196,  1578,  1450,  1017,
    1018,  1017,  1017,  1306,  1307,  1450,  1451,  1458,   648,  1353,
     654,  1357,  1158,  1158,    12,   139,  1193,  1254,  1193,  1193,
    1193,   621,  1202,  1158,  1158,  1197,  1197,  1158,  1158,  1158,
     139,  1193,  1254,   647,   363,   647,   647,  1158,  1158,  1158,
    1158,  1446,  1562,   115,   116,   117,   118,   119,   217,   218,
     219,   220,   326,   328,   329,   330,   337,   415,   470,   471,
     619,   634,   635,  1249,  1250,  1158,  1197,   111,   114,   558,
     561,  1251,   139,  1188,  1158,  1158,  1158,  1158,  1249,  1158,
    1197,  1199,     9,   648,   654,   139,  1193,  1158,  1158,   139,
    1193,  1158,  1158,  1197,  1197,  1197,  1158,  1158,  1158,  1197,
    1161,  1158,  1158,  1158,  1158,  1158,  1158,   647,  1158,  1193,
    1193,  1158,  1158,   139,  1193,  1158,  1250,  1250,  1158,    45,
     260,   572,  1158,  1158,   647,  1447,  1448,  1458,  1193,  1193,
    1158,  1158,  1158,   647,   648,   647,   473,   646,  1559,  1560,
    1158,   653,  1187,  1460,   654,  1158,  1158,  1158,  1160,   178,
     362,   577,   593,  1164,    12,    18,  1160,  1167,  1161,  1161,
     646,  1168,  1161,  1161,  1161,  1161,   267,  1161,  1161,   239,
    1161,   239,  1161,  1161,  1161,  1161,  1161,    32,   243,   267,
     430,  1460,  1168,  1158,  1174,  1458,   654,  1450,  1310,   648,
    1312,   157,   648,  1303,  1299,   653,   669,   670,   279,   279,
     279,   279,    49,   279,   279,   648,  1391,   114,   558,   561,
     745,   755,  1185,  1440,  1446,  1460,   648,   159,   407,  1518,
     461,   461,   544,   550,   600,   616,   375,  1522,   543,   369,
    1524,    66,   491,  1521,   108,   616,  1523,   369,   648,  1458,
     183,   353,  1458,  1505,  1506,  1321,  1455,  1126,   274,  1418,
    1253,   648,  1303,    74,   646,   877,   878,   877,   878,   391,
     880,   210,   255,  1460,    30,   565,  1408,   121,   185,   282,
     363,   582,  1280,  1281,  1282,    30,   565,  1407,   648,   565,
     648,   565,  1303,  1322,  1318,   390,  1216,  1217,    12,  1403,
    1401,   648,   159,  1518,   369,   369,  1458,    12,   139,  1558,
     648,  1145,  1158,  1444,  1458,   190,   648,  1332,  1458,    72,
     980,  1158,  1461,   368,   393,   553,  1492,   249,   421,  1487,
    1488,  1489,  1490,   203,   274,   478,  1482,  1332,  1458,   573,
    1472,  1483,   648,  1474,  1485,   243,  1378,  1455,  1158,   641,
     922,   707,   707,   707,  1450,   707,  1450,   279,   341,   523,
    1372,  1372,   282,   363,   582,  1274,  1275,  1438,  1458,  1380,
    1458,   707,  1380,  1461,  1375,   707,  1380,   246,   541,   180,
     190,  1366,   648,  1378,   524,  1375,  1450,  1377,  1375,  1375,
    1380,  1380,   596,  1092,  1091,   494,  1083,   473,   646,   650,
    1203,  1204,  1205,  1206,  1207,  1218,  1219,  1233,  1437,   394,
    1612,   378,  1267,  1273,  1557,   918,    72,   973,   135,  1460,
      78,    92,   257,   334,   359,   419,   513,   710,   712,   426,
     586,   840,   841,   232,   836,   837,   838,   845,   853,   854,
     107,   215,   384,   393,   400,   495,   600,   691,   692,  1455,
      25,   314,   830,   831,   832,   845,   846,   847,   853,   854,
     823,   824,   830,  1461,   173,     6,    11,    13,    15,    26,
      27,    57,    62,    63,    70,    78,    86,    95,   110,   128,
     136,   137,   143,   151,   157,   168,   188,   227,   229,   237,
     254,   277,   313,   331,   335,   373,   378,   385,   390,   393,
     424,   438,   439,   440,   441,   463,   520,   521,   522,   528,
     544,   548,   578,   591,   864,   924,   926,   928,   929,  1049,
    1053,  1055,  1058,  1064,  1065,  1066,  1071,  1072,  1263,   126,
     242,  1450,  1043,   124,  1124,  1458,  1122,  1450,   866,  1133,
     229,   255,  1007,  1135,   647,   648,   159,   159,   159,   159,
     159,   159,   159,   159,   159,   159,   159,   159,   159,   159,
     159,   159,   159,   159,   159,   159,   159,   159,   159,   159,
     648,  1304,   598,  1108,   916,   917,    78,   354,   427,   587,
     833,   834,   835,   845,   849,   850,   851,   852,   853,   854,
     628,   603,   818,    47,   624,  1531,   196,   707,   707,   922,
     707,  1458,   681,   580,   604,  1025,   369,   369,   369,   648,
    1354,  1216,   654,  1357,  1356,   193,   641,  1458,   648,   647,
    1193,   647,  1194,   647,   647,   647,  1158,   149,   621,  1201,
      20,   647,   604,   647,   647,   647,   648,   604,   648,  1182,
     647,   641,   647,   648,   648,   647,   647,   647,   647,   193,
     648,   647,   648,  1184,   647,   648,   648,   648,   640,   648,
     647,   647,   646,  1446,  1458,  1193,   647,   647,   647,  1193,
     647,   648,   647,   647,   647,   647,   647,   647,   648,   647,
     243,   647,   648,   648,   647,   648,   648,   647,   647,   647,
     648,   193,   648,  1193,   647,   647,   648,   648,   648,   647,
     193,  1158,   193,  1158,   193,  1158,   193,   647,   648,   647,
     647,   647,   647,   648,    20,   265,   648,   997,   647,  1197,
    1223,  1224,  1225,   473,   646,  1140,  1554,  1555,   591,  1564,
     651,  1482,   482,  1458,   178,   362,   577,   593,   646,    17,
    1158,  1562,   164,  1259,  1161,  1158,  1158,  1161,   646,  1168,
    1161,  1154,  1178,  1179,  1180,   646,   654,  1458,  1300,  1312,
    1332,  1333,  1461,    51,   451,  1075,  1303,  1460,   648,  1396,
    1303,  1397,   753,   756,   757,   752,   364,   465,   754,   543,
     646,  1532,  1461,  1532,  1532,  1532,   196,   408,   546,  1516,
    1520,   159,   183,   197,   208,   258,   259,   286,   353,   405,
    1507,  1509,   622,  1255,  1315,  1127,  1128,  1129,  1130,  1450,
     231,   285,   421,   629,  1500,  1499,   646,  1154,   213,   282,
     363,   582,  1278,  1281,   535,   881,   871,    11,   873,  1158,
    1455,  1158,  1455,  1461,  1461,  1117,  1450,   175,   417,   602,
    1099,  1100,  1101,   473,   481,   608,   609,   646,   912,  1323,
    1326,   646,   746,   745,   648,  1461,   196,   408,  1516,  1552,
    1153,   193,   240,  1146,  1147,  1266,  1267,  1291,  1155,  1155,
     654,   661,  1483,    12,    34,   124,   369,  1158,  1493,   124,
     979,   981,  1460,  1332,   646,   646,   265,   371,   629,   648,
     648,   654,   654,   654,  1486,  1158,  1487,  1473,  1475,  1476,
    1493,  1455,   193,  1379,   647,  1458,   367,   648,  1380,   416,
    1271,  1365,  1379,  1380,  1375,  1450,  1380,  1380,   504,   505,
     506,   679,  1093,   600,  1084,  1085,   193,  1232,  1458,    99,
     233,   252,   263,   346,   458,   529,  1215,   481,   648,  1450,
    1232,   648,   190,  1613,    47,  1271,  1333,  1333,   344,  1455,
     513,   513,   513,   513,   513,   472,  1455,  1455,  1333,   648,
     838,  1455,  1455,  1455,  1455,   121,   185,   213,   282,   363,
     582,  1277,  1455,  1455,   647,   648,  1333,  1333,   648,   832,
     825,   826,   845,   846,   847,   393,    75,    88,   390,   940,
     943,   944,  1005,  1007,  1015,  1016,  1073,  1333,  1073,   390,
    1333,  1333,  1073,  1333,   390,   390,  1333,  1333,   565,   135,
    1333,   253,   544,   189,   390,   406,  1007,  1073,   253,  1333,
     390,   544,   135,  1333,  1333,  1333,  1333,  1333,  1073,   390,
      47,  1333,   866,  1333,   390,   392,    20,   159,   565,  1077,
     390,   390,  1333,  1333,  1333,  1333,   138,   323,  1458,  1333,
     390,  1333,   924,   648,   863,   864,  1053,   646,   654,   939,
     945,  1449,  1458,  1579,   369,   701,  1045,  1132,   646,  1158,
     646,  1277,  1454,  1455,  1277,  1277,  1454,  1454,   121,   185,
     282,   363,   582,  1279,  1454,  1277,  1277,  1454,  1454,  1454,
    1454,  1454,  1454,  1454,  1277,  1277,  1454,  1441,  1454,  1277,
     676,  1333,  1333,  1333,  1333,   648,   835,  1460,   278,   176,
     827,   828,   829,   845,   846,   847,   848,   851,   852,   853,
     854,   393,   553,  1460,  1458,  1602,     8,    30,   813,   707,
     646,   454,   267,   646,   856,   923,   925,   926,    46,   210,
     466,  1030,  1030,  1450,  1450,  1450,  1307,  1458,   604,  1352,
    1458,  1204,   654,  1357,   239,  1158,   647,  1158,   556,  1158,
    1158,   153,    34,    61,   111,   114,   122,   348,   489,   561,
     595,  1195,   974,  1158,   974,  1195,  1197,   647,   239,   239,
    1158,  1158,  1158,  1197,  1158,  1158,  1158,  1158,  1158,  1161,
     647,   647,  1158,  1158,  1158,  1158,  1158,  1158,  1197,   239,
    1158,  1158,  1158,   647,  1158,  1158,  1158,  1158,   193,  1158,
     193,  1158,   193,  1158,  1158,  1158,    34,    61,   992,   993,
     994,   995,   996,  1278,  1277,   647,   647,  1565,  1566,  1567,
    1224,  1140,   647,  1558,  1460,  1158,  1562,  1160,   647,   648,
     647,  1168,  1249,  1249,    17,  1158,  1562,  1259,  1158,   647,
     648,  1196,  1197,  1458,  1301,   930,  1460,  1075,   670,  1392,
     159,   648,  1458,  1533,  1534,   565,   641,  1450,  1458,  1528,
    1528,  1528,  1508,  1256,  1272,  1273,  1323,   648,  1131,  1133,
     553,  1457,   629,   274,   874,   875,   876,  1458,   886,  1161,
      47,   646,   888,   878,   159,   646,   565,  1100,   913,  1324,
     646,  1329,  1334,  1329,   647,   912,  1325,  1443,  1444,  1447,
    1458,  1327,  1248,  1458,   159,   204,   193,  1528,  1528,  1528,
    1138,   144,  1204,  1292,   190,   277,  1151,  1291,  1272,  1147,
      20,  1156,  1455,  1458,   641,  1458,  1492,   553,   553,   421,
     442,   476,  1491,  1489,  1488,  1332,  1474,   648,  1478,  1480,
    1484,  1279,  1370,   162,   618,  1275,  1275,   363,  1371,  1255,
    1375,   159,   159,   648,   159,   393,  1086,   478,  1220,  1227,
    1232,  1203,   252,   252,   381,  1234,   252,   263,   458,  1234,
    1218,  1203,  1344,  1345,  1447,  1205,  1216,  1229,  1230,  1277,
     327,  1268,   981,   975,   110,   110,   126,   242,   855,  1280,
    1453,   838,   692,   855,   855,   832,   648,   826,   173,  1033,
    1449,  1112,    63,   189,   406,   942,  1006,  1011,  1033,  1007,
    1008,  1008,   124,  1458,  1449,  1112,  1279,  1277,  1449,  1277,
      12,  1054,  1062,  1063,  1458,  1112,  1455,  1455,   973,  1333,
    1277,   255,  1062,   255,  1449,  1449,   930,  1063,  1333,   183,
     258,   359,   933,  1277,   124,  1458,  1279,  1279,  1449,  1112,
    1264,  1265,  1447,   124,  1277,   865,  1455,  1112,   866,  1450,
    1112,  1112,    81,    83,   124,   147,   184,   428,   566,   567,
     568,   569,   570,   571,   932,   124,  1277,   124,  1277,   124,
    1277,  1277,  1054,   927,     6,   143,  1066,   936,   937,   938,
     939,   940,  1458,     8,   183,  1076,   429,   941,   942,   999,
     946,   654,   646,  1580,    82,   468,   439,  1046,   646,   406,
    1245,  1246,  1247,  1458,   677,   678,  1277,  1455,  1278,   855,
     855,   835,   374,   206,  1333,   648,   829,   553,    20,   454,
     646,   129,   236,   597,   814,   694,  1596,   122,   241,   423,
     530,   935,  1450,   267,   857,   862,   863,   936,   862,   648,
     925,   682,   684,   686,   654,  1204,  1255,  1357,  1255,  1158,
     647,  1158,   556,   646,   964,   965,   965,   646,   959,   646,
     957,   958,   964,   965,   241,   959,   241,   647,   647,   647,
     647,   647,  1183,  1158,  1158,   647,   647,   648,   647,   378,
    1190,   648,   648,   647,   648,   647,   243,  1175,  1176,   647,
     647,   647,   647,   648,   647,   647,  1158,   647,   190,   647,
     647,   648,   647,   648,   648,   647,  1158,   647,  1158,   647,
    1158,   647,   647,   647,   646,   987,   987,    21,   130,   456,
     639,   989,   990,   991,   648,   648,  1152,  1567,   647,  1561,
     654,  1034,   647,  1197,  1160,   647,   648,   647,  1155,  1180,
     647,  1070,  1071,  1072,   190,   624,  1393,    55,    65,    77,
      89,    90,    91,   105,   325,   342,   453,   469,   531,   549,
     758,   757,   647,   648,  1530,   654,   654,   565,   565,   565,
     646,  1158,   369,  1339,  1129,  1450,  1133,   225,  1136,  1414,
     647,   648,  1155,   872,   390,   889,   890,  1278,   874,  1461,
    1148,  1330,  1331,  1447,  1335,   648,   646,  1326,   647,   647,
     648,   654,  1550,   647,   648,   745,   375,  1530,   193,   193,
     193,  1255,  1255,   145,   382,  1287,  1288,  1293,   597,   243,
    1455,  1458,   654,   647,   647,    79,   583,   421,  1493,  1477,
    1479,  1271,  1271,  1380,  1455,  1455,   679,  1455,   159,   125,
    1087,  1158,   591,   647,  1554,  1228,   651,   252,  1218,  1234,
    1234,   252,   369,   369,   604,   648,  1343,  1332,  1253,  1148,
    1158,  1269,  1445,   826,  1056,   646,   255,   255,  1033,  1008,
    1018,  1033,  1033,   143,   481,  1054,  1067,  1051,   648,  1278,
     975,  1455,  1449,  1075,   624,  1455,  1068,  1054,   648,    21,
     130,  1270,   869,  1054,  1059,  1054,   646,   647,   648,  1458,
    1450,    33,    34,    39,    41,    43,    44,    61,   111,   114,
     122,   141,   158,   184,   186,   199,   200,   241,   271,   280,
     281,   283,   319,   320,   321,   338,   339,   340,   345,   348,
     365,   366,   398,   399,   423,   477,   481,   493,   554,   558,
     561,   562,   563,   564,   610,   611,   635,   947,   950,   951,
     952,   953,   954,   955,   956,  1458,  1458,  1581,    20,   357,
     404,    24,   167,   695,   565,   136,   151,   697,  1054,   647,
     648,   647,   648,   646,  1458,   855,   829,  1455,   935,  1603,
     369,   369,   718,   719,   721,  1458,   496,  1450,   912,   647,
     225,   444,   859,  1420,   925,   646,   646,   646,  1458,  1255,
    1266,  1249,  1158,   121,   282,   363,   582,    22,    34,    48,
     589,   973,   983,   984,   985,   363,   363,   647,  1249,  1249,
    1158,    47,   475,  1189,  1158,  1158,  1197,    43,   346,   647,
     624,  1177,  1158,  1249,  1158,  1158,  1158,  1158,   647,   647,
     647,  1278,   647,   997,   992,   990,   992,   993,  1277,  1226,
    1559,  1458,   647,  1197,  1156,  1072,  1071,  1394,   421,  1534,
     624,  1537,   641,   641,  1530,  1530,  1530,   124,  1158,  1337,
    1338,   146,  1136,   261,  1420,   876,   647,   210,   255,   891,
     647,   648,   647,  1152,   648,  1332,  1336,  1337,  1334,  1328,
    1326,  1443,  1458,   866,  1458,   193,  1530,  1530,  1530,  1272,
     206,  1260,  1457,  1457,   653,  1289,  1290,  1460,   483,   641,
    1478,  1483,  1455,   159,   395,  1088,  1558,  1253,  1206,  1203,
    1218,   252,   252,  1203,  1218,  1209,  1208,  1210,  1345,  1255,
    1338,  1243,  1244,  1152,   648,  1270,   391,   646,  1057,  1158,
    1033,  1018,   646,  1017,  1017,   124,   124,   945,  1107,  1063,
     980,   546,   947,  1050,  1265,  1060,  1062,  1052,  1397,   938,
     646,  1000,   964,   964,   965,   959,   957,   402,   948,   957,
     957,   985,    61,   610,   951,   953,   985,   985,    61,   611,
     611,   614,   957,   949,   965,   959,   959,   985,   964,   965,
      26,    72,    76,    78,   124,   362,   369,   406,   477,   528,
     967,   968,   969,   998,  1011,  1164,   614,   964,   985,    34,
     964,   986,   964,   964,   965,   646,   958,   966,   654,   647,
     648,  1582,  1583,   404,  1158,  1158,   369,   701,   707,   369,
      78,   702,   647,  1246,   678,   691,   496,   234,   243,   383,
     722,   723,   724,   725,  1154,   468,   647,   648,   720,  1455,
     647,   647,   923,    20,   915,  1031,  1032,  1458,  1031,  1031,
     268,  1276,   647,   647,   647,   647,   647,    34,    22,   589,
     973,    34,   974,   647,   648,   647,   647,   647,  1191,  1437,
     647,   647,   648,   647,   333,   257,   416,   647,   647,   647,
     647,   647,   647,   988,   647,   648,   934,  1147,  1272,  1554,
     647,   174,   277,   204,   446,  1535,  1535,  1535,   647,   648,
    1340,   240,   646,   879,   873,   892,  1458,   890,   914,  1331,
    1338,   647,  1553,  1530,    47,   211,  1257,  1294,  1460,   648,
     333,  1455,   159,  1221,   369,  1212,  1218,  1218,   369,  1214,
    1158,  1158,   646,  1266,  1241,  1242,  1231,  1445,  1278,   889,
     647,   646,   646,  1031,   646,   646,   114,   558,   561,   639,
     640,  1439,  1440,  1076,  1450,   967,  1112,  1061,  1099,   647,
    1001,  1458,   310,  1002,   489,   595,   636,   961,   962,   963,
     646,   961,   961,   985,   614,   961,   646,   985,   961,   979,
     124,   147,   184,  1455,   971,   972,  1439,   597,   124,   124,
     138,   323,   969,   255,   255,   362,   985,   986,   985,   986,
     961,   363,   961,  1458,  1458,   473,   646,  1584,  1587,  1249,
     491,  1455,   142,  1047,   647,  1455,   647,   648,   720,  1591,
     695,  1597,   721,   947,   970,   858,   862,   646,   912,   647,
     648,  1270,   646,   647,   647,  1275,   974,   986,   363,  1192,
    1445,  1158,   333,   172,   647,  1277,  1151,  1151,   375,    64,
     250,   355,   515,   533,   630,  1526,  1527,   624,  1536,  1536,
    1536,  1338,   255,   546,  1154,   882,   646,   608,   893,   934,
    1261,  1445,  1258,  1266,   973,   976,  1290,  1455,  1559,  1211,
     604,  1213,   604,  1248,  1276,   188,   225,   603,  1236,  1237,
    1240,   934,  1270,   647,  1031,  1031,   647,  1031,  1031,  1441,
    1441,   866,  1069,   240,   647,   648,   194,   389,   490,   369,
    1003,   963,  1035,  1437,  1035,   971,   609,  1588,   646,  1586,
    1587,   624,  1589,  1585,   696,   703,   704,  1604,   724,  1458,
    1450,   700,   701,   454,   980,  1553,   859,   912,   860,    78,
     254,  1019,  1022,  1025,  1026,  1027,  1032,   363,   624,  1020,
    1024,  1026,  1029,  1021,  1023,  1026,  1028,   647,   648,  1270,
     647,   647,   553,   553,   553,    17,  1525,   204,   311,   312,
     316,   317,  1538,  1539,   597,  1450,   886,   534,   887,   884,
     885,  1458,   243,   264,    78,   110,   229,   313,   331,   354,
     544,   909,   910,   911,  1374,   625,   626,   648,  1262,  1270,
    1158,  1272,   975,  1295,  1222,  1158,   646,  1158,   646,   647,
    1007,  1007,  1237,   647,   647,  1019,   647,   647,  1076,   646,
    1458,   129,   597,   647,   648,   647,  1143,  1586,   647,    52,
      63,   274,  1550,   517,   698,    53,    68,   181,   224,   251,
     262,   372,   455,   705,   763,   765,   766,   767,   769,   770,
     771,   772,   773,   774,   776,   784,   785,   788,   799,   802,
     804,   805,  1453,  1459,  1463,   709,   970,   190,   697,  1598,
     647,  1550,  1455,  1333,   683,  1027,  1270,   647,   388,   685,
    1029,   687,  1028,  1445,  1526,   375,  1277,  1277,  1277,  1277,
    1539,  1346,  1347,  1447,  1216,  1155,  1278,   647,   648,   895,
     555,  1333,   135,   135,  1333,  1333,  1333,  1333,   646,   904,
     911,   157,  1445,   408,  1283,    74,  1421,  1554,  1248,  1248,
     190,  1235,  1235,   999,  1019,  1020,  1021,   889,    51,   359,
     451,   481,  1004,  1004,   985,  1437,   985,   647,  1553,    63,
     375,    63,  1158,   154,   699,   786,   789,  1458,   193,   353,
     777,   764,  1459,  1459,  1458,   768,   661,   284,   443,   623,
     808,    31,   806,   655,   133,   710,   711,  1164,  1605,  1154,
     702,   970,   861,  1277,  1070,  1453,  1070,  1070,  1270,   648,
    1332,  1415,   647,   883,   885,   646,   897,   899,   894,  1455,
    1333,  1333,  1280,  1280,  1278,  1460,   535,   905,   906,  1333,
    1270,    14,   152,   163,   376,   552,  1422,  1423,   270,  1424,
     647,   647,   206,   252,   378,  1239,  1238,   647,     5,   124,
     362,   369,   369,   375,   375,  1158,  1158,   621,   791,   795,
     193,  1458,   779,   780,  1158,   727,   762,   763,   765,   767,
     769,   771,   772,   773,   774,   776,   784,   799,   802,   804,
     727,   809,   807,   800,   803,   133,   762,  1592,   142,  1599,
    1553,  1347,  1338,   976,   887,   646,   898,   899,   900,   318,
     896,   899,  1455,  1455,   907,   647,   648,   930,  1284,    47,
      47,   152,    47,  1423,   516,   552,  1425,  1426,    47,    47,
     646,   646,   597,   129,   787,   796,   149,   795,   798,   240,
     153,  1158,   153,   762,   652,   596,  1158,   728,   808,   806,
     148,   703,   709,  1416,   647,   648,   318,   902,   903,  1161,
     908,  1460,   906,   646,  1437,  1437,    47,  1437,    47,    47,
    1426,  1245,  1247,  1004,  1004,   621,   790,   792,  1158,   727,
     153,   775,   224,   781,   284,   652,   811,   810,   123,   726,
     729,   801,  1459,   801,   464,  1600,   462,  1427,   899,   648,
     901,   909,   363,  1285,  1286,  1437,  1437,  1437,   647,   647,
     793,   792,   798,   797,    53,   778,  1458,   556,  1158,   142,
      94,   171,   733,   759,  1458,   153,   762,   652,  1593,   762,
     222,  1421,   903,   647,   647,   648,  1158,   153,   556,   648,
     727,   812,   727,   209,   648,   730,    85,   104,   652,   762,
      47,  1424,  1286,   794,    53,   727,  1458,   782,   153,   153,
     190,  1458,   970,   190,   190,  1437,   225,  1428,   556,   149,
     150,   783,   443,   623,   731,   124,   760,   736,   737,  1277,
     732,   363,   646,  1430,   727,   727,   779,   501,   503,   734,
     735,   736,   739,  1164,  1458,   761,  1137,   270,   462,  1429,
     647,   653,  1431,  1432,  1447,   481,  1433,   648,   762,   192,
    1158,  1460,   647,   648,  1434,  1435,  1447,   735,  1432,   648,
    1332,  1435,  1154,  1338,  1155
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   656,   657,   658,   657,   657,   659,   659,   660,   660,
     661,   661,   661,   661,   661,   661,   661,   661,   661,   661,
     661,   661,   661,   661,   661,   661,   661,   661,   661,   661,
     661,   661,   661,   661,   661,   661,   661,   661,   661,   661,
     661,   661,   661,   661,   661,   661,   661,   661,   661,   661,
     661,   661,   661,   661,   661,   661,   661,   661,   661,   661,
     661,   661,   662,   663,   663,   664,   665,   665,   667,   666,
     668,   668,   669,   669,   670,   672,   671,   674,   673,   675,
     675,   676,   676,   676,   676,   676,   676,   676,   676,   676,
     676,   676,   676,   676,   676,   676,   676,   676,   676,   676,
     676,   676,   677,   677,   677,   678,   679,   679,   679,   679,
     681,   680,   682,   683,   680,   684,   685,   680,   686,   687,
     680,   688,   680,   689,   680,   680,   680,   680,   680,   690,
     691,   691,   692,   692,   692,   692,   692,   692,   692,   694,
     693,   696,   695,   695,   697,   697,   697,   697,   698,   698,
     699,   699,   700,   700,   701,   701,   702,   702,   704,   703,
     705,   705,   705,   705,   705,   705,   705,   705,   705,   705,
     705,   705,   705,   706,   707,   707,   708,   708,   709,   709,
     710,   710,   710,   710,   710,   710,   710,   711,   711,   711,
     712,   712,   714,   713,   715,   715,   716,   716,   717,   717,
     718,   718,   719,   719,   720,   721,   722,   722,   723,   723,
     724,   725,   725,   725,   725,   726,   726,   727,   727,   728,
     728,   730,   729,   729,   731,   729,   732,   729,   733,   733,
     734,   734,   735,   736,   736,   737,   738,   738,   739,   739,
     739,   739,   739,   740,   741,   741,   742,   742,   743,   743,
     744,   744,   745,   745,   745,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   747,   748,   749,
     749,   750,   750,   751,   751,   752,   753,   753,   754,   754,
     755,   756,   756,   757,   758,   758,   758,   758,   758,   758,
     758,   758,   758,   758,   758,   758,   758,   759,   759,   760,
     761,   760,   762,   762,   762,   762,   762,   762,   762,   762,
     762,   762,   762,   762,   762,   764,   763,   766,   765,   768,
     767,   770,   769,   771,   772,   773,   775,   774,   776,   777,
     777,   777,   778,   778,   780,   781,   782,   779,   783,   783,
     783,   784,   784,   786,   787,   785,   789,   788,   790,   790,
     791,   791,   793,   794,   792,   796,   797,   795,   798,   798,
     800,   799,   801,   801,   803,   802,   805,   804,   807,   806,
     808,   809,   810,   808,   811,   812,   808,   813,   813,   814,
     814,   814,   815,   816,   817,   818,   818,   819,   819,   820,
     821,   822,   822,   824,   823,   825,   825,   825,   826,   826,
     826,   827,   827,   828,   828,   828,   829,   829,   829,   829,
     829,   829,   829,   829,   830,   830,   831,   831,   831,   832,
     832,   832,   832,   832,   833,   833,   834,   834,   834,   835,
     835,   835,   835,   835,   835,   835,   836,   836,   837,   837,
     837,   838,   838,   838,   839,   840,   841,   842,   843,   844,
     844,   844,   845,   846,   847,   848,   849,   850,   851,   852,
     853,   854,   854,   855,   855,   856,   856,   856,   856,   857,
     858,   857,   859,   860,   859,   861,   859,   862,   863,   863,
     865,   864,   866,   868,   867,   869,   870,   871,   870,   870,
     870,   870,   870,   872,   872,   873,   873,   874,   874,   875,
     875,   876,   877,   878,   879,   880,   880,   881,   882,   881,
     883,   881,   884,   884,   885,   886,   887,   887,   888,   888,
     889,   889,   891,   890,   892,   893,   894,   893,   895,   893,
     896,   896,   897,   897,   898,   898,   900,   901,   899,   902,
     902,   903,   903,   904,   904,   905,   905,   907,   906,   908,
     909,   909,   910,   910,   911,   911,   911,   911,   911,   911,
     911,   911,   913,   914,   912,   915,   915,   916,   916,   917,
     917,   918,   918,   919,   919,   920,   920,   921,   922,   922,
     923,   923,   924,   924,   925,   925,   925,   926,   926,   926,
     926,   926,   926,   926,   926,   926,   926,   926,   926,   926,
     926,   926,   926,   926,   926,   926,   927,   926,   926,   926,
     926,   926,   926,   926,   926,   926,   926,   926,   928,   929,
     930,   931,   932,   932,   932,   932,   932,   932,   932,   932,
     932,   932,   932,   932,   933,   933,   933,   934,   934,   935,
     935,   935,   935,   936,   937,   937,   938,   938,   939,   939,
     940,   940,   940,   940,   940,   940,   941,   941,   942,   943,
     943,   944,   946,   945,   947,   947,   947,   947,   947,   947,
     947,   947,   947,   947,   947,   947,   947,   947,   947,   947,
     947,   947,   947,   947,   947,   947,   947,   947,   947,   947,
     947,   947,   947,   947,   947,   947,   947,   947,   947,   948,
     947,   949,   947,   947,   947,   950,   950,   950,   950,   950,
     950,   950,   950,   951,   952,   952,   953,   953,   954,   954,
     954,   954,   954,   955,   955,   955,   955,   955,   956,   956,
     956,   957,   957,   957,   958,   959,   959,   960,   960,   960,
     961,   961,   962,   962,   963,   963,   963,   964,   964,   964,
     964,   965,   965,   966,   966,   967,   967,   968,   968,   969,
     969,   969,   969,   969,   969,   969,   969,   969,   969,   969,
     969,   969,   969,   969,   969,   969,   970,   971,   972,   972,
     973,   973,   974,   974,   975,   975,   976,   976,   977,   977,
     978,   978,   979,   980,   980,   981,   981,   982,   982,   983,
     983,   983,   984,   984,   984,   985,   985,   985,   985,   985,
     985,   985,   986,   986,   988,   987,   989,   989,   990,   991,
     991,   991,   991,   992,   993,   994,   994,   995,   996,   996,
     997,   997,   998,   998,   999,  1000,  1000,  1001,  1001,  1002,
    1002,  1002,  1002,  1003,  1003,  1003,  1003,  1003,  1004,  1004,
    1004,  1004,  1004,  1005,  1006,  1006,  1007,  1007,  1008,  1008,
    1009,  1009,  1009,  1010,  1010,  1011,  1011,  1012,  1012,  1012,
    1013,  1014,  1015,  1016,  1017,  1018,  1018,  1019,  1019,  1020,
    1020,  1021,  1021,  1022,  1022,  1023,  1023,  1024,  1024,  1025,
    1025,  1026,  1026,  1027,  1027,  1028,  1029,  1029,  1030,  1030,
    1030,  1031,  1031,  1032,  1032,  1033,  1033,  1034,  1034,  1035,
    1035,  1037,  1036,  1038,  1036,  1036,  1039,  1036,  1040,  1036,
    1041,  1036,  1042,  1036,  1043,  1036,  1036,  1036,  1036,  1036,
    1036,  1036,  1044,  1044,  1045,  1045,  1045,  1045,  1046,  1046,
    1047,  1047,  1048,  1048,  1049,  1049,  1049,  1049,  1049,  1049,
    1049,  1049,  1049,  1049,  1050,  1049,  1049,  1051,  1049,  1052,
    1049,  1049,  1049,  1049,  1049,  1053,  1054,  1054,  1056,  1055,
    1057,  1057,  1057,  1059,  1058,  1060,  1061,  1060,  1062,  1062,
    1063,  1064,  1064,  1065,  1066,  1066,  1066,  1067,  1066,  1068,
    1069,  1066,  1066,  1066,  1066,  1066,  1066,  1066,  1066,  1066,
    1066,  1066,  1066,  1066,  1066,  1066,  1066,  1070,  1070,  1070,
    1070,  1070,  1071,  1071,  1072,  1072,  1073,  1073,  1074,  1074,
    1075,  1075,  1075,  1076,  1076,  1076,  1077,  1077,  1077,  1077,
    1079,  1078,  1078,  1080,  1081,  1081,  1082,  1082,  1083,  1083,
    1083,  1083,  1084,  1085,  1085,  1086,  1086,  1087,  1087,  1088,
    1088,  1089,  1089,  1090,  1090,  1091,  1091,  1092,  1092,  1093,
    1093,  1093,  1093,  1093,  1095,  1094,  1096,  1096,  1096,  1098,
    1097,  1099,  1099,  1100,  1100,  1101,  1101,  1101,  1103,  1102,
    1104,  1106,  1105,  1107,  1107,  1108,  1108,  1109,  1109,  1109,
    1109,  1109,  1109,  1111,  1110,  1112,  1112,  1112,  1114,  1113,
    1113,  1115,  1115,  1116,  1116,  1117,  1119,  1118,  1120,  1120,
    1121,  1121,  1122,  1123,  1124,  1124,  1126,  1125,  1127,  1127,
    1128,  1128,  1129,  1130,  1132,  1131,  1134,  1133,  1135,  1135,
    1136,  1136,  1137,  1138,  1138,  1139,  1139,  1140,  1140,  1142,
    1141,  1144,  1145,  1143,  1146,  1146,  1146,  1146,  1146,  1147,
    1147,  1148,  1148,  1149,  1149,  1150,  1150,  1150,  1151,  1151,
    1151,  1152,  1152,  1152,  1153,  1153,  1154,  1155,  1156,  1156,
    1156,  1156,  1156,  1157,  1157,  1158,  1158,  1158,  1158,  1158,
    1158,  1158,  1158,  1158,  1158,  1158,  1159,  1159,  1159,  1159,
    1159,  1159,  1160,  1160,  1160,  1160,  1160,  1160,  1160,  1160,
    1160,  1160,  1160,  1160,  1160,  1160,  1161,  1161,  1161,  1161,
    1161,  1161,  1161,  1161,  1161,  1161,  1161,  1161,  1161,  1161,
    1161,  1162,  1162,  1163,  1163,  1164,  1164,  1165,  1165,  1166,
    1166,  1166,  1166,  1166,  1166,  1167,  1167,  1168,  1168,  1168,
    1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,
    1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,
    1168,  1168,  1168,  1168,  1168,  1168,  1168,  1169,  1169,  1169,
    1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,
    1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,
    1169,  1169,  1169,  1169,  1170,  1170,  1170,  1170,  1170,  1170,
    1170,  1170,  1170,  1170,  1170,  1170,  1170,  1170,  1170,  1170,
    1170,  1170,  1170,  1170,  1170,  1170,  1171,  1171,  1171,  1171,
    1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,
    1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,
    1171,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1174,
    1173,  1173,  1175,  1175,  1176,  1176,  1177,  1177,  1178,  1178,
    1179,  1179,  1180,  1181,  1181,  1181,  1181,  1181,  1181,  1181,
    1182,  1183,  1181,  1181,  1181,  1181,  1181,  1181,  1181,  1181,
    1181,  1181,  1181,  1184,  1181,  1186,  1185,  1187,  1187,  1187,
    1188,  1188,  1189,  1189,  1190,  1191,  1190,  1192,  1192,  1194,
    1193,  1195,  1195,  1195,  1195,  1195,  1195,  1195,  1195,  1195,
    1195,  1195,  1196,  1196,  1197,  1197,  1198,  1198,  1199,  1199,
    1200,  1200,  1201,  1201,  1202,  1202,  1203,  1203,  1204,  1205,
    1205,  1206,  1206,  1207,  1207,  1208,  1207,  1209,  1207,  1210,
    1207,  1207,  1211,  1207,  1212,  1207,  1207,  1213,  1207,  1214,
    1207,  1207,  1215,  1215,  1215,  1216,  1216,  1217,  1219,  1218,
    1218,  1218,  1220,  1221,  1222,  1220,  1223,  1225,  1226,  1224,
    1228,  1227,  1230,  1231,  1229,  1232,  1233,  1234,  1234,  1235,
    1235,  1235,  1235,  1236,  1236,  1238,  1237,  1239,  1237,  1240,
    1240,  1241,  1242,  1241,  1244,  1243,  1245,  1245,  1246,  1246,
    1247,  1247,  1248,  1248,  1249,  1249,  1249,  1249,  1249,  1249,
    1249,  1249,  1249,  1249,  1249,  1249,  1250,  1250,  1250,  1250,
    1250,  1250,  1250,  1250,  1250,  1251,  1251,  1251,  1251,  1252,
    1252,  1252,  1253,  1253,  1254,  1254,  1255,  1256,  1255,  1257,
    1258,  1257,  1259,  1259,  1260,  1260,  1261,  1261,  1262,  1262,
    1262,  1263,  1264,  1264,  1265,  1266,  1266,  1268,  1267,  1269,
    1269,  1270,  1270,  1270,  1271,  1271,  1272,  1272,  1273,  1274,
    1274,  1274,  1275,  1275,  1275,  1275,  1275,  1276,  1276,  1277,
    1277,  1277,  1277,  1277,  1277,  1278,  1278,  1278,  1278,  1278,
    1279,  1279,  1279,  1279,  1279,  1280,  1280,  1280,  1280,  1281,
    1282,  1282,  1283,  1284,  1283,  1285,  1285,  1285,  1286,  1288,
    1287,  1289,  1289,  1290,  1290,  1292,  1291,  1294,  1295,  1293,
    1293,  1293,  1297,  1296,  1299,  1298,  1300,  1301,  1298,  1298,
    1298,  1298,  1298,  1298,  1302,  1298,  1298,  1298,  1298,  1298,
    1298,  1303,  1303,  1304,  1305,  1306,  1306,  1307,  1308,  1308,
    1309,  1309,  1310,  1310,  1311,  1311,  1311,  1312,  1312,  1314,
    1315,  1313,  1317,  1318,  1316,  1319,  1319,  1319,  1319,  1320,
    1320,  1321,  1321,  1322,  1323,  1323,  1323,  1324,  1323,  1325,
    1325,  1326,  1326,  1327,  1326,  1328,  1326,  1329,  1329,  1330,
    1330,  1331,  1332,  1332,  1333,  1333,  1335,  1334,  1336,  1336,
    1337,  1337,  1338,  1338,  1339,  1340,  1339,  1342,  1343,  1341,
    1344,  1344,  1345,  1346,  1346,  1347,  1348,  1348,  1350,  1349,
    1352,  1351,  1353,  1351,  1354,  1351,  1355,  1355,  1356,  1356,
    1357,  1357,  1358,  1358,  1359,  1359,  1359,  1361,  1360,  1362,
    1362,  1363,  1363,  1364,  1364,  1365,  1365,  1365,  1365,  1365,
    1365,  1365,  1365,  1365,  1366,  1366,  1368,  1367,  1369,  1369,
    1369,  1369,  1369,  1369,  1369,  1369,  1369,  1369,  1369,  1369,
    1370,  1369,  1371,  1369,  1369,  1369,  1369,  1369,  1369,  1369,
    1369,  1369,  1369,  1369,  1369,  1369,  1369,  1369,  1369,  1369,
    1369,  1369,  1369,  1369,  1369,  1369,  1369,  1369,  1369,  1369,
    1369,  1369,  1369,  1369,  1369,  1369,  1369,  1369,  1369,  1372,
    1372,  1372,  1373,  1373,  1374,  1374,  1375,  1375,  1376,  1376,
    1377,  1377,  1378,  1378,  1379,  1379,  1380,  1380,  1380,  1382,
    1381,  1383,  1381,  1384,  1384,  1384,  1384,  1384,  1385,  1385,
    1386,  1386,  1386,  1386,  1387,  1387,  1387,  1389,  1388,  1391,
    1392,  1390,  1390,  1393,  1393,  1394,  1393,  1395,  1395,  1396,
    1396,  1396,  1396,  1396,  1396,  1396,  1396,  1396,  1396,  1396,
    1396,  1396,  1396,  1396,  1396,  1396,  1396,  1396,  1397,  1397,
    1399,  1398,  1400,  1400,  1402,  1401,  1401,  1401,  1401,  1403,
    1403,  1405,  1404,  1406,  1406,  1406,  1407,  1407,  1408,  1408,
    1409,  1410,  1410,  1410,  1411,  1413,  1414,  1415,  1416,  1412,
    1417,  1417,  1418,  1418,  1419,  1419,  1419,  1420,  1420,  1420,
    1421,  1421,  1422,  1422,  1423,  1423,  1423,  1423,  1424,  1424,
    1425,  1425,  1426,  1426,  1427,  1427,  1428,  1428,  1429,  1429,
    1430,  1430,  1430,  1431,  1431,  1432,  1432,  1433,  1433,  1434,
    1434,  1435,  1436,  1436,  1436,  1436,  1437,  1437,  1437,  1438,
    1439,  1439,  1439,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1441,  1441,  1441,  1441,  1441,  1442,  1442,
    1442,  1443,  1443,  1444,  1444,  1445,  1446,  1446,  1447,  1447,
    1448,  1448,  1448,  1449,  1449,  1449,  1449,  1450,  1450,  1450,
    1451,  1451,  1452,  1453,  1453,  1454,  1455,  1456,  1457,  1458,
    1458,  1459,  1459,  1460,  1460,  1460,  1461,  1461,  1461,  1462,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1465,  1464,  1466,  1464,  1467,  1467,
    1469,  1468,  1470,  1468,  1471,  1468,  1473,  1472,  1472,  1474,
    1474,  1476,  1475,  1477,  1475,  1479,  1478,  1478,  1480,  1480,
    1480,  1481,  1481,  1481,  1481,  1482,  1482,  1482,  1482,  1483,
    1485,  1484,  1484,  1484,  1484,  1484,  1484,  1484,  1484,  1486,
    1486,  1486,  1487,  1487,  1487,  1487,  1488,  1489,  1490,  1490,
    1491,  1491,  1491,  1491,  1492,  1492,  1492,  1493,  1493,  1493,
    1493,  1493,  1494,  1495,  1495,  1496,  1495,  1497,  1497,  1498,
    1498,  1499,  1500,  1500,  1500,  1500,  1501,  1502,  1502,  1503,
    1503,  1504,  1503,  1505,  1505,  1506,  1506,  1507,  1507,  1507,
    1507,  1508,  1507,  1509,  1509,  1509,  1509,  1509,  1511,  1510,
    1512,  1512,  1512,  1512,  1512,  1514,  1513,  1515,  1515,  1515,
    1515,  1516,  1516,  1517,  1517,  1518,  1518,  1519,  1519,  1521,
    1520,  1522,  1520,  1523,  1520,  1524,  1520,  1520,  1520,  1520,
    1520,  1520,  1520,  1520,  1520,  1520,  1520,  1520,  1520,  1520,
    1520,  1520,  1520,  1520,  1520,  1520,  1520,  1520,  1520,  1520,
    1520,  1520,  1520,  1525,  1525,  1526,  1526,  1527,  1527,  1527,
    1528,  1528,  1528,  1528,  1529,  1529,  1530,  1530,  1531,  1531,
    1531,  1531,  1531,  1532,  1532,  1533,  1533,  1534,  1535,  1535,
    1535,  1535,  1535,  1536,  1536,  1537,  1537,  1538,  1538,  1539,
    1539,  1539,  1539,  1539,  1541,  1540,  1542,  1542,  1543,  1543,
    1543,  1544,  1544,  1544,  1545,  1545,  1546,  1547,  1547,  1548,
    1549,  1550,  1550,  1552,  1551,  1553,  1553,  1553,  1554,  1554,
    1556,  1555,  1557,  1557,  1558,  1558,  1558,  1559,  1559,  1560,
    1561,  1560,  1562,  1563,  1564,  1565,  1565,  1566,  1566,  1567,
    1567,  1567,  1567,  1567,  1567,  1567,  1567,  1568,  1568,  1568,
    1569,  1569,  1569,  1569,  1569,  1570,  1570,  1570,  1570,  1570,
    1570,  1571,  1571,  1572,  1573,  1574,  1574,  1574,  1575,  1576,
    1576,  1576,  1577,  1577,  1577,  1579,  1578,  1580,  1580,  1581,
    1581,  1583,  1582,  1585,  1584,  1584,  1586,  1586,  1588,  1587,
    1589,  1589,  1589,  1589,  1591,  1592,  1593,  1590,  1594,  1594,
    1596,  1597,  1598,  1599,  1600,  1595,  1602,  1603,  1604,  1605,
    1601,  1606,  1606,  1606,  1606,  1606,  1606,  1607,  1607,  1607,
    1608,  1608,  1609,  1609,  1609,  1610,  1610,  1611,  1612,  1611,
    1613,  1613,  1614,  1615
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     0,     5,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       3,     1,     0,     1,     3,     1,     3,     3,     3,     3,
       0,     7,     0,     0,    14,     0,     0,    14,     0,     0,
      14,     0,     6,     0,     3,     4,     4,     3,     2,    10,
       1,     3,     2,     2,     2,     2,     2,     2,     2,     0,
      13,     0,     6,     2,     0,     1,     3,     1,     0,     2,
       0,     2,     0,     1,     3,     4,     0,     2,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     1,     0,     2,     0,     2,
       2,     2,     2,     2,     3,     3,     1,     1,     1,     2,
       3,     3,     0,     4,     0,     3,     0,     1,     3,     1,
       0,     1,     3,     1,     0,     3,     0,     1,     3,     1,
       4,     0,     1,     1,     1,     0,     3,     2,     3,     0,
       3,     0,     5,     5,     0,     7,     0,     6,     1,     1,
       1,     3,     1,     1,     1,     3,     0,     1,     1,     1,
       1,     2,     1,     3,     1,     1,     0,     1,     0,     2,
       3,     5,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     4,     0,
       1,     1,     3,     1,     3,     3,     1,     2,     1,     1,
       1,     1,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     0,
       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     5,     0,     2,     0,
       3,     0,     2,     2,     2,     2,     0,     6,     2,     0,
       2,     1,     1,     3,     0,     0,     0,     7,     0,     2,
       2,     1,     1,     0,     0,     8,     0,     6,     1,     2,
       1,     2,     0,     0,     6,     0,     0,     6,     0,     2,
       0,     5,     0,     1,     0,     5,     0,     2,     0,     5,
       4,     0,     0,     8,     0,     0,     8,     1,     1,     1,
       1,     1,     2,     4,     5,     0,     4,     4,     4,     3,
       3,     2,     2,     0,     2,     1,     2,     3,     1,     1,
       1,     0,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     2,
       3,     1,     1,     1,     2,     2,     2,     1,     1,     1,
       1,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       4,     1,     1,     1,     1,     2,     3,     2,     4,     5,
       0,     5,     0,     0,     5,     0,     7,     1,     0,     1,
       0,     4,     0,     0,     3,     5,     6,     0,     4,     2,
       2,     2,     2,     0,     1,     0,     3,     0,     1,     1,
       3,     1,     4,     5,     5,     0,     2,     0,     0,     7,
       0,    10,     1,     3,     1,     1,     0,     2,     0,     3,
       1,     3,     0,     6,     1,     0,     0,     5,     0,     4,
       1,     1,     1,     3,     1,     3,     0,     0,     5,     1,
       3,     1,     1,     0,     3,     1,     3,     0,     4,     1,
       0,     1,     2,     1,     3,     4,     3,     3,     3,     4,
       4,     3,     0,     0,     6,     0,     1,     0,     1,     1,
       2,     1,     1,     0,     1,     1,     2,     1,     0,     3,
       0,     1,     1,     2,     1,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     0,     6,     1,     1,
       3,     4,     4,     2,     2,     2,     3,     3,     4,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     2,     2,
       7,     8,     8,     8,     8,     2,     0,     1,     4,     0,
       1,     2,     0,     4,     3,     3,     3,     1,     2,     1,
       1,     3,     2,     3,     2,     2,     1,     3,     3,     2,
       3,     1,     2,     2,     2,     1,     2,     1,     1,     1,
       2,     3,     2,     3,     2,     2,     3,     3,     3,     0,
       6,     0,     6,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     2,     1,
       2,     3,     2,     1,     1,     1,     1,     1,     1,     1,
       2,     0,     1,     1,     5,     0,     3,     0,     2,     3,
       0,     1,     2,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     1,     0,     1,     0,     1,     2,     1,     1,
       2,     2,     3,     1,     3,     2,     1,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     1,
       2,     1,     1,     1,     1,     1,     0,     2,     1,     1,
       1,     1,     1,     0,     2,     1,     1,     0,     1,     1,
       2,     2,     1,     2,     2,     0,     1,     1,     1,     3,
       1,     3,     0,     1,     0,     4,     1,     1,     1,     0,
       1,     2,     1,     1,     2,     1,     3,     3,     1,     1,
       0,     2,     0,     1,     5,     0,     3,     3,     1,     0,
       2,     2,     2,     0,     3,     3,     6,     6,     1,     1,
       2,     2,     2,     1,     2,     2,     1,     1,     0,     1,
       1,     1,     1,     0,     1,     1,     1,     1,     2,     2,
       1,     1,     1,     1,     0,     1,     2,     0,     1,     0,
       1,     0,     1,     1,     2,     1,     2,     1,     2,     2,
       2,     3,     2,     1,     1,     1,     1,     3,     1,     1,
       1,     4,     2,     1,     4,     0,     1,     0,     2,     1,
       3,     0,     6,     0,     5,     7,     0,     5,     0,     5,
       0,     5,     0,     4,     0,    11,     3,     4,     3,     3,
       7,     4,     3,     5,     0,     3,     1,     4,     0,     3,
       0,     2,     0,     1,     0,     2,     2,     2,     2,     1,
       1,     1,     3,     4,     0,     6,     4,     0,     5,     0,
       6,     4,     3,     1,     7,     3,     1,     1,     0,     5,
       0,     3,     2,     0,     5,     0,     0,     6,     1,     3,
       1,     1,     3,     2,     3,     2,     4,     0,     6,     0,
       0,     8,     4,     4,     3,     3,     2,     2,     6,     5,
       3,     5,     1,     1,     1,     1,     1,     0,     1,     1,
       2,     2,     3,     3,     3,     3,     0,     1,     0,     1,
       0,     1,     1,     0,     2,     1,     0,     1,     1,     1,
       0,     6,     3,     3,     0,     1,     1,     3,     3,     6,
       2,     2,     4,     0,     3,     0,     3,     0,     3,     0,
       3,     0,     1,     1,     3,     1,     1,     0,     2,     1,
       3,     3,     3,     1,     0,     5,     0,     1,     1,     0,
       6,     0,     1,     1,     2,     1,     1,     1,     0,     5,
       2,     0,     5,     0,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     0,     5,     0,     1,     1,     0,     4,
       4,     3,     5,     1,     3,     3,     0,     6,     1,     1,
       1,     3,     2,     3,     1,     1,     0,     6,     1,     1,
       1,     3,     3,     4,     0,     6,     0,     2,     0,     4,
       0,     2,     1,     2,     4,     2,     3,     2,     3,     0,
       3,     0,     0,     6,     2,     1,     1,     2,     2,     8,
       4,     0,     1,     2,     1,     1,     1,     1,     0,     2,
       4,     3,     1,     1,     3,     4,     0,     0,     0,     2,
       2,     1,     1,     0,     2,     3,     3,     3,     2,     3,
       4,     3,     4,     3,     4,     1,     3,     4,     3,     3,
       6,     1,     5,     6,     5,     7,     6,     8,     5,     6,
       4,     4,     5,     3,     4,     1,     3,     3,     3,     3,
       3,     3,     5,     5,     3,     3,     3,     3,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     1,     3,     2,     2,
       2,     2,     3,     3,     5,     6,     4,     4,     7,     2,
       6,     5,     6,     6,     4,     4,     5,     4,     6,     2,
       4,     4,     4,    10,     6,     8,     6,     4,     4,     6,
       4,     4,     4,     6,     4,     7,     7,     7,     6,     6,
       6,     6,     3,     4,     6,     8,     2,     2,     8,     8,
       6,     6,     1,     6,     6,     8,     8,     6,     8,     6,
       2,     8,     8,     2,     2,     2,     4,     4,     4,     4,
       3,     8,     6,     8,     4,     6,     4,     4,     4,     6,
       8,     4,     3,     6,     4,     6,     5,     8,     7,    10,
       1,     6,     4,     4,     4,     4,     4,     6,     4,     0,
       5,     6,     2,     3,     0,     4,     0,     3,     0,     1,
       1,     3,     4,     4,     5,     4,     4,     4,     5,     4,
       0,     0,     7,     4,     5,     4,     5,     4,     4,     4,
       4,     4,     5,     0,     8,     0,     3,     3,     1,     4,
       0,     1,     0,     2,     0,     0,     4,     4,     2,     0,
       3,     2,     3,     2,     1,     2,     1,     2,     1,     2,
       2,     2,     0,     1,     1,     3,     1,     3,     1,     3,
       0,     1,     0,     2,     4,     5,     1,     1,     1,     1,
       4,     1,     3,     3,     3,     0,     6,     0,     6,     0,
       8,     4,     0,     8,     0,    10,     6,     0,     8,     0,
      10,     6,     1,     2,     2,     0,     1,     5,     0,     5,
       3,     5,     2,     0,     0,     7,     1,     0,     0,     6,
       0,     3,     0,     0,     5,     0,     1,     0,     1,     0,
       2,     3,     3,     1,     1,     0,     7,     0,     7,     1,
       2,     0,     0,     2,     0,     2,     0,     1,     1,     1,
       1,     3,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     0,     2,     0,     1,     0,     0,     3,     0,
       0,     3,     2,     0,     0,     4,     4,     2,     0,     1,
       1,     3,     3,     1,     2,     0,     1,     0,     4,     4,
       2,     0,     1,     1,     0,     1,     0,     1,     2,     1,
       3,     3,     1,     1,     1,     1,     1,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     0,     6,     0,     1,     3,     1,     0,
       2,     3,     1,     2,     1,     0,     3,     0,     0,     7,
       2,     1,     0,     3,     0,     7,     0,     0,     8,     4,
       6,     4,     4,     4,     0,     6,     4,     4,     4,     5,
       4,     1,     3,     1,     2,     1,     3,     1,     0,     2,
       0,     1,     0,     1,     1,     2,     3,     1,     1,     0,
       0,     8,     0,     0,     6,     0,     1,     1,     1,     1,
       1,     2,     1,     1,     1,     3,     4,     0,     3,     3,
       1,     2,     2,     0,     3,     0,     5,     3,     1,     3,
       1,     3,     1,     1,     0,     1,     0,     4,     0,     1,
       3,     1,     1,     1,     0,     0,     6,     0,     0,    11,
       3,     1,     3,     3,     1,     3,     0,     1,     0,     4,
       0,     7,     0,     5,     0,     6,     1,     3,     2,     4,
       0,     2,     0,     2,     1,     1,     1,     0,     4,     0,
       1,     0,     1,     1,     3,     1,     1,     2,     2,     2,
       1,     1,     1,     1,     0,     3,     0,     3,     2,     4,
       4,     3,     4,     4,     1,     3,     3,     6,     2,     2,
       0,     6,     0,     6,     5,     2,     1,     5,     5,     2,
       2,     1,     4,     3,     2,     3,     2,     2,     1,     3,
       4,     3,     3,     2,     2,     3,     2,     2,     2,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     0,     1,     0,     2,     0,     1,
       1,     1,     0,     2,     0,     2,     0,     2,     2,     0,
       4,     0,     4,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     0,     1,     1,     0,     4,     0,
       0,     5,     1,     0,     3,     0,     3,     3,     1,     2,
       2,     2,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       0,     3,     3,     1,     0,     3,     1,     2,     1,     0,
       1,     0,     3,     3,     3,     3,     2,     2,     2,     2,
       3,     0,     1,     1,     2,     0,     0,     0,     0,    22,
       1,     1,     0,     1,     0,     1,     1,     0,     1,     1,
       0,     2,     2,     1,     3,     4,     3,     3,     0,     2,
       2,     1,     3,     3,     0,     4,     0,     3,     1,     1,
       0,     3,     2,     3,     1,     1,     2,     0,     2,     3,
       1,     5,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     2,     2,
       2,     1,     1,     3,     5,     1,     1,     1,     1,     1,
       3,     4,     5,     1,     5,     3,     2,     1,     3,     2,
       2,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     3,     0,     6,     1,     3,
       0,     3,     0,     3,     0,     3,     0,     3,     2,     0,
       2,     0,     2,     0,     4,     0,     3,     1,     1,     1,
       1,     0,     1,     1,     1,     0,     2,     2,     2,     3,
       0,     4,     4,     6,     2,     3,     3,     3,     5,     1,
       3,     3,     1,     1,     3,     3,     1,     3,     2,     2,
       2,     2,     2,     1,     1,     4,     4,     1,     1,     1,
       1,     1,     2,     3,     3,     0,     3,     1,     1,     1,
       3,     3,     1,     1,     2,     2,     2,     1,     1,     4,
       3,     0,     7,     1,     2,     1,     1,     1,     1,     1,
       1,     0,     5,     1,     1,     1,     1,     1,     0,     4,
       6,     6,     6,     7,     5,     0,     4,     8,     8,     8,
       6,     0,     1,     1,     2,     0,     1,     1,     3,     0,
       3,     0,     3,     0,     3,     0,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     3,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     2,     0,     1,     3,     1,     2,     2,     2,
       1,     3,     3,     1,     1,     3,     1,     3,     4,     5,
       4,     6,     1,     0,     3,     3,     1,     1,     0,     2,
       2,     2,     2,     0,     2,     0,     3,     2,     1,     2,
       2,     2,     2,     2,     0,     3,     0,     1,     0,     3,
       2,     0,     1,     2,     0,     1,     4,     4,     5,     2,
       3,     0,     1,     0,     4,     0,     1,     1,     0,     1,
       0,     2,     2,     1,     0,     1,     1,     2,     3,     2,
       0,     6,     3,     0,     0,     0,     1,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     1,     2,     1,     2,     3,
       3,     3,     0,     3,     3,     0,     7,     0,     3,     1,
       3,     0,     3,     0,     3,     4,     1,     3,     0,     3,
       0,     3,     4,     4,     0,     0,     0,    16,     8,     7,
       0,     0,     0,     0,     0,    15,     0,     0,     0,     0,
      12,     4,     4,     3,     4,     3,     2,     1,     3,     5,
       1,     1,     0,     1,     1,     0,     2,     0,     0,     3,
       0,     2,     5,     3
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (yythd, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256



/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)

/* This macro is provided for backward compatibility. */
#ifndef YY_LOCATION_PRINT
# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, yythd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, void *yythd)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yythd);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, void *yythd)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yythd);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, void *yythd)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                                              , yythd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, yythd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, void *yythd)
{
  YYUSE (yyvaluep);
  YYUSE (yythd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (void *yythd)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yystacksize);

        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, yythd);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 1989 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
              (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 17768 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3:
#line 2001 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if ((YYTHD->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 17795 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2026 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 17804 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2100 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[0].lex_str);
          }
#line 17815 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2115 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[-2].lex_str);
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 17836 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2135 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
#line 17847 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2142 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
#line 17858 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2152 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[0].lex_str);
          }
#line 17869 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 69:
#line 2159 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 17875 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2174 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 17886 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2186 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 17898 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2194 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 17908 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 77:
#line 2205 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is freed
              in THD::cleanup_after_query. So it is guaranteed to be
              uninitialized before here.
	      Its allocation is deferred till the option is parsed below.
            */
            lex->mi.set_unspecified();
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.elements == 0);
          }
#line 17925 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 78:
#line 2218 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 17931 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2228 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 17939 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2232 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lex_str).str;
          }
#line 17947 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2236 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 17955 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 84:
#line 2240 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 17964 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2245 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 17972 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2249 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 17980 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2253 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 17989 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 2258 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              Lex_input_stream *lip= YYLIP;
              const char *start= lip->get_tok_start();
              const char *msg= YYTHD->strmake(start, lip->get_ptr() - start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 18006 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2271 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 18015 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2276 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 18023 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2280 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 18031 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2284 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 18039 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2288 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 18047 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 94:
#line 2292 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 18055 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2296 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 18064 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2301 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 18072 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 2305 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 18080 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2310 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 18115 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2341 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 18123 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 2346 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 18133 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2363 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->mi.repl_ignore_server_ids.elements == 0)
            {
              my_init_dynamic_array2(&Lex->mi.repl_ignore_server_ids,
                                     sizeof(::server_id),
                                     Lex->mi.server_ids_buffer,
                                     array_elements(Lex->mi.server_ids_buffer),
                                     16);
            }
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 18149 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2377 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 18157 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 2381 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 18177 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 2397 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 18185 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 2401 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 18196 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 110:
#line 2413 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_WRITE, MDL_SHARED))
              MYSQL_YYABORT;
            /*
              Instruct open_table() to acquire SHARED lock to check the
              existance of table. If the table does not exist then
              it will be upgraded EXCLUSIVE MDL lock. If table exist
              then open_table() will return with an error or warning.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_FOR_CREATE;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[-3].num) | (yyvsp[-1].num);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 18226 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 111:
#line 2439 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[-2].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 18249 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 2458 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index_prepare(Lex, (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 18258 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2463 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index(Lex, (yyvsp[-10].key_type), (yyvsp[-8].lex_str)))
              MYSQL_YYABORT;
          }
#line 18267 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 114:
#line 2467 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 18273 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 115:
#line 2470 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index_prepare(Lex, (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 18282 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 116:
#line 2475 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index(Lex, (yyvsp[-10].key_type), (yyvsp[-8].lex_str)))
              MYSQL_YYABORT;
          }
#line 18291 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 117:
#line 2479 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 18297 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2482 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index_prepare(Lex, (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 18306 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 119:
#line 2487 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index(Lex, (yyvsp[-10].key_type), (yyvsp[-8].lex_str)))
              MYSQL_YYABORT;
          }
#line 18315 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 120:
#line 2491 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 18321 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2493 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 18330 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2498 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lex_str);
            lex->create_info.options=(yyvsp[-3].num);
          }
#line 18341 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2505 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
#line 18351 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2511 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18357 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2513 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_CREATE_USER;
          }
#line 18365 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2517 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 18373 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2521 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 18381 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2525 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
          }
#line 18389 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2536 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.server_name= (yyvsp[-8].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[-8].lex_str).length;
            Lex->server_options.scheme= (yyvsp[-4].lex_str).str;
          }
#line 18399 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2550 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.username= (yyvsp[0].lex_str).str;
          }
#line 18407 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2554 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.host= (yyvsp[0].lex_str).str;
          }
#line 18415 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2558 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.db= (yyvsp[0].lex_str).str;
          }
#line 18423 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2562 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.owner= (yyvsp[0].lex_str).str;
          }
#line 18431 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2566 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.password= (yyvsp[0].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 18440 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2571 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.socket= (yyvsp[0].lex_str).str;
          }
#line 18448 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2575 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 18456 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2582 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-3].simple_string);
            lex->create_info.options= (yyvsp[-1].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 18476 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 18488 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2613 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 18497 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2620 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 18505 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2626 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 18511 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2628 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 18521 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2634 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 18531 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2640 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 18541 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2649 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 18552 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2656 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 18560 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2664 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 18568 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2670 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 18574 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2676 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 18584 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2682 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 18594 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2690 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 18600 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2692 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 18609 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2699 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          SP_TYPE_PROCEDURE,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            sp->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 18656 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2742 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= TRUE;
          }
#line 18670 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2771 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= 0;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
#line 18686 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2786 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name((yyvsp[-2].lex_str), (yyvsp[0].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 18704 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2800 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (sp_check_name(&(yyvsp[0].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(db, (yyvsp[0].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 18724 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2818 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18730 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2819 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18736 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2823 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18742 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2824 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18748 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2830 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 18754 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2832 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 18760 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2834 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 18766 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2836 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 18772 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2838 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 18778 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2840 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 18784 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2842 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18790 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2847 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 18796 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2848 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= TRUE; }
#line 18802 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2849 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= FALSE; }
#line 18808 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2854 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 18816 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2858 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 18824 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2865 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[0].spname);
            lex->value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[0].spname), SP_TYPE_PROCEDURE);
          }
#line 18837 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2873 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18843 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2889 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->value_list.push_back((yyvsp[0].item));
          }
#line 18851 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2893 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->value_list.push_back((yyvsp[0].item));
          }
#line 18859 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2911 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
#line 18880 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2931 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[-2].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lex_str),
                                                   (enum enum_field_types) (yyvsp[0].num),
                                                   sp_variable::MODE_IN);

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[0].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
#line 18911 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2972 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[-1].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-1].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-1].lex_str),
                                                   (enum enum_field_types) (yyvsp[0].num),
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[0].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
#line 18941 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 3000 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 18947 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 3001 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 18953 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 3002 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 18959 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 3003 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 18965 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 3007 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18971 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 3012 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 18977 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 3018 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 18985 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 3022 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 19012 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 3048 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            pctx->declare_var_boundary((yyvsp[0].num));
          }
#line 19026 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3059 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[-1].num);
            Item *dflt_value_item= (yyvsp[0].item);
            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              // sp_opt_default only pushes start ptr for DEFAULT clause.
              const char *expr_start_ptr=
                sp->m_parser_data.pop_expr_start_ptr();
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              YY_TOKEN_END);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= new (thd->mem_root) Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (fill_field_definition(thd, sp, var_type, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is=
                new (thd->mem_root)
                  sp_instr_set(sp->instructions(),
                               lex,
                               var_idx,
                               dflt_value_item,
                               dflt_value_query,
                               (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 19103 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3132 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 19123 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3148 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              new (thd->mem_root)
                sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);
            
            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }
          }
#line 19167 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3188 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 19205 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3222 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(YY_TOKEN_END);
          }
#line 19218 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3231 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            YY_TOKEN_END);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              new (thd->mem_root)
                sp_instr_cpush(sp->instructions(), pctx,
                               cursor_lex, cursor_query,
                               pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 19283 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3294 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 19289 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 3295 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 19295 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3301 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 19301 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3303 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 19307 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3308 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 19331 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3331 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 19346 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3346 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lex_str)) || is_sqlstate_completion((yyvsp[0].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 19369 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3367 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19375 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3368 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 19381 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3373 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 19389 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3377 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 19406 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3390 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 19416 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 3396 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 19426 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3402 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 19436 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3411 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_signal((yyvsp[-1].spcondvalue), state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 19452 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 3426 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 19482 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 3452 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 19488 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3457 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 19494 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3459 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 19500 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 3464 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 19508 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 3472 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 19520 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 3481 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (info->m_item[index] != NULL)
            {
              my_error(ER_DUP_SIGNAL_SET, MYF(0),
                       Diag_condition_item_names[index].str);
              MYSQL_YYABORT;
            }
            info->m_item[index]= (yyvsp[0].item);
          }
#line 19537 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 3500 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 19543 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3502 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 19565 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3520 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 19571 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3526 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 19577 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3528 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 19583 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3530 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 19589 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3532 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 19595 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3534 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 19601 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3536 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 19607 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3538 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 19613 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3540 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 19619 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3542 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 19625 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3544 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 19631 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3546 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 19637 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3548 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 19643 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3553 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_resignal((yyvsp[-1].spcondvalue),
                                                   state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 19660 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3569 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 19676 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3584 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 19682 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3586 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 19688 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3591 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 19698 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3597 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 19708 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3606 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= new (YYTHD->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 19718 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3612 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 19728 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3621 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= new (YYTHD->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 19738 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3629 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[0].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                lip->get_tok_start(),
                lip->get_ptr());

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 19771 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3658 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[0].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 19781 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3667 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 19787 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3669 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 19793 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3678 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 19799 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3683 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= new (YYTHD->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 19809 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3689 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 19819 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3698 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= new (YYTHD->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 19829 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3706 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 19835 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3708 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 19841 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3710 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 19847 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3712 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 19853 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3714 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 19859 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3716 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 19865 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3718 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 19871 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3720 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 19877 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3722 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 19883 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3724 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 19889 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3726 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 19895 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3728 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 19901 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3730 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 19907 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3735 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 19931 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3755 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 19955 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3778 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NULL; }
#line 19961 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3780 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.push_expr_start_ptr(YY_TOKEN_END); }
#line 19967 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 3782 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 19973 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3803 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 19979 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3805 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 19989 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3813 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(lip->get_tok_start());
          }
#line 20003 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3823 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            YY_TOKEN_END);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                new (thd->mem_root)
                  sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 20051 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3870 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);

            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20065 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3880 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != SP_TYPE_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              new (thd->mem_root)
                sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                 sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 20113 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3926 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
#line 20128 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3937 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 20141 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3949 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            uint n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20201 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 4008 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            uint n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i=
              new (thd->mem_root) sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20252 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 4058 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i=
              new (thd->mem_root)
                sp_instr_copen(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20277 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 4082 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i=
              new (thd->mem_root)
                sp_instr_cfetch(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20302 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 4103 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 20308 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 4108 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              new (thd->mem_root)
                sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20333 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 4138 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 20355 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 4156 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 20377 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 4176 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20390 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 4185 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex,
                                     (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 20430 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 4221 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i =
              new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
#line 20453 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 4240 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 20466 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 4263 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20481 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 4274 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              new (thd->mem_root)
                sp_instr_set_case_expr(sp->instructions(), lex,
                                       case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 20526 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 4318 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, true);
          }
#line 20534 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 4325 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 20542 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 4332 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 20550 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 4349 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20563 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 4358 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Simple case: <caseval> = <whenval> */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              new (thd->mem_root)
                sp_instr_jump_case_when(sp->instructions(), lex,
                                        pctx->get_current_case_expr_id(),
                                        (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 20607 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 4399 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 20616 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 4407 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20629 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 4416 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 20668 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 4452 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 20677 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 4460 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              new (thd->mem_root)
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20695 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 4478 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 20717 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4496 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 20738 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4515 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_lex_str; }
#line 20744 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4516 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 20750 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4521 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 20770 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4537 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 20789 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4554 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 20804 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4565 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 20813 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4573 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 20830 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4588 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i=
                new (thd->mem_root) sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i=
                new (thd->mem_root)
                  sp_instr_cpop(sp->instructions(), pctx, (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 20866 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4624 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
                new (thd->mem_root)
                  sp_instr_jump(sp->instructions(), pctx,
                                pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 20885 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4639 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20898 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4648 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 20938 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4686 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
              new (thd->mem_root)
                sp_instr_jump(sp->instructions(), pctx, pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 20958 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4702 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
#line 20971 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4711 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                     pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 21012 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4752 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 21018 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4754 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 21024 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 4759 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 21030 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4761 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 21036 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4763 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 21042 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 4797 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21048 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 4799 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].lex_str).str;
          }
#line 21057 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 4809 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 21065 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 4815 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 21073 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 4838 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21079 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4936 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 21088 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4944 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 21097 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4952 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 21106 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4960 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 21119 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4972 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 21132 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4984 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 21141 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4989 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 21150 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4994 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 21159 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 5002 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 21168 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 5010 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 21177 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 5018 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 21186 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 5026 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 21195 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 5034 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 21204 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 5042 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 21213 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 5050 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 21227 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 5063 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 21241 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 5076 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 21256 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 5090 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 21265 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 5095 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 21279 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 5107 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 21285 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 5109 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[0].lex_str).str;
            uint str_len= (yyvsp[0].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 21333 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 5159 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21339 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 5162 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21345 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 5164 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
#line 21364 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 5179 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
#line 21383 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 5198 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21389 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 5201 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 21395 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 5202 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21401 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 5206 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21407 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 5208 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(0);}
#line 21413 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 5209 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21419 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 5211 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 21425 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 5212 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21431 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 5217 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 21445 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 5253 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21451 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 5259 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            }
          }
#line 21469 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 5277 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_STRING partition_name={C_STRING_WITH_LEN("partition")};
            if (!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN))
            {
              my_error(ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                      "--skip-partition");
              MYSQL_YYABORT;
            }
#else
            my_error(ER_FEATURE_DISABLED, MYF(0), "partitioning",
                    "--with-plugin-partition");
            MYSQL_YYABORT;
#endif
          }
#line 21489 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 5296 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_parse_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 21506 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 5308 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21512 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 5317 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 21523 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 5324 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= HASH_PARTITION; }
#line 21529 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 5325 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21535 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 5327 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 21541 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 5329 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 21547 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 5331 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 21553 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 5333 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 21559 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 5337 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21565 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 5339 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->linear_hash_ind= TRUE;}
#line 21571 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 5344 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 21577 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 5346 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 21595 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 5362 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21601 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 5363 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21607 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 5367 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21613 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 5368 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21619 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 5373 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[0].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
#line 21639 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 5392 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 21649 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 5402 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->set_part_expr((yyvsp[-3].simple_string)+1, (yyvsp[-2].item), (yyvsp[-1].simple_string), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 21661 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 5413 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->part_info->set_part_expr((yyvsp[-3].simple_string)+1, (yyvsp[-2].item), (yyvsp[-1].simple_string), TRUE))
            { MYSQL_YYABORT; }
          }
#line 21670 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 5421 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21676 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 5423 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 21693 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 507:
#line 5438 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21699 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 5440 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 21705 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 5441 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21711 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 5444 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 21721 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 5449 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21727 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 512:
#line 5453 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21733 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 5454 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21739 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 5459 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[0].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
#line 21758 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 5477 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 21775 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 5492 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21781 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 5494 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 21797 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 5509 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
#line 21817 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 5525 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 21840 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 5546 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21846 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 5547 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21852 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5552 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 21872 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 5571 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21878 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5576 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            p_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 21888 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5585 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 21914 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5607 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 21934 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5622 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21940 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5624 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 21960 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5639 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21966 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5644 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
#line 21992 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5665 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 21998 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5670 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST [COLUMNS] partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
#line 22031 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5699 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_parse_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 22044 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5710 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22050 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5711 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22056 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5716 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
#line 22072 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5727 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22078 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5729 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 22103 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 5752 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22109 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 5753 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22115 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5758 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_parse_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
#line 22132 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5771 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (!lex->safe_to_cache_query)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
#line 22152 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5791 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 22170 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5805 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 22197 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5830 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22203 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 5831 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22209 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5836 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 22246 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5868 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22252 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 5873 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str; }
#line 22258 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5877 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22264 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5878 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22270 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5882 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22276 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5883 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22282 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5888 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 22288 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5890 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 22298 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5896 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 22304 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5898 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 22310 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5900 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 22316 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5902 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 22322 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5904 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 22328 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5906 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 22334 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5915 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 22353 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5930 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 22361 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5934 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
#line 22373 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5944 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22379 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5945 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22385 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5949 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22391 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5950 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22397 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5954 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22403 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5955 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22409 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5959 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22415 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5960 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22421 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5964 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 22427 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5965 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[0].num);}
#line 22433 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5969 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=(yyvsp[0].num); }
#line 22439 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5970 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 22445 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5974 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
#line 22451 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5978 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 22457 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5979 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
#line 22463 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 6000 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.db_type= (yyvsp[0].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 22472 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 6005 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 22481 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 6010 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 22490 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 6015 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 22499 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 6020 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 22508 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 6025 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 22517 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 6030 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 22526 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 6035 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 22545 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 6050 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 22555 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 6056 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 22574 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 6071 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 22583 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 6076 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 22602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 6091 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 22612 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 6097 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 22634 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 6115 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 22643 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 6120 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 22652 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 6125 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 22661 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 6130 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 22670 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 6135 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 22679 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 6140 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
#line 22687 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 6144 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 22713 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 6168 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 22722 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 6173 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 22731 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 6178 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 22740 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 6183 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.tablespace= (yyvsp[0].lex_str).str;}
#line 22746 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 6185 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_DISK;}
#line 22752 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 6187 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 22758 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 6189 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 22768 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 6195 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 22777 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 6203 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[0].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[0].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[0].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 22796 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 6221 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[0].charset) &&
                 !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[0].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 22814 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 6238 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[0].lex_str),
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[0].lex_str).str);
            }
          }
#line 22841 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 6264 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[0].lex_str),
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 22860 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 6281 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 22866 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 6282 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 22872 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 6283 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 22878 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 6284 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 22884 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 6285 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 22890 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 6286 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 22896 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 6287 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_UNCOMPRESSED; }
#line 22902 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6288 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_ZLIB; }
#line 22908 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 6289 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_QUICKLZ; }
#line 22914 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 6290 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_LZMA; }
#line 22920 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 6291 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_FAST; }
#line 22926 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6292 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_TOKU_SMALL; }
#line 22932 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6296 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 22938 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6297 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 22944 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6298 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 22950 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6302 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22956 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6307 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 22962 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6308 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 22968 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6309 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 22974 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6310 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 22980 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6316 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 22988 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6334 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
#line 22996 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6341 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index (Lex, (yyvsp[-6].key_type), (yyvsp[-5].lex_str)))
              MYSQL_YYABORT;
          }
#line 23005 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6347 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index (Lex, (yyvsp[-7].key_type), (yyvsp[-5].lex_str)))
              MYSQL_YYABORT;
          }
#line 23014 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6353 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_create_index (Lex, (yyvsp[-7].key_type), (yyvsp[-5].lex_str)))
              MYSQL_YYABORT;
          }
#line 23023 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6359 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (((yyvsp[-7].lex_str).length != 0)
                 && ((enum Key::Keytype)(yyvsp[-6].key_type) == (Key::CLUSTERING | Key::MULTIPLE)))
            {
              /* Forbid "CONSTRAINT c CLUSTERING" */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (add_create_index (Lex, (yyvsp[-6].key_type), (yyvsp[-5].lex_str).str ? (yyvsp[-5].lex_str) : (yyvsp[-7].lex_str)))
              MYSQL_YYABORT;
          }
#line 23039 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6371 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[-4].lex_str).str ? (yyvsp[-4].lex_str) : (yyvsp[-7].lex_str), lex->col_list,
                                      (yyvsp[0].table)->db,
                                      (yyvsp[0].table)->table,
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, Key::MULTIPLE, (yyvsp[-7].lex_str).str ? (yyvsp[-7].lex_str) : (yyvsp[-4].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= Alter_info::ADD_FOREIGN_KEY;
          }
#line 23062 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6390 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
#line 23070 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6405 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_lex_str; }
#line 23076 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6406 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 23082 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6410 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 23088 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6415 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
          }
#line 23101 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6424 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[-3].lex_str), (enum enum_field_types) (yyvsp[-1].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value, 
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
#line 23116 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6437 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=(yyvsp[-2].num); }
#line 23122 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6438 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=(yyvsp[-2].num); }
#line 23128 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6439 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_FLOAT; }
#line 23134 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6441 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
#line 23143 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6446 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)=MYSQL_TYPE_BIT;
          }
#line 23151 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6450 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
#line 23160 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6455 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
#line 23169 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6460 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)=MYSQL_TYPE_STRING;
          }
#line 23177 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6464 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
          }
#line 23186 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6469 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
#line 23195 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6474 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
#line 23205 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6480 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
#line 23214 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6485 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
#line 23224 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6491 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
#line 23232 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6495 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
#line 23241 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6500 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
#line 23250 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6505 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->length)
            {
              errno= 0;
              ulong length= strtoul(Lex->length, NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                /* Reset unsupported positive column width to default value */
                Lex->length= NULL;
                push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                    ER_INVALID_YEAR_COLUMN_LENGTH,
                                    ER(ER_INVALID_YEAR_COLUMN_LENGTH),
                                    length);
              }
            }
            (yyval.num)=MYSQL_TYPE_YEAR;
          }
#line 23272 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6523 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_DATE; }
#line 23278 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6525 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= MYSQL_TYPE_TIME2; }
#line 23284 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6527 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.num)=MYSQL_TYPE_DATETIME2;
            else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                This behavior is deprecated now.
              */
              if (!YYTHD->variables.explicit_defaults_for_timestamp)
                Lex->type|= NOT_NULL_FLAG;

              (yyval.num)=MYSQL_TYPE_TIMESTAMP2;
            }
          }
#line 23304 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6543 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= MYSQL_TYPE_DATETIME2; }
#line 23310 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6545 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
#line 23319 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6550 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
#line 23328 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6555 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[0].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
#line 23344 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6567 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
#line 23353 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6572 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
#line 23362 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6577 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
#line 23371 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6582 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
#line 23377 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6584 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_TINY_BLOB; }
#line 23383 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6586 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_BLOB; }
#line 23389 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6588 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
#line 23395 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6590 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_LONG_BLOB; }
#line 23401 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6592 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
#line 23407 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6594 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
#line 23413 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6596 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
#line 23419 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6598 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->interval_list.empty();}
#line 23425 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6600 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_ENUM; }
#line 23431 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->interval_list.empty();}
#line 23437 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6604 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_SET; }
#line 23443 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6606 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
#line 23449 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6608 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
#line 23459 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6616 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_GEOMETRY; }
#line 23465 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6617 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 23471 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6619 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->length= (char*)"25";
            (yyval.num)= Field::GEOM_POINT;
          }
#line 23480 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6623 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
#line 23486 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6624 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_LINESTRING; }
#line 23492 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6625 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
#line 23498 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6626 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_POLYGON; }
#line 23504 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6627 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
#line 23510 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6631 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23516 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6635 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23522 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6636 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23528 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6640 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23534 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6641 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23540 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6645 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23546 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6646 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23552 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6647 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23558 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6648 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23564 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6649 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23570 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6653 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_LONG; }
#line 23576 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6654 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_TINY; }
#line 23582 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6655 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_SHORT; }
#line 23588 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6656 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_INT24; }
#line 23594 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6657 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
#line 23600 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6662 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
#line 23609 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6667 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
#line 23615 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6669 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
#line 23621 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6674 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->dec=Lex->length= (char*)0; }
#line 23627 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6676 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->dec= (char*)0; }
#line 23633 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6678 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23639 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6683 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->length=(yyvsp[-3].lex_str).str;
            lex->dec=(yyvsp[-1].lex_str).str;
          }
#line 23649 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6692 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->dec= (char *) 0; }
#line 23655 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6693 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->dec= (yyvsp[-1].lex_str).str; }
#line 23661 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6697 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 23667 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6698 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 23673 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6700 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lex_str).str, NULL, &error);
           }
#line 23682 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6707 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23688 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6708 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23694 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6712 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23700 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6713 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23706 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6717 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23712 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6718 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= UNSIGNED_FLAG;}
#line 23718 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6719 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 23724 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6723 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->length= (yyvsp[-1].lex_str).str; }
#line 23730 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6724 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->length= (yyvsp[-1].lex_str).str; }
#line 23736 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6725 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->length= (yyvsp[-1].lex_str).str; }
#line 23742 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6726 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->length= (yyvsp[-1].lex_str).str; }
#line 23748 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6729 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->length=(char*) 0; /* use default length */ }
#line 23754 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6730 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 23760 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6734 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23766 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6735 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23772 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6739 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23778 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6740 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23784 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6744 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23790 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6749 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type&= ~ NOT_NULL_FLAG; }
#line 23796 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6750 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= NOT_NULL_FLAG; }
#line 23802 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6751 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->default_value=(yyvsp[0].item); }
#line 23808 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6752 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->on_update_value= (yyvsp[0].item); }
#line 23814 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6753 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 23820 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6755 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 23830 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6761 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 23840 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6767 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if ((yyvsp[0].key_type) & Key::UNIQUE)
              lex->type|= UNIQUE_FLAG; 
            if ((yyvsp[0].key_type) & Key::CLUSTERING)
              lex->type|= CLUSTERING_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 23853 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6776 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if ((yyvsp[-1].key_type) & Key::UNIQUE)
              lex->type|= UNIQUE_KEY_FLAG; 
            if ((yyvsp[-1].key_type) & Key::CLUSTERING)
              lex->type|= CLUSTERING_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX; 
          }
#line 23866 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6784 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->comment= (yyvsp[0].lex_str); }
#line 23872 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6786 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[0].charset);
            }
          }
#line 23889 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6799 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DEFAULT << FIELD_FLAGS_COLUMN_FORMAT);
          }
#line 23899 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6805 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_FIXED << FIELD_FLAGS_COLUMN_FORMAT);
          }
#line 23909 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6811 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DYNAMIC << FIELD_FLAGS_COLUMN_FORMAT);
          }
#line 23919 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6817 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DEFAULT << FIELD_FLAGS_STORAGE_MEDIA);
          }
#line 23928 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6822 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DISK << FIELD_FLAGS_STORAGE_MEDIA);
          }
#line 23937 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6827 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_MEMORY << FIELD_FLAGS_STORAGE_MEDIA);
          }
#line 23946 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6836 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.num)= (yyvsp[-1].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[0].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
#line 23967 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6857 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[0].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 23977 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6866 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 23983 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6870 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23989 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6871 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23995 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6876 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 24007 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6883 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 24013 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6887 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 24019 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6888 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 24025 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6892 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 24031 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6893 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 24037 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6898 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 24050 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6906 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 24056 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6910 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 24062 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6911 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 24068 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6916 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str)))
              MYSQL_YYABORT;
          }
#line 24077 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6923 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 24083 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6924 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 24089 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6928 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 24095 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6929 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 24101 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6933 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24107 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6934 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24113 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6939 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= &my_charset_latin1; }
#line 24119 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6941 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_latin1_bin;
          }
#line 24127 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6945 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_latin1_bin;
          }
#line 24135 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6952 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                     MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 24148 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6961 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 24157 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6966 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 24166 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6973 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset=NULL; }
#line 24172 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6976 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset=&my_charset_bin; }
#line 24178 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6977 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset=(yyvsp[-1].charset); }
#line 24184 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6979 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= NULL;
            Lex->type|= BINCMP_FLAG;
          }
#line 24193 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6984 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= (yyvsp[0].charset);
            Lex->type|= BINCMP_FLAG;
          }
#line 24202 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6991 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24208 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6992 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= BINCMP_FLAG; }
#line 24214 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6997 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            my_parse_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
#line 24226 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 7005 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 24232 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 7009 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 24238 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 7010 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 24244 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 7014 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 24250 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 7017 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 24256 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 7018 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 24262 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 7019 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 24268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 7020 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 24274 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 7025 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 24283 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 7033 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 24291 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 7039 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 24297 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 7040 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 24303 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 7045 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 24314 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 7054 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 24320 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 7055 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 24326 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 7059 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 24332 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 7060 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 24338 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7074 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 24346 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7081 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ref_list.empty(); }
#line 24352 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7087 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[0].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
#line 24363 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7094 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[0].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
#line 24376 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7106 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 24382 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 7108 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 24388 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7110 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 24394 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7112 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 24400 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7117 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
#line 24410 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7123 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
#line 24420 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 7129 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 24430 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7136 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 24440 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7143 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 24450 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7151 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_RESTRICT; }
#line 24456 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7152 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_CASCADE; }
#line 24462 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7153 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_SET_NULL; }
#line 24468 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7154 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_NO_ACTION; }
#line 24474 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7155 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_DEFAULT;  }
#line 24480 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7159 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 24486 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7163 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::PRIMARY; }
#line 24492 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7164 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= (yyvsp[-1].key_type); }
#line 24498 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7169 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24504 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7170 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24510 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7174 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24516 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7179 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24522 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7180 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24528 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7181 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24534 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7185 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 24540 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7191 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= (enum Key::Keytype)((yyvsp[0].key_type) | Key::MULTIPLE);
          }
#line 24548 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7195 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= (yyvsp[0].key_type);
          }
#line 24556 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7202 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.key_type)= (yyvsp[0].key_type); 
          }
#line 24564 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7206 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= (enum Key::Keytype)((yyvsp[-1].key_type) | (yyvsp[0].key_type));
          }
#line 24572 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7210 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= (enum Key::Keytype)((yyvsp[-1].key_type) | (yyvsp[0].key_type));
          }
#line 24580 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7216 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 24586 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7220 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::CLUSTERING; }
#line 24592 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7224 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::FULLTEXT;}
#line 24598 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7229 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
#line 24612 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7241 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->key_create_info= default_key_create_info;
          }
#line 24620 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7258 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24626 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7263 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24632 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24638 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7288 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 24644 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7289 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 24650 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7294 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->key_create_info.block_size= (yyvsp[0].ulong_num); }
#line 24656 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7295 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->key_create_info.comment= (yyvsp[0].lex_str); }
#line 24662 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7310 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (plugin_is_ready(&(yyvsp[0].lex_str), MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[0].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 24676 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7322 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 24682 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7323 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 24688 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7324 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 24694 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7328 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->col_list.push_back((yyvsp[-1].key_part)); }
#line 24700 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7329 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->col_list.push_back((yyvsp[-1].key_part)); }
#line 24706 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7334 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[0].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 24716 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7340 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-3].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[-3].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 24731 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7353 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_lex_str; }
#line 24737 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7354 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 24743 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7358 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_lex_str; }
#line 24749 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7359 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 24755 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7363 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->interval_list.push_back((yyvsp[0].string)); }
#line 24761 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7364 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->interval_list.push_back((yyvsp[0].string)); }
#line 24767 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7372 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR; 
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex.init_order();
            lex->select_lex.db= (lex->select_lex.table_list.first)->db;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
            if (lex->ignore)
            {
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                                  ER(ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT),
                                  "IGNORE");
            }
          }
#line 24804 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7405 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
#line 24820 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7417 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 24829 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7422 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 24842 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7431 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].lex_str);
          }
#line 24857 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7442 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 24872 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7453 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 24883 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7460 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 24898 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7471 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 24909 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7478 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
#line 24924 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7489 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24930 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7496 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
#line 24946 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7508 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24952 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7510 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
#ifdef WITH_WSREP
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
#endif
          }
#line 24975 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7533 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
#ifdef WITH_WSREP
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();
#endif
          }
#line 24995 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7549 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 25004 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7554 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 25013 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7559 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 25022 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7564 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 25031 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7569 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.server_name= (yyvsp[-4].lex_str).str;
            lex->server_options.server_name_length= (yyvsp[-4].lex_str).length;
          }
#line 25042 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7576 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 25050 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7583 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)))
              MYSQL_YYABORT;
        }
#line 25059 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7588 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)))
              MYSQL_YYABORT;
          }
#line 25068 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7595 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 25074 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7596 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25080 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7597 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25086 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7598 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25092 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 25098 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7604 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 25111 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7615 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 25117 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7616 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25123 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7620 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
#line 25129 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7621 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 25135 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7627 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25147 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7635 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25159 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7657 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
          }
#line 25167 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7662 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 25177 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7669 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25193 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7683 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25209 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7695 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25224 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7708 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25240 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7721 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 25251 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7728 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25266 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7741 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[-1].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[-1].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25294 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7768 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
#line 25302 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7775 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
#line 25310 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7783 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= Alter_info::ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 25326 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7795 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25332 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7801 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 25341 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7806 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 25349 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7813 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 25364 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7828 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
#line 25372 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7832 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;
          }
#line 25380 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7836 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 25389 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7843 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25395 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7844 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25401 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7849 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->alter_info.partition_names.push_back((yyvsp[0].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
#line 25413 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7869 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
#line 25423 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7878 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
#line 25431 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7882 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 25440 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7887 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN |
                                    Alter_info::ALTER_ADD_INDEX;
          }
#line 25449 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7892 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[0].lex_str).str;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
#line 25459 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7898 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
#line 25467 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7902 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
#line 25480 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7911 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[-3].lex_str),
                                  (enum enum_field_types) (yyvsp[-1].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[-3].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
#line 25496 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7923 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
#line 25504 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7927 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
#line 25517 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7936 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
#line 25530 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7945 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
#line 25543 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7954 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
#line 25556 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7963 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
#line 25566 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7969 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
#line 25576 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7975 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[-3].lex_str).str,(yyvsp[0].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
#line 25589 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7984 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[-2].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
#line 25602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7993 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[0].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            enum_ident_name_check ident_check_status=
              check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length, FALSE);
            if (ident_check_status == IDENT_NAME_WRONG)
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str);
              MYSQL_YYABORT;
            }
            else if (ident_check_status == IDENT_NAME_TOO_LONG)
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].table)->table.str);
              MYSQL_YYABORT;
            }
            if ((yyvsp[0].table)->db.str &&
                (check_and_convert_db_name(&(yyvsp[0].table)->db, FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
#line 25634 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 8021 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[0].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_CONVERT;
          }
#line 25659 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 8042 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
#line 25673 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 8052 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
#line 25681 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 8056 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
#line 25690 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 8073 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 25699 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 8078 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->alter_info.set_requested_algorithm(&(yyvsp[0].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 25711 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 8089 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 25720 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 8094 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->alter_info.set_requested_lock(&(yyvsp[0].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 25732 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 8104 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25738 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 8105 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25744 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 8109 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 25750 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 8110 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 25756 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 8114 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_DEFAULT; }
#line 25762 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 8115 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_RESTRICT; }
#line 25768 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 8116 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_CASCADE; }
#line 25774 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 8120 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25780 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 8122 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            store_position_for_column((yyvsp[0].lex_str).str);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
#line 25789 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 8127 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            store_position_for_column(first_keyword);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
#line 25798 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 8134 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25804 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 8135 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25810 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 8136 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25816 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 8137 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25822 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 8142 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 25837 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 8154 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 25858 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 8171 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 25869 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 8181 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 25886 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 8197 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 25894 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 8201 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 25902 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 8208 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 25910 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 8212 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 25918 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 8219 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 25926 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 8223 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
            Lex->value_list.empty();
            Lex->value_list.push_front((yyvsp[0].item));
          }
#line 25936 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 8229 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 25944 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 8233 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 25952 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 8244 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 25960 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 8248 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lex_str).str;
          }
#line 25968 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 8254 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 25976 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 8258 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 25985 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 8264 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 25993 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lex_str).str;
          }
#line 26001 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8274 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 26009 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8278 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lex_str).str;
          }
#line 26017 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8285 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 26025 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8289 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 26033 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8296 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 26041 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8300 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 26049 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8307 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 26057 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8311 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 26065 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 8317 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26071 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8319 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
          }
#line 26097 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8346 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 26106 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8351 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 26115 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8356 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 26123 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8363 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 26134 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8370 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26140 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8374 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= 0; }
#line 26146 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8375 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_QUICK; }
#line 26152 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8376 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_EXTEND; }
#line 26158 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8381 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 26172 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8391 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26185 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8402 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 26191 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8403 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26197 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8407 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26203 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8408 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26209 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8412 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 26215 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8413 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 26221 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8414 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 26227 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8419 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 26241 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8429 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26254 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8441 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
          }
#line 26263 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8449 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 26282 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8464 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26295 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8475 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 26301 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8476 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26307 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8480 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26313 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8481 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26319 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8485 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 26325 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8486 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_FAST; }
#line 26331 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8487 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_MEDIUM; }
#line 26337 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8488 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 26343 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8489 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 26349 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8490 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 26355 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8495 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 26369 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8505 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26382 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8516 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26388 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8517 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 26394 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8518 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 26400 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8523 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 26408 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8527 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26414 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8529 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 26422 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8536 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 26431 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8541 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 26440 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8554 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 26454 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8567 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.reset();
          }
#line 26462 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8571 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 26472 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8590 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-1].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 26483 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8600 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), NULL, 0, TL_READ, 
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 26494 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8609 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 26500 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8610 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 26506 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8615 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
#line 26516 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8621 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26522 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8636 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 26533 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8646 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 26544 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8656 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
#line 26552 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8663 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.alloc_index_hints(YYTHD);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        old_mode ? 
                                        INDEX_HINT_MASK_JOIN : 
                                        INDEX_HINT_MASK_ALL);
          }
#line 26564 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8674 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26570 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8680 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26576 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8681 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 26582 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8691 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
          }
#line 26591 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8705 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
#line 26600 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8715 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
#line 26609 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8724 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 26629 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8743 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 26641 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8751 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 26649 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8758 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26655 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8768 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 26665 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8783 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Select->options & SELECT_DISTINCT && Select->options & SELECT_ALL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              MYSQL_YYABORT;
            }
          }
#line 26677 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8800 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=0;
              Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
            }
          }
#line 26709 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8828 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }         
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=1;
              Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
            }
          }
#line 26741 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8860 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->set_lock_for_tables(TL_WRITE);
            lex->safe_to_cache_query=0;
          }
#line 26751 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8866 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
            lex->safe_to_cache_query=0;
          }
#line 26762 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8878 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root)
                          Item_field(&thd->lex->current_select->context,
                                     NULL, NULL, "*");
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_item_to_list(thd, item))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 26778 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8893 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (add_item_to_list(thd, (yyvsp[-1].item)))
              MYSQL_YYABORT;
          }
#line 26789 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8900 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (add_item_to_list(thd, (yyvsp[-2].item)))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (Lex->sql_command == SQLCOM_CREATE_VIEW &&
                  check_column_name((yyvsp[0].lex_str).str))
              {
                my_error(ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyvsp[-2].item)->item_name.copy((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info, false);
            }
            else if (!(yyvsp[-2].item)->item_name.is_set())
            {
              (yyvsp[-2].item)->item_name.copy((yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 26815 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8924 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 26823 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8930 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end();
          }
#line 26831 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8936 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_lex_str;}
#line 26837 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8937 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 26843 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8938 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 26849 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8939 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 26855 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8940 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 26861 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8944 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26867 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8945 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26873 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8951 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item));
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item));
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_or((yyvsp[-2].item), (yyvsp[0].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
#line 26928 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 9002 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = new (YYTHD->mem_root) Item_func_xor((yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 26939 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 9009 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item));
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item));
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_and((yyvsp[-2].item), (yyvsp[0].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
#line 26986 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 9052 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 26996 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 9058 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_istrue((yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27006 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 9064 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnottrue((yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27016 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 9070 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isfalse((yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27026 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 9076 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotfalse((yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27036 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 9082 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27046 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 9088 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27056 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 9098 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27066 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 9104 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27076 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 9110 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_equal((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27086 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 9116 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27096 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 9122 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= all_any_subquery_creator((yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27106 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 9132 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_in_subselect((yyvsp[-4].item), (yyvsp[-1].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27116 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 9138 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root) Item_in_subselect((yyvsp[-5].item), (yyvsp[-1].select_lex));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27130 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 9148 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27140 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 9154 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item));
            (yyval.item)= new (YYTHD->mem_root) Item_func_in(*(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27152 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9162 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27162 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9168 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item));
            Item_func_in *item = new (YYTHD->mem_root) Item_func_in(*(yyvsp[-1].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
#line 27176 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9178 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_between((yyvsp[-4].item),(yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27186 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9184 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_between *item;
            item= new (YYTHD->mem_root) Item_func_between((yyvsp[-5].item),(yyvsp[-2].item),(yyvsp[0].item));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
#line 27199 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9193 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= new (YYTHD->mem_root) Item_func_soundex((yyvsp[-3].item));
            Item *item4= new (YYTHD->mem_root) Item_func_soundex((yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_eq(item1, item4);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27213 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9203 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_like((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[0].item),Lex->escape_used);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27223 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9209 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (YYTHD->mem_root) Item_func_like((yyvsp[-4].item),(yyvsp[-1].item),(yyvsp[0].item),
                                                             Lex->escape_used);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_not(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27237 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9219 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_regex((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27247 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9225 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (YYTHD->mem_root) Item_func_regex((yyvsp[-3].item),(yyvsp[0].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(YYTHD, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27260 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9238 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_or((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27270 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9244 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_and((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27280 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9250 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_left((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27290 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9256 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_right((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27300 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9262 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_plus((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27310 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minus((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27320 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9274 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-4].item),(yyvsp[-1].item),(yyvsp[0].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27330 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9280 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-4].item),(yyvsp[-1].item),(yyvsp[0].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27340 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9286 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mul((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27350 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9292 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_div((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27360 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9298 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27370 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9304 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_int_div((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27380 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9310 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27390 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9316 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_xor((yyvsp[-2].item),(yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27400 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9345 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 27406 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9346 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 27412 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9347 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 27418 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9348 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 27424 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9349 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 27430 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 9350 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 27436 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9354 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 27442 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9355 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 27448 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9365 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_string((yyvsp[0].lex_str).str,
                                                      (yyvsp[0].lex_str).length,
                                                      thd->charset());
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_set_collation((yyvsp[-2].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27464 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9381 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_concat((yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27474 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9387 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 27482 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9391 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_neg((yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27492 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9397 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_neg((yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27502 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9403 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27512 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9409 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.item)= new (YYTHD->mem_root) Item_singlerow_subselect((yyvsp[-1].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27522 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9415 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 27528 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9417 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27539 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9424 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27550 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9431 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_exists_subselect((yyvsp[-1].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27560 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9437 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *item;
            (yyval.item)= NULL;
            /*
              If "expr" is reasonably short pure ASCII string literal,
              try to parse known ODBC style date, time or timestamp literals,
              e.g:
              SELECT {d'2001-01-01'};
              SELECT {t'10:20:30'};
              SELECT {ts'2001-01-01 10:20:30'};
            */
            if ((yyvsp[-1].item)->type() == Item::STRING_ITEM &&
               (item= (Item_string *) (yyvsp[-1].item)) &&
                item->collation.repertoire == MY_REPERTOIRE_ASCII &&
                item->str_value.length() < MAX_DATE_STRING_REP_LENGTH * 4)
            {
              enum_field_types type= MYSQL_TYPE_STRING;
              ErrConvString str(&item->str_value);
              LEX_STRING *ls= &(yyvsp[-2].lex_str);
              if (ls->length == 1)
              {
                if (ls->str[0] == 'd')  /* {d'2001-01-01'} */
                  type= MYSQL_TYPE_DATE;
                else if (ls->str[0] == 't') /* {t'10:20:30'} */
                  type= MYSQL_TYPE_TIME;
              }
              else if (ls->length == 2) /* {ts'2001-01-01 10:20:30'} */
              {
                if (ls->str[0] == 't' && ls->str[1] == 's')
                  type= MYSQL_TYPE_DATETIME;
              }
              if (type != MYSQL_TYPE_STRING)
                (yyval.item)= create_temporal_literal(YYTHD,
                                            str.ptr(), str.length(),
                                            system_charset_info,
                                            type, false);
            }
            if ((yyval.item) == NULL)
              (yyval.item)= (yyvsp[-1].item);
          }
#line 27605 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9478 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item));
            Item_func_match *i1= new (YYTHD->mem_root) Item_func_match(*(yyvsp[-5].item_list), (yyvsp[-1].num));
            if (i1 == NULL)
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(i1);
            (yyval.item)= i1;
          }
#line 27618 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9487 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[0].item), ITEM_CAST_CHAR, NULL, NULL,
                                 &my_charset_bin);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27629 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9494 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[-3].item), (yyvsp[-1].cast_type), lex->length, lex->dec,
                                 lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27641 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9502 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_case(* (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27651 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9508 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[-3].item), (yyvsp[-1].cast_type), Lex->length, Lex->dec,
                                 Lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27662 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9515 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_conv_charset((yyvsp[-3].item),(yyvsp[-1].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27672 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9521 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item)->is_splocal())
            {
              Item_splocal *il= static_cast<Item_splocal *>((yyvsp[-1].item));

              my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->m_name.ptr());
              MYSQL_YYABORT;
            }
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context(),
                                                         (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27690 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9535 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_insert_value(Lex->current_context(),
                                                        (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27701 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9543 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[0].item),(yyvsp[-3].item),(yyvsp[-2].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27711 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9558 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27721 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9564 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27731 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9570 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_current_user(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 27743 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9578 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_typecast((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27753 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9584 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_dayofmonth((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27763 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9590 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_hour((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27773 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9596 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_insert((yyvsp[-7].item),(yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27783 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (list == NULL)
              MYSQL_YYABORT;
            list->push_front((yyvsp[-1].item));
            list->push_front((yyvsp[-3].item));
            Item_row *item= new (thd->mem_root) Item_row(*list);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27802 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9617 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item));
            Item_row *item= new (thd->mem_root) Item_row(*(yyvsp[-1].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27818 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9629 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_left((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27828 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9635 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minute((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27838 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9641 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_month((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27848 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9647 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_right((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27858 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9653 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_second((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27868 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9659 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_time_typecast((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27878 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9665 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_datetime_typecast((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27888 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9671 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_add_time((yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27898 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9677 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27908 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9683 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[-1].item),(yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27918 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9689 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[-1].item),(yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27928 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9695 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[-1].item),(yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27938 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9701 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27948 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9707 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27958 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9713 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27968 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9719 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[-1].item),(yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27978 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9725 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_user();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 27990 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9733 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_year((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28000 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9754 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28011 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9761 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28021 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9767 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28032 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9774 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_local((yyvsp[0].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28043 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9782 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-5].item),(yyvsp[-2].item),(yyvsp[-1].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28053 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9789 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-5].item),(yyvsp[-2].item),(yyvsp[-1].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28063 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9795 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (YYTHD->mem_root) Item_extract( (yyvsp[-3].interval), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28073 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9801 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_format((yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28083 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9807 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
            Lex->safe_to_cache_query= 0;
          }
#line 28092 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9812 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_locate((yyvsp[-1].item),(yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28102 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9818 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28113 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9825 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28123 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9831 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28133 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9837 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28143 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9843 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28153 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9849 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28163 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9855 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (YYTHD->mem_root) Item_func_sysdate_local((yyvsp[0].ulong_num));
            else
              (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[0].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28185 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9873 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[-1].item),(yyvsp[-3].item),(yyvsp[-5].interval_time_st),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28195 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9879 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_timestamp_diff((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28205 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9885 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_utc();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28216 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9892 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_utc((yyvsp[0].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28227 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9899 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_utc((yyvsp[0].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28238 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9914 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ascii((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28248 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9920 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_charset((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28258 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9926 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_coalesce(* (yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9932 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_collation((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28278 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9938 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_database();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 28289 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9945 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_if((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28299 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9951 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28309 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9957 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28319 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 9963 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_microsecond((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28329 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9969 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_mod((yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28339 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9975 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  new (YYTHD->mem_root) Item_func_old_password((yyvsp[-1].item));
            Lex->contains_plaintext_password= true;
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28350 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9982 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item* i1;
            Lex->contains_plaintext_password= true;
            if (thd->variables.old_passwords == 1)
              i1= new (thd->mem_root) Item_func_old_password((yyvsp[-1].item));
            else
              i1= new (thd->mem_root) Item_func_password((yyvsp[-1].item));
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 28367 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9995 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_quarter((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28377 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 10001 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_repeat((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28387 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 10007 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_replace((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28397 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 10013 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_reverse((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28407 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 10019 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_row_count();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 28419 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 10027 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_round((yyvsp[-3].item),(yyvsp[-1].item),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28429 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 10033 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_int(NAME_STRING("0"),
                                           thd->variables.default_week_format,
                                                   1);
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_week((yyvsp[-1].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28445 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 10045 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_week((yyvsp[-3].item),(yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28455 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 10051 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28465 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 10057 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string((yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28477 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 10065 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (YYTHD->mem_root) Item_char_typecast((yyvsp[-4].item), (yyvsp[-1].ulong_num), &my_charset_bin);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string(item, 0, (yyvsp[-1].ulong_num), MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28491 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 10075 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28501 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 10081 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
#line 28518 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 10097 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_mbr_rel((yyvsp[-3].item), (yyvsp[-1].item),
                                               Item_func::SP_CONTAINS_FUNC));
          }
#line 28528 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 10103 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 28539 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 10110 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 28550 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 10117 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 28561 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 10124 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 28572 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 10131 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 28583 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 10138 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD, Item_func_point((yyvsp[-3].item),(yyvsp[-1].item)));
          }
#line 28591 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 10142 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 28602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 10161 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (lex->current_select->inc_in_sum_expr())
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 28625 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 10180 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Create_func *builder;
            Item *item= NULL;

            if (sp_check_name(&(yyvsp[-4].lex_str)))
            {
              MYSQL_YYABORT;
            }

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, (yyvsp[-4].lex_str));
            if (builder)
            {
              item= builder->create_func(thd, (yyvsp[-4].lex_str), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, (yyvsp[-4].lex_str), (yyvsp[-1].item_list));
              }
            }

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
#line 28683 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 10234 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Create_qfunc *builder;
            Item *item= NULL;

            /*
              The following in practice calls:
              <code>Create_sp_func::create()</code>
              and builds a stored function.

              However, it's important to maintain the interface between the
              parser and the implementation in item_create.cc clean,
              since this will change with WL#2128 (SQL PATH):
              - INFORMATION_SCHEMA.version() is the SQL 99 syntax for the native
              function version(),
              - MySQL.version() is the SQL 2003 syntax for the native function
              version() (a vendor can specify any schema).
            */

            if (!(yyvsp[-5].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-5].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[-3].lex_str)))
            {
              MYSQL_YYABORT;
            }

            builder= find_qualified_function_builder(thd);
            DBUG_ASSERT(builder);
            item= builder->create(thd, (yyvsp[-5].lex_str), (yyvsp[-3].lex_str), true, (yyvsp[-1].item_list));

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
#line 28724 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 10274 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 28730 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 10276 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_BOOL; }
#line 28736 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 10280 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 28742 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 10281 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 28748 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 10285 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 28754 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 10286 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 28760 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 10290 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 28766 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 10291 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 28772 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 10296 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 28783 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 10303 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 28792 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 10311 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->item_name.copy((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info, false);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->item_name.copy((yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), YYTHD->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 28819 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 10337 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[-1].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28829 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 10343 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[-1].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28839 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 10349 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_and((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28849 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 10355 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_or((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28859 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 10361 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_xor((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28869 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 10367 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (YYTHD->mem_root) Item_int((int32) 0L,1);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28882 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 10376 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28892 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 10382 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 28898 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 10384 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr--; }
#line 28904 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 10386 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(* (yyvsp[-2].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28914 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 10392 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28924 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 10403 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28934 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 10409 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28944 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 10415 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28954 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 10421 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[-1].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28964 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 10427 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[-1].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28974 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 10433 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[-1].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28984 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 10439 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[-1].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28994 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 10445 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[-1].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29004 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 10451 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[-1].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29014 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 10457 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 29020 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 10461 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (YYTHD->mem_root)
                  Item_func_group_concat(Lex->current_context(), (yyvsp[-5].num), (yyvsp[-3].item_list),
                                         sel->gorder_list, (yyvsp[-1].string));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            (yyvsp[-3].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 29036 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 10476 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (! Lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 29048 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 10484 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 29056 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 10491 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            (yyval.item)= item=
              new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[-2].lex_str), (yyvsp[0].item), false);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
            lex->set_var_list.push_back(item);
          }
#line 29071 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 10502 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[0].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
          }
#line 29083 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 10510 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* disallow "SELECT @@global.global.variable" */
            if ((yyvsp[-1].lex_str).str && (yyvsp[0].lex_str).str && check_reserved_words(&(yyvsp[-1].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (!((yyval.item)= get_system_var(YYTHD, (yyvsp[-2].var_type), (yyvsp[-1].lex_str), (yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            if (!((Item_func_get_system_var*) (yyval.item))->is_written_to_binlog())
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE);
          }
#line 29100 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 10525 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 29106 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 10526 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 29112 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 10531 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 29122 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 10536 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 29128 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 10542 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
          }
#line 29145 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 10559 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_gorder_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 29151 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 10561 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_gorder_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 29157 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 10566 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->current_select->inc_in_sum_expr())
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 29170 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10575 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 29179 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 10583 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
#line 29185 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10585 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->dec= 0; }
#line 29191 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10587 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
#line 29197 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10589 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
#line 29203 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10591 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
#line 29209 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10593 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
#line 29215 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10595 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
#line 29221 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10597 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)= ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec= Lex->length= (char *) 0; }
#line 29227 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10599 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)= ITEM_CAST_TIME; Lex->charset= NULL; Lex->length= (char *) 0; }
#line 29233 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10601 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)= ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->length= (char *) 0; }
#line 29239 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10603 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cast_type)=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
#line 29245 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10607 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 29251 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10608 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 29257 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10613 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 29268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10620 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 29277 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10627 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 29283 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10628 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 29289 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10633 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 29300 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10640 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 29309 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10647 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 29315 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10648 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 29321 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10652 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 29327 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10653 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 29333 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10658 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 29345 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10666 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 29355 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10676 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 29361 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10678 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              MYSQL_YYABORT;
          }
#line 29371 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10686 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 29377 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10697 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 29383 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10698 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 29389 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10704 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 29395 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10706 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
#line 29403 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10726 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list))); }
#line 29409 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10728 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list))); (yyvsp[0].table_list)->straight=1; }
#line 29415 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10731 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-3].table_list), (yyvsp[-1].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 29427 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10739 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 29437 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10746 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-3].table_list), (yyvsp[-1].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 29449 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10754 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].table_list)->straight=1;
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 29460 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10762 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
          }
#line 29468 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10766 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); (yyval.table_list)=(yyvsp[-5].table_list); }
#line 29474 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10768 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 29483 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10776 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 29495 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10784 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 29507 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10792 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 29515 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10796 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 29525 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10802 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 29536 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10812 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 29548 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10820 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_on((yyval.table_list), (yyvsp[0].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 29561 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10829 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 29569 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10833 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 29580 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10840 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
          }
#line 29592 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10850 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29598 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10851 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29604 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10852 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29610 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10860 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= 0;}
#line 29616 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10866 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 29624 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10880 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
#line 29633 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10885 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.table_list)= Select->add_table_to_list(YYTHD, (yyvsp[-3].table), (yyvsp[-1].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-2].string_list))))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
          }
#line 29648 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10896 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if ((yyvsp[-2].num))
            {
              if (sel->set_braces(1))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              /* select in braces, can't contain global parameters */
              if (sel->master_unit()->fake_select_lex)
                sel->master_unit()->global_parameters=
                   sel->master_unit()->fake_select_lex;
            }
            if ((yyvsp[-1].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
            (yyval.table_list)= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
#line 29674 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10936 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[-2].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-3].select_lex)->embedding &&
                !(yyvsp[-3].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[-2].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new Table_ident(unit);
              if (ti == NULL)
                MYSQL_YYABORT;
              if (!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                               ti, (yyvsp[0].lex_str_ptr), 0,
                                               TL_READ, MDL_SHARED_READ)))

                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if ((yyvsp[0].lex_str_ptr) != NULL)
            {
              /*
                Tables with or without joins within parentheses cannot
                have aliases, and we ruled out derived tables above.
              */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[-2].table_list);
            }
          }
#line 29728 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 11009 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].table_list) && (yyvsp[0].is_not_empty))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 29740 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 11019 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[0].num), FALSE))
              MYSQL_YYABORT;
          }
#line 29749 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 11024 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
             */
            Lex->pop_context();
          }
#line 29761 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 11032 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-6].table_list) != NULL)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 29773 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 11044 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 29793 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 11063 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 29805 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 11071 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 29813 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 11080 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
          }
#line 29823 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 11086 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[-2].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list))
              MYSQL_YYABORT;
            if (!(yyvsp[0].table_list) && (yyval.table_list))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
#line 29841 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 11102 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (!lex->expr_allows_subselect ||
                lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                mysql_new_select(lex, 1))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 29862 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 11119 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 29870 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 11126 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= Select; }
#line 29876 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 11131 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (! lex->parsing_options.allows_derived)
            {
              my_error(ER_VIEW_SELECT_DERIVED, MYF(0));
              MYSQL_YYABORT;
            }

            SELECT_LEX *sel= lex->current_select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
            {
              /* we are not in parentheses */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            embedding= Select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
#line 29903 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 11156 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29909 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 11157 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29915 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 11162 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 29923 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 11165 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 29929 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 11166 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 29935 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 11167 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 29941 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 11171 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 29947 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 11172 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 29953 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 11177 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 29961 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 11182 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 29969 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 11195 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->alloc_index_hints(YYTHD); }
#line 29975 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 11199 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {  Select->clear_index_hints(); }
#line 29981 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 11204 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(YYTHD, NULL, 0); }
#line 29987 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 11205 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29993 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 11210 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
#line 29999 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 11212 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(YYTHD, (char *)"PRIMARY", 7); }
#line 30005 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 11222 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[0].lex_str).str,
                                                    (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
#line 30020 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 11233 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[0].lex_str).str,
                                                    (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[-2].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 30034 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 11245 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30040 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 11246 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 30046 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 11247 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 30052 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 11248 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 30058 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 11249 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 30064 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 11250 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 30070 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 11251 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 30076 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 11252 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 30082 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 11253 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 30088 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 11254 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 30094 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 11255 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 30100 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 11256 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 30106 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 11260 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 30112 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 11261 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 30118 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 11262 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 30124 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 11263 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 30130 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 11264 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 30136 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 11265 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 30142 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 11266 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 30148 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 11267 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 30154 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 11268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 30160 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 11272 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 30166 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 11273 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 30172 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 11274 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 30178 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 11275 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 30184 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 11285 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)=0; }
#line 30190 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 11287 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[0].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
#line 30200 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 11300 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->where= 0; }
#line 30206 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 11302 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_WHERE;
          }
#line 30214 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 11306 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *select= Select;
            select->where= (yyvsp[0].item);
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 30226 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 11318 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_HAVING;
          }
#line 30234 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 11322 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->having= (yyvsp[0].item);
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 30246 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 11333 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[0].item);
          }
#line 30255 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 11338 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string("", 0, &my_charset_latin1) :
                 new (thd->mem_root) Item_string("\\", 1, &my_charset_latin1));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 30269 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 11360 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_group_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 30275 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 11362 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_group_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 30281 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 11366 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30287 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 11368 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= CUBE_TYPE;
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
            MYSQL_YYABORT;
          }
#line 30311 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 11388 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            if (lex->current_select->options & SELECT_DISTINCT)
            {
              // DISTINCT+ROLLUP does not work
              my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP", "DISTINCT");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 30339 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 11428 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (add_order_to_list(thd, (yyvsp[-1].item), ascending))
              MYSQL_YYABORT;
          }
#line 30350 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 11447 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE && !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been created
                yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (!unit->is_union() &&
                  (first_sl->order_list.elements || 
                   first_sl->select_limit) &&            
                  unit->add_fake_select_lex(lex->thd))
                MYSQL_YYABORT;
            }
          }
#line 30385 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 11482 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_order_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 30391 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 11484 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_order_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 30397 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 11488 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =  1; }
#line 30403 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 11489 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =1; }
#line 30409 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 11490 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =0; }
#line 30415 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 11495 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            sel->offset_limit= 0;
            sel->select_limit= 0;
          }
#line 30426 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 11501 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30432 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 11505 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30438 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 11506 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30444 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 11511 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Select->select_limit->fixed &&
                Select->select_limit->val_int() != 0)
            {
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            }
          }
#line 30456 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 11522 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 30467 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 11529 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 30478 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 11536 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 30489 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 11546 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          THD *thd= YYTHD;
          LEX *lex= Lex;
          Lex_input_stream *lip= YYLIP;
          sp_head *sp= lex->sphead;
          const char *query_start_ptr=
            sp ? sp->m_parser_data.get_current_stmt_start_ptr() : NULL;

          Item_splocal *v= create_item_for_sp_var(thd, (yyvsp[0].lex_str), NULL,
                                                  query_start_ptr,
                                                  lip->get_tok_start(),
                                                  lip->get_ptr());
          if (!v)
            MYSQL_YYABORT;

          lex->safe_to_cache_query= false;

          if (v->type() != Item::INT_ITEM)
          {
            my_error(ER_WRONG_SPVAR_TYPE_IN_LIMIT, MYF(0));
            MYSQL_YYABORT;
          }

          v->limit_clause_param= true;
          (yyval.item)= v;
        }
#line 30520 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 11573 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          ((Item_param *) (yyvsp[0].item))->limit_clause_param= TRUE;
        }
#line 30528 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 11577 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 30538 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 11583 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 30548 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 11589 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 30558 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 11598 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 30567 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 11603 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            if (Select->select_limit->fixed &&
                Select->select_limit->val_int() != 0)
            {
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            }
            sel->explicit_limit= 1;
          }
#line 30582 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 11616 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30588 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 11617 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 30594 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 11618 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30600 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 11619 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30606 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 11620 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30612 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 11621 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30618 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 11625 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30624 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 11626 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 30630 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 11627 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30636 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 11628 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30642 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 11629 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 30648 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 11633 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30654 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 11634 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30660 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 11635 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30666 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 11636 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30672 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11637 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30678 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 11641 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30684 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11642 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30690 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11643 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 30696 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11644 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 30702 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11649 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { my_parse_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
#line 30708 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11660 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            
            if (!lex->parsing_options.allows_select_procedure)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            if (&lex->select_lex != lex->current_select)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
              MYSQL_YYABORT;
            }

            if (lex->result != NULL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "INTO");
              MYSQL_YYABORT;
            }

            if ((lex->proc_analyse= new Proc_analyse_params) == NULL)
            {
              my_error(ER_OUTOFMEMORY, MYF(ME_FATALERROR));
              MYSQL_YYABORT;
            }
            
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 30742 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11693 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30748 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11695 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->proc_analyse->max_tree_elements= (yyvsp[0].ulonglong_number);
          }
#line 30756 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11699 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->proc_analyse->max_tree_elements= (yyvsp[-2].ulonglong_number);
            Lex->proc_analyse->max_treemem= (yyvsp[0].ulonglong_number);
          }
#line 30765 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11707 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
            if (error != 0)
            {
              my_error(ER_WRONG_PARAMETERS_TO_PROCEDURE, MYF(0), "ANALYSE");
              MYSQL_YYABORT;
            }
          }
#line 30779 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11719 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe && (!(lex->result= new select_dumpvar())))
              MYSQL_YYABORT;
          }
#line 30789 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 11725 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30795 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11730 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30801 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11735 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->result) 
            {
              my_var *var= new my_var((yyvsp[0].lex_str),0,0,(enum_field_types)0);
              if (var == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)lex->result)->var_list.push_back(var);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
#line 30824 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11754 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
#ifndef DBUG_OFF
            sp_head *sp= lex->sphead;
#endif
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            if (lex->result)
            {
              my_var *var= new my_var((yyvsp[0].lex_str), 1, spv->offset, spv->type);

              if (var == NULL)
                MYSQL_YYABORT;

              ((select_dumpvar *) lex->result)->var_list.push_back(var);

#ifndef DBUG_OFF
              var->sp= sp;
#endif
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
#line 30864 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11793 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (! Lex->parsing_options.allows_select_into)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "INTO");
              MYSQL_YYABORT;
            }
          }
#line 30876 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11805 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str, 0)) ||
                !(lex->result= new select_export(lex->exchange)))
              MYSQL_YYABORT;
          }
#line 30888 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11813 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 30894 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11816 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str,1)))
                MYSQL_YYABORT;
              if (!(lex->result= new select_dump(lex->exchange)))
                MYSQL_YYABORT;
            }
          }
#line 30910 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11828 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 30918 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11839 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
#line 30928 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11845 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->insert_list= (yyvsp[0].item_list);
          }
#line 30936 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11856 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-2].num);
            lex->drop_if_exists= (yyvsp[0].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 30949 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11865 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30955 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11866 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30961 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11867 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[-3].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
#line 30981 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11882 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30987 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11884 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lex_str);
          }
#line 30998 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11891 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lex_str), FALSE) != IDENT_NAME_OK))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new sp_name((yyvsp[-2].lex_str), (yyvsp[0].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 31023 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11912 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= {0, 0};
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new sp_name(db, (yyvsp[0].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 31048 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11933 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 31064 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11945 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_USER;
          }
#line 31072 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11949 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[0].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 31084 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11957 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31090 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11959 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 31100 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11965 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 31111 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11972 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 31120 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11977 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 31129 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11982 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->server_options.server_name= (yyvsp[0].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[0].lex_str).length;
          }
#line 31140 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11997 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 31152 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 12008 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-1].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list)))
              MYSQL_YYABORT;
          }
#line 31166 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 12026 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 31178 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 12036 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 31184 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 12037 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31190 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 12041 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 31196 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 12042 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31202 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 12065 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
#line 31213 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 12073 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-2].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
#line 31222 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 12078 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31228 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 12083 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
#line 31239 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 12090 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-1].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
#line 31248 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 12095 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31254 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 12100 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_QUERY_CACHE
            /*
              If it is SP we do not allow insert optimisation whan result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
#else
            (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
#endif
          }
#line 31271 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 12112 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 31277 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 12114 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;

          push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                              ER_WARN_DEPRECATED_SYNTAX,
                              ER(ER_WARN_DEPRECATED_SYNTAX),
                              "INSERT DELAYED", "INSERT");
        }
#line 31294 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 12126 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 31300 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 12130 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 31306 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 12132 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;

          push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                              ER_WARN_DEPRECATED_SYNTAX,
                              ER(ER_WARN_DEPRECATED_SYNTAX),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 31323 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 12147 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31329 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 12148 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31335 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 12153 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 31346 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 12161 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31352 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 12162 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31358 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 12163 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31364 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 12165 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!(lex->insert_list = new List_item) ||
                lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
#line 31375 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 12175 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item)); }
#line 31381 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 12176 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item)); }
#line 31387 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 12180 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31393 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 12181 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31399 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 12183 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(0);}
#line 31405 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 12184 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31411 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 12186 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 31417 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 12187 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31423 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 12202 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->field_list.push_back((yyvsp[-2].item)) ||
                lex->insert_list->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 31434 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 12211 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31440 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 12212 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31446 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 12216 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31452 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 12217 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31458 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 12222 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              if (!(Lex->insert_list = new List_item))
                MYSQL_YYABORT;
          }
#line 31467 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 12227 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
#line 31477 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 12235 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31483 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 12241 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->insert_list->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 31492 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 12246 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->insert_list->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 31501 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 12253 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 31507 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 12255 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 31517 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 12264 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates= DUP_UPDATE; }
#line 31523 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 12272 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 31534 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 12280 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->select_lex.table_list.elements > 1)
              lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (lex->select_lex.get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       lex->select_lex.get_table_list()->alias, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            Select->set_lock_for_tables((yyvsp[-4].lock_type));
          }
#line 31557 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 12298 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31563 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 12308 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_item_to_list(YYTHD, (yyvsp[-2].item)) || add_value_to_list(YYTHD, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 31572 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 12321 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex= Lex;
          if (lex->update_list.push_back((yyvsp[-2].item)) || 
              lex->value_list.push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 31583 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 12330 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 31589 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 12331 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 31595 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 12338 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
#line 31610 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 12353 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list)))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 31625 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 12364 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31631 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 12366 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 31641 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 12372 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
#line 31650 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 12377 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 31660 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 12383 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
#line 31669 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 12396 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new Table_ident((yyvsp[-1].lex_str));
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 31686 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 12409 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new Table_ident(YYTHD, (yyvsp[-3].lex_str), (yyvsp[-1].lex_str), 0);
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 31703 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 12424 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31709 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 12425 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31715 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 12429 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31721 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 12430 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31727 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 12434 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_QUICK; }
#line 31733 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 12435 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 31739 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 12436 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 31745 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 12441 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 31760 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 12452 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 31773 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 12477 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 31781 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 12481 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 31789 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 12485 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 31797 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 12489 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 31805 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 12493 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 31813 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 12497 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 31821 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 12501 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 31829 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 12505 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 31837 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 12509 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 31845 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 12516 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= 0;
    }
#line 31853 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 12520 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 31861 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 12529 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->wild=0;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
          }
#line 31873 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 12537 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 31881 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 12544 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
#line 31892 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 12551 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
#line 31904 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 12559 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
#line 31916 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 12567 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
#line 31928 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 12575 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
#line 31940 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 12583 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 31952 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 12591 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
#line 31963 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 12598 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 31969 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 12600 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= NULL; }
#line 31975 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 12602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[-2].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
#line 31988 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 12611 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 31996 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 12615 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 32004 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 12619 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 32013 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 12624 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 32022 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 12629 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[-2].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
#line 32035 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 12638 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
#line 32046 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 12645 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 32055 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 12650 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (void) create_select_for_variable("warning_count"); }
#line 32061 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 12652 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (void) create_select_for_variable("error_count"); }
#line 32067 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 12654 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 32073 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 12656 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 32079 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 12658 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
#line 32091 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 12666 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILE", "Performance Schema");
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
#line 32106 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 12677 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              MYSQL_YYABORT;
          }
#line 32118 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12685 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 32124 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 12687 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              MYSQL_YYABORT;
          }
#line 32136 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 12695 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
#line 32147 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 12702 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
#line 32158 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 12709 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
#line 32172 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 12719 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[0].lex_user);
            lex->grant_user->password=null_lex_str;
          }
#line 32183 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12726 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[-1].num);
            Lex->name= (yyvsp[0].lex_str);
          }
#line 32193 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12732 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 32206 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 12741 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
#line 32218 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12749 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 32226 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12753 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 32234 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 12758 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Lex->sql_command = SQLCOM_SHOW_SLAVE_NOLOCK_STAT; //SQLCOM_SHOW_SLAVE_NOLOCK_STAT;
          }
#line 32242 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12762 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           Lex->sql_command= SQLCOM_SELECT;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_CLIENT_STATS))
             MYSQL_YYABORT;
          }
#line 32253 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12769 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SELECT;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_USER_STATS))
             MYSQL_YYABORT;
          }
#line 32264 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12776 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           Lex->sql_command= SQLCOM_SELECT;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_THREAD_STATS))
             MYSQL_YYABORT;
          }
#line 32275 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12783 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SELECT;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_STATS))
             MYSQL_YYABORT;
          }
#line 32286 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12790 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SELECT;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_INDEX_STATS))
             MYSQL_YYABORT;
          }
#line 32297 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12797 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 32308 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12804 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 32319 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12811 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 32329 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12817 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
#line 32340 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12824 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
#line 32351 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12831 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 32360 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12836 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 32369 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12841 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 32378 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12849 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 32384 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12851 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 32390 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12853 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 32396 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12867 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 32402 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12868 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lex_str).str; }
#line 32408 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12872 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=0; }
#line 32414 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12873 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=1; }
#line 32420 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12882 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 32426 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12883 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 32432 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12887 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 32438 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12888 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 32444 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12894 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
#line 32455 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12901 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->where= (yyvsp[0].item);
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 32465 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12911 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= 0;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[0].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
#line 32480 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12922 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 32488 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12926 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_NORMAL; }
#line 32494 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12928 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->select_lex.options|= SELECT_DESCRIBE; }
#line 32500 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12946 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
#line 32509 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12951 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            Lex->describe|= DESCRIBE_EXTENDED;
          }
#line 32519 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12957 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            Lex->describe|= DESCRIBE_PARTITIONS;
          }
#line 32529 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12963 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
              Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_PARTITIONS;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32552 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12984 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32558 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12985 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->wild= (yyvsp[0].string); }
#line 32564 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12987 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str,
                                                    (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
#line 32576 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 13001 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 32587 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 13008 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32593 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 13013 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 32607 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 13022 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32613 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 13023 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32619 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 13028 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32625 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 13030 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 32640 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 13041 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              my_parse_error(ER(ER_NO_TABLES_USED));
              MYSQL_YYABORT;
            } 
          }
#line 32652 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 13049 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 32667 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 13064 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32673 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 13069 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 32679 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 13071 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 32685 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 13073 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 32691 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 13075 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 32697 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 13077 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 32703 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 13079 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_RELAY_LOG; }
#line 32709 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 13081 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 32715 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 13083 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 32721 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 13085 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 32727 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 13087 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 32733 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 13089 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 32739 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 13091 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_CLIENT_STATS; }
#line 32745 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 13093 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_STATS; }
#line 32751 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 13095 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_THREAD_STATS; }
#line 32757 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 13097 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_TABLE_STATS; }
#line 32763 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 13099 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_INDEX_STATS; }
#line 32769 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 13101 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 32775 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 13103 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 32781 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 13105 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_FLUSH_PAGE_BITMAPS; }
#line 32787 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 13109 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32793 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 13110 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32799 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 13115 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 32808 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 13120 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32814 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 13129 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 32820 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 13130 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 32826 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 13131 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_MASTER; }
#line 32832 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 13132 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE;}
#line 32838 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 13134 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type |= REFRESH_RESET_PAGE_BITMAPS; }
#line 32844 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 13138 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 32850 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 13139 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 32856 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 13144 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 32866 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 13150 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32872 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 13156 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front(new Item_uint((yyvsp[0].ulonglong_number)));
            lex->type= PURGE_BITMAPS_TO_LSN;
          }
#line 32883 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 13167 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lex_str).str;
          }
#line 32891 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 13171 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 32902 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 13181 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lex_str).str;
            Lex->sql_command= SQLCOM_PURGE_ARCHIVE;
          }
#line 32911 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 13186 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_ARCHIVE_BEFORE;
          }
#line 32922 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 13198 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 32933 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 13207 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 32939 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 13208 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 32945 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 13209 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 32951 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 13216 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[0].lex_str).str;
          }
#line 32961 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 13227 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
#line 32977 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 13239 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype))))
              MYSQL_YYABORT;
          }
#line 32991 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 13249 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[-9].lock_type), MDL_SHARED_WRITE, NULL, (yyvsp[0].string_list)))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
          }
#line 33005 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 13259 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 33011 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 13263 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33017 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 13267 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 33023 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 13268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 33029 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 13272 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0;}
#line 33035 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 13273 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1;}
#line 33041 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 13277 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 33047 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 13279 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_QUERY_CACHE
            /*
              Ignore this option in SP to avoid problem with query cache
            */
            if (Lex->sphead != 0)
              (yyval.lock_type)= TL_WRITE_DEFAULT;
            else
#endif
              (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
          }
#line 33063 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 13290 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 33069 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 13294 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_ERROR; }
#line 33075 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 13295 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_REPLACE; }
#line 33081 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 13296 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 33087 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 13311 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 33096 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 13316 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 33107 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 13323 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 33116 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 13328 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 33125 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 13346 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 33134 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 13351 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 33143 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 13358 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 33149 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 13360 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->line_term = (yyvsp[0].string); }
#line 33155 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 13365 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 33164 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 13372 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 33170 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 13374 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 33176 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 13378 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33182 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 13379 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33188 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 13380 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33194 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 13385 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item)); }
#line 33200 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 13387 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item)); }
#line 33206 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 13391 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.item)= (yyvsp[0].item);}
#line 33212 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 13393 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[0].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33222 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 13401 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33228 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 13402 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33234 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 13412 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint length= (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string));
            String *val= new (YYTHD->mem_root) String((yyvsp[-2].simple_string),
                                                      length,
                                                      YYTHD->charset());
            if (val == NULL)
              MYSQL_YYABORT;
            if (lex->update_list.push_back((yyvsp[-4].item)) ||
                lex->value_list.push_back((yyvsp[-1].item)) ||
                lex->load_set_str_list.push_back(val))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->item_name.copy_no_truncate((yyvsp[-2].simple_string), length, YYTHD->charset());
          }
#line 33253 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 13432 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING tmp;
            THD *thd= YYTHD;
            const CHARSET_INFO *cs_con= thd->variables.collation_connection;
            const CHARSET_INFO *cs_cli= thd->variables.character_set_client;
            uint repertoire= thd->lex->text_string_is_7bit &&
                             my_charset_is_ascii_based(cs_cli) ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            if (thd->charset_is_collation_connection ||
                (repertoire == MY_REPERTOIRE_ASCII &&
                 my_charset_is_ascii_based(cs_con)))
              tmp= (yyvsp[0].lex_str);
            else
            {
              if (thd->convert_string(&tmp, cs_con, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, cs_cli))
                MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_string(tmp.str, tmp.length, cs_con,
                                                DERIVATION_COERCIBLE,
                                                repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33281 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 13456 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint repertoire= Lex->text_string_is_7bit ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            DBUG_ASSERT(my_charset_is_ascii_based(national_charset_info));
            (yyval.item)= new (YYTHD->mem_root) Item_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                  national_charset_info,
                                                  DERIVATION_COERCIBLE,
                                                  repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33297 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 13468 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *str= new (YYTHD->mem_root) Item_string((yyvsp[0].lex_str).str,
                                                                (yyvsp[0].lex_str).length, (yyvsp[-1].charset));
            if (str == NULL)
              MYSQL_YYABORT;
            str->set_repertoire_from_value();
            str->set_cs_specified(TRUE);

            (yyval.item)= str;
          }
#line 33312 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 13479 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string* item= (Item_string*) (yyvsp[-1].item);
            item->append((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (!(item->collation.repertoire & MY_REPERTOIRE_EXTENDED))
            {
              /*
                 If the string has been pure ASCII so far,
                 check the new part.
              */
              const CHARSET_INFO *cs= YYTHD->variables.collation_connection;
              item->collation.repertoire|= my_string_repertoire(cs,
                                                                (yyvsp[0].lex_str).str,
                                                                (yyvsp[0].lex_str).length);
            }
          }
#line 33332 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 13498 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 33344 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 13506 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 33360 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 13518 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 33376 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 13533 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            Item_param *item;
            if (! lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
            item= new (thd->mem_root) Item_param((uint) (lip->get_tok_start() - thd->query()));
            if (!((yyval.item)= item) || lex->param_list.push_back(item))
            {
              my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 33398 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 13553 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 33404 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13554 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 33410 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13556 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 33419 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13564 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 33425 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13565 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 33431 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13566 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 33437 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13568 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = new (YYTHD->mem_root) Item_null();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 33448 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13575 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int(NAME_STRING("FALSE"), 0, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33458 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13581 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int(NAME_STRING("TRUE"), 1, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33468 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13587 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = new (YYTHD->mem_root) Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33478 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13593 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (YYTHD->mem_root) Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33488 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13599 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(null_name_string, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[-1].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_repertoire_from_value();
            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
#line 33521 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13628 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(null_name_string, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[-1].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
#line 33553 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13659 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[0].lex_str),
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
#line 33567 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13669 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[0].lex_str),
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
#line 33581 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13679 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
#line 33591 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13685 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_decimal((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   YYTHD->charset());
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
#line 33604 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13694 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_float((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
#line 33616 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13706 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATE, true)))
              MYSQL_YYABORT;
          }
#line 33626 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13712 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_TIME, true)))
              MYSQL_YYABORT;
          }
#line 33636 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13718 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
          }
#line 33646 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13733 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 33652 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13734 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 33658 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13739 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            (yyval.item)= new (YYTHD->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[-2].lex_str).str, "*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
#line 33671 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13748 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel= Select;
            const char* schema= thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                  NullS : (yyvsp[-4].lex_str).str;
            (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                               schema,
                                               (yyvsp[-2].lex_str).str,"*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
#line 33688 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13763 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 33694 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13768 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx = lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (pctx && (spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              Lex_input_stream *lip= &thd->m_parser_state->m_lip;
              sp_head *sp= lex->sphead;

              DBUG_ASSERT(sp);

              /* We're compiling a stored procedure and found a variable */
              if (! lex->parsing_options.allows_variable)
              {
                my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
                MYSQL_YYABORT;
              }

              (yyval.item)=
                create_item_for_sp_var(
                  thd, (yyvsp[0].lex_str), spv,
                  sp->m_parser_data.get_current_stmt_start_ptr(),
                  lip->get_tok_start_prev(),
                  lip->get_tok_end());

              if ((yyval.item) == NULL)
                MYSQL_YYABORT;

              lex->safe_to_cache_query= false;
            }
            else
            {
              SELECT_LEX *sel=Select;
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, NullS, (yyvsp[0].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[0].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
#line 33749 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13818 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 33755 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13823 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel=Select;
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[0].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, NullS, (yyvsp[0].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33777 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13840 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 33783 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13845 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              FIXME This will work ok in simple_ident_nospvar case because
              we can't meet simple_ident_nospvar in trigger now. But it
              should be changed in future.
            */
            if (sp && sp->m_type == SP_TYPE_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "OLD")))
            {
              Item_trigger_field *trg_fld;
              bool new_row= ((yyvsp[-2].lex_str).str[0]=='N' || (yyvsp[-2].lex_str).str[0]=='n');

              if (sp->m_trg_chistics.event == TRG_EVENT_INSERT &&
                  !new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
                MYSQL_YYABORT;
              }

              if (sp->m_trg_chistics.event == TRG_EVENT_DELETE &&
                  new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
                MYSQL_YYABORT;
              }

              DBUG_ASSERT(!new_row ||
                          (sp->m_trg_chistics.event == TRG_EVENT_INSERT ||
                           sp->m_trg_chistics.event == TRG_EVENT_UPDATE));
              const bool read_only=
                !(new_row && sp->m_trg_chistics.action_time == TRG_ACTION_BEFORE);
              trg_fld= new (thd->mem_root)
                         Item_trigger_field(Lex->current_context(),
                                            new_row ?
                                              Item_trigger_field::NEW_ROW:
                                              Item_trigger_field::OLD_ROW,
                                            (yyvsp[0].lex_str).str,
                                            SELECT_ACL,
                                            read_only);
              if (trg_fld == NULL)
                MYSQL_YYABORT;

              /*
                Let us add this item to list of all Item_trigger_field objects
                in trigger.
              */
              lex->sphead->m_trg_table_fields.link_in_list(
                trg_fld, &trg_fld->next_trg_field);

              (yyval.item)= trg_fld;
            }
            else
            {
              SELECT_LEX *sel= lex->current_select;
              if (sel->no_table_names_allowed)
              {
                my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                         MYF(0), (yyvsp[-2].lex_str).str, thd->where);
              }
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
#line 33867 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13925 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[-2].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);

            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33896 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13950 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            const char* schema= (thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                 NullS : (yyvsp[-4].lex_str).str);
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[-2].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 schema,
                                                 (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               schema,
                                               (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33928 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13980 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 33934 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13982 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-4].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[0].lex_str);
          }
#line 33954 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13998 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[0].lex_str);
          }
#line 33968 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 14007 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 33974 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 14012 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new Table_ident((yyvsp[0].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 33984 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 14018 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[-2].lex_str),(yyvsp[0].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 33994 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 14024 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* For Delphi */
            (yyval.table)= new Table_ident((yyvsp[0].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 34005 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 14034 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new Table_ident((yyvsp[-1].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 34015 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 14040 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[-3].lex_str),(yyvsp[-1].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 34025 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 14049 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING db={(char*) any_db,3};
            (yyval.table)= new Table_ident(YYTHD, db,(yyvsp[0].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 34036 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 14058 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 34042 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 14060 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lex_str).str,
                                                   (yyvsp[0].lex_str).str+(yyvsp[0].lex_str).length,
                                                   (yyvsp[0].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lex_str).length)
              {
                ErrConvString err((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[0].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 34073 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 14090 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34087 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 14103 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 34104 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 14119 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            } 
          }
#line 34121 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 14135 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 34139 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 14151 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 34145 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 14153 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[0].symbol).length;
          }
#line 34157 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 14163 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 34163 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 14165 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[0].symbol).length;
          }
#line 34175 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 14175 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 34181 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 14176 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 34187 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 14177 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 34193 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 14182 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host.str= (char *) "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyval.lex_user)->user);

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
#line 34224 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 14209 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[-2].lex_str);
            (yyval.lex_user)->host= (yyvsp[0].lex_str);
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name(&(yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyval.lex_user)->host.str);
            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyval.lex_user)->user);
            trim_whitespace(system_charset_info, &(yyval.lex_user)->host);
          }
#line 34261 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 14242 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /* 
              empty LEX_USER means current_user and 
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 34276 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 14256 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34282 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 14257 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34288 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 14258 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34294 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 14259 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34300 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 14260 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34306 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 14261 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34312 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 14262 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34318 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 14263 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34324 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 14264 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34330 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 14265 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34336 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 14266 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34342 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 14267 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34348 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 14268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34354 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 14269 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34360 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 14270 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34366 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 14271 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34372 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 14272 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34378 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 14273 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34384 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 14274 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34390 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 14275 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34396 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 14276 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34402 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 14277 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34408 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 14278 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34414 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 14279 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34420 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 14280 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34426 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 14281 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34432 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 14282 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34438 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 14283 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34444 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 14284 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34450 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 14285 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34456 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 14286 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34462 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 14287 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34468 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 14288 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34474 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 14289 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34480 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 14290 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34486 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 14291 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34492 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 14292 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34498 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 14293 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34504 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 14294 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34510 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 14295 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34516 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 14296 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34522 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 14297 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34528 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 14298 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34534 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 14299 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34540 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 14300 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34546 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 14301 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34552 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 14302 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34558 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 14303 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34564 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 14304 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34570 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 14305 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34576 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 14315 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34582 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 14316 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34588 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 14317 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34594 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 14318 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34600 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 14319 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34606 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 14320 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34612 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 14321 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34618 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 14322 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34624 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 14323 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34630 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 14324 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34636 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 14325 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34642 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 14326 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34648 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 14327 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34654 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 14328 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34660 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 14329 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34666 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 14330 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34672 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 14331 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34678 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 14332 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34684 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 14333 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34690 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 14334 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34696 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 14335 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34702 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 14336 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34708 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 14337 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34714 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 14338 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34720 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 14339 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34726 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 14340 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34732 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 14341 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34738 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 14342 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34744 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 14343 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34750 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 14344 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34756 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 14345 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34762 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 14346 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34768 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 14347 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34774 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 14348 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34780 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 14349 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34786 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 14350 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34792 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 14351 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34798 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 14352 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34804 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 14353 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34810 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 14354 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34816 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 14355 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34822 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 14356 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34828 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 14357 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34834 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 14358 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34840 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 14359 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34846 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 14360 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34852 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 14361 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34858 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 14362 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34864 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 14367 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34870 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 14368 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34876 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 14369 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34882 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 14370 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34888 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 14371 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34894 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 14372 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34900 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 14373 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34906 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 14374 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34912 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 14375 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34918 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 14376 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34924 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 14377 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34930 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 14378 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34936 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 14379 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34942 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 14380 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34948 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 14381 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34954 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 14382 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34960 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 14383 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34966 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14384 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34972 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14385 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34978 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 14386 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34984 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 14387 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34990 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 14388 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34996 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 14389 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35002 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 14390 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35008 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 14391 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35014 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 14392 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35020 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14393 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35026 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14394 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35032 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14395 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35038 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14396 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35044 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 14397 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35050 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14398 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35056 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14399 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35062 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14400 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35068 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14401 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35074 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14402 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35080 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14403 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35086 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 14404 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35092 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14405 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35098 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14406 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35104 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14407 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35110 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14408 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35116 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 14409 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35122 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14410 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35128 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 14411 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35134 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14412 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35140 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14413 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35146 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14414 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35152 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14415 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35158 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14416 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35164 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14417 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35170 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 14418 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35176 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 14419 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35182 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 14420 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35188 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 14421 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35194 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14422 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35200 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14423 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35206 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 14424 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35212 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 14425 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35218 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 14426 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35224 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14427 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35230 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 14428 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35236 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 14429 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35242 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14430 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35248 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14431 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35254 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14432 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35260 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14433 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35266 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14434 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35272 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 14435 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35278 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 14436 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35284 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 14437 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35290 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14438 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35296 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14439 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35302 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14440 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35308 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 14441 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35314 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 14442 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35320 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14443 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35326 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 14444 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35332 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14445 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35338 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14446 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35344 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14447 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35350 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14448 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35356 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14449 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35362 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 14450 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35368 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 14451 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35374 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 14452 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35380 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 14453 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35386 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 14454 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35392 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 14455 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35398 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 14456 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35404 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 14457 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35410 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 14458 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35416 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 14459 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35422 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 14460 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35428 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 14461 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35434 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14462 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35440 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 14463 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35446 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 14464 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35452 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 14465 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35458 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14466 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35464 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 14467 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35470 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 14468 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35476 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 14469 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35482 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 14470 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35488 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 14471 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35494 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 14472 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35500 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 14473 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35506 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 14474 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35512 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 14475 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35518 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 14476 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35524 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 14477 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35530 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 14478 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35536 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14479 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35542 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 14480 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35548 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 14481 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35554 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 14482 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35560 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 14483 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35566 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 14484 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35572 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 14485 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35578 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 14486 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35584 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 14487 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35590 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 14488 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35596 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 14489 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 14490 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35608 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 14491 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35614 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 14492 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35620 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 14493 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35626 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 14494 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35632 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 14495 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35638 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 14496 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35644 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 14497 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35650 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 14498 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35656 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 14499 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35662 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 14500 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35668 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 14501 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35674 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 14502 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35680 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 14503 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35686 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 14504 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35692 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 14505 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35698 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 14506 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35704 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 14507 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35710 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 14508 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35716 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 14509 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35722 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 14510 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35728 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 14511 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35734 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 14512 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35740 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 14513 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35746 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 14514 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35752 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14515 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35758 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 14516 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35764 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 14517 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35770 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 14518 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35776 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 14519 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35782 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 14520 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35788 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 14521 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35794 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14522 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35800 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 14523 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35806 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 14524 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35812 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 14525 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35818 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14526 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35824 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 14527 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35830 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14528 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35836 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14529 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35842 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 14530 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35848 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 14531 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35854 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 14532 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35860 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 14533 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35866 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14534 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35872 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 14535 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35878 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 14536 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35884 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 14537 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35890 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14538 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35896 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 14539 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35902 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 14540 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35908 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 14541 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35914 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 14542 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35920 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14543 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35926 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14544 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35932 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 14545 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35938 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14546 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35944 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 14547 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35950 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 14548 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35956 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 14549 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35962 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14550 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35968 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14551 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35974 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14552 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35980 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 14553 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35986 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14554 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35992 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 14555 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35998 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14556 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36004 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14557 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36010 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14558 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36016 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 14559 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36022 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 14560 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36028 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 14561 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36034 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14562 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36040 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14563 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36046 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14564 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36052 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14565 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36058 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14566 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36064 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 14567 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36070 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14568 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36076 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 14569 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36082 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 14570 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36088 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 14571 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36094 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2322:
#line 14572 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36100 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 14573 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36106 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 14574 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36112 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 14575 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36118 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 14576 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36124 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 14577 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36130 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 14578 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36136 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 14579 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36142 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2330:
#line 14580 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36148 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 14581 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36154 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 14582 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36160 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 14583 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36166 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 14584 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36172 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 14585 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36178 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 14586 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36184 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 14587 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36190 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 14588 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36196 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 14589 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36202 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 14590 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36208 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2341:
#line 14591 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36214 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2342:
#line 14592 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36220 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2343:
#line 14593 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36226 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2344:
#line 14594 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36232 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2345:
#line 14595 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36238 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2346:
#line 14596 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36244 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2347:
#line 14597 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36250 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2348:
#line 14598 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36256 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2349:
#line 14599 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36262 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2350:
#line 14600 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 14601 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36274 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 14602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36280 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 14603 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36286 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 14604 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36292 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 14605 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36298 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2356:
#line 14606 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36304 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2357:
#line 14607 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36310 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2358:
#line 14608 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36316 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2359:
#line 14609 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36322 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2360:
#line 14610 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36328 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2361:
#line 14611 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36334 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2362:
#line 14612 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36340 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2363:
#line 14613 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36346 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2364:
#line 14614 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36352 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2365:
#line 14615 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36358 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2366:
#line 14616 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36364 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2367:
#line 14617 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36370 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2368:
#line 14618 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36376 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2369:
#line 14619 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36382 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 14620 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36388 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2371:
#line 14621 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36394 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2372:
#line 14622 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36400 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2373:
#line 14623 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36406 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2374:
#line 14624 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36412 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2375:
#line 14625 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36418 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2376:
#line 14626 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36424 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2377:
#line 14627 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36430 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2378:
#line 14628 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36436 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2379:
#line 14629 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36442 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2380:
#line 14630 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36448 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2381:
#line 14631 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36454 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2382:
#line 14632 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36460 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2383:
#line 14633 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36466 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2384:
#line 14645 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_SET_OPTION;
            lex->option_type= OPT_SESSION;
            lex->var_list.empty();
            lex->one_shot_set= 0;
            lex->autocommit= 0;

            sp_create_assignment_lex(YYTHD, YY_TOKEN_END);
          }
#line 36482 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2385:
#line 14657 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36488 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2386:
#line 14659 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_SET_OPTION;
	    /* Don't clear var_list in the case of recursive statement */
	    if (!lex->set_statement)
              lex->var_list.empty();
            lex->one_shot_set= 0;
            lex->autocommit= 0;
            lex->set_statement= true;
            sp_head *sp= lex->sphead;
            if (sp && !sp->is_invoked())
            {
              sp->m_parser_data.set_current_stmt_start_ptr(YY_TOKEN_START);
              sp->m_parser_data.set_option_start_ptr(YY_TOKEN_END);
            }
          }
#line 36510 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2387:
#line 14677 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36516 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2390:
#line 14692 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT;
          }
#line 36525 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2392:
#line 14698 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= OPT_DEFAULT;
          }
#line 36533 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2393:
#line 14702 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT;
          }
#line 36542 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2394:
#line 14707 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 36550 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2396:
#line 14717 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
#line 36559 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2398:
#line 14723 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
#line 36568 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2401:
#line 14737 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(YYTHD, YY_TOKEN_START);
          }
#line 36576 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2402:
#line 14741 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
#line 36585 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2403:
#line 14746 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(YYTHD, YY_TOKEN_START);
          }
#line 36593 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2404:
#line 14750 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
#line 36602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2405:
#line 14759 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 36610 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2408:
#line 14767 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 36616 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2409:
#line 14768 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 36622 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2410:
#line 14769 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 36628 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2411:
#line 14773 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 36634 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2412:
#line 14774 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 36640 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2413:
#line 14775 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 36646 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2414:
#line 14776 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 36652 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2415:
#line 14780 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 36658 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2416:
#line 14781 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 36664 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2417:
#line 14782 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 36670 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2418:
#line 14783 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 36676 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2419:
#line 14789 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            /*
              Ignore SET STATEMENT variables list on slaves because system
              variables are not replicated except certain variables set the
              values of whose are written to binlog event header and nothing
              additional is required to set them.
	    */
            if (!thd->slave_thread || !lex->set_statement)
	    {
              if ((yyvsp[-2].variable).var && (yyvsp[-2].variable).var != trg_new_row_fake_var)
              {
                /* It is a system variable. */
                if (set_system_variable(thd, &(yyvsp[-2].variable), lex->option_type, (yyvsp[0].item)))
                  MYSQL_YYABORT;
              }
              else
              {
                /*
                  Not in trigger assigning value to new row,
                  and option_type preceeding local variable is illegal.
                */
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
	  }
#line 36709 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2420:
#line 14822 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            if (sp)
              sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_START);
          }
#line 36720 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2421:
#line 14829 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            const char *expr_start_ptr= NULL;

            if (sp)
              expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if ((yyvsp[-3].variable).var == trg_new_row_fake_var)
            {
              DBUG_ASSERT(sp);
              DBUG_ASSERT(expr_start_ptr);

              /* We are parsing trigger and this is a trigger NEW-field. */

              LEX_STRING expr_query= EMPTY_STR;

              if (!(yyvsp[0].item))
              {
                // This is: SET NEW.x = DEFAULT
                // DEFAULT clause is not supported in triggers.

                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              else if (lex->is_metadata_used())
              {
                expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);

                if (!expr_query.str)
                  MYSQL_YYABORT;
              }

              if (set_trigger_new_row(thd, (yyvsp[-3].variable).base_name, (yyvsp[0].item), expr_query))
                MYSQL_YYABORT;
            }
            else if ((yyvsp[-3].variable).var)
            {
              /* We're not parsing SP and this is a system variable. */

              if (set_system_variable(thd, &(yyvsp[-3].variable), lex->option_type, (yyvsp[0].item)))
                MYSQL_YYABORT;
            }
            else
            {
              DBUG_ASSERT(sp);
              DBUG_ASSERT(expr_start_ptr);

              /* We're parsing SP and this is an SP-variable. */

              sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
              sp_variable *spv= pctx->find_variable((yyvsp[-3].variable).base_name, false);

              LEX_STRING expr_query= EMPTY_STR;

              if (!(yyvsp[0].item))
              {
                // This is: SET x = DEFAULT, where x is a SP-variable.
                // This is not supported.

                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              else if (lex->is_metadata_used())
              {
                expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);

                if (!expr_query.str)
                  MYSQL_YYABORT;
              }

              /*
                NOTE: every SET-expression has its own LEX-object, even if it is
                a multiple SET-statement, like:

                  SET spv1 = expr1, spv2 = expr2, ...

                Every SET-expression has its own sp_instr_set. Thus, the
                instruction owns the LEX-object, i.e. the instruction is
                responsible for destruction of the LEX-object.
              */

              sp_instr_set *i=
                new sp_instr_set(sp->instructions(), lex,
                                 spv->offset, (yyvsp[0].item), expr_query,
                                 true); // The instruction owns its lex.

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
          }
#line 36817 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2422:
#line 14922 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[-2].lex_str), (yyvsp[0].item), false);
            if (item == NULL)
              MYSQL_YYABORT;
            set_var_user *var= new set_var_user(item);
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
          }
#line 36832 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2423:
#line 14933 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            struct sys_var_with_base tmp= (yyvsp[-2].variable);
            /* Lookup if necessary: must be a system variable. */
            if (tmp.var == NULL)
            {
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;
            }
            if (set_system_variable(thd, &tmp, (yyvsp[-3].var_type), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36849 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2424:
#line 14946 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            int flags= (yyvsp[0].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT;
            const CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= new set_var_collation_client(flags,
                                              cs2,
                                              thd->variables.collation_database,
                                              cs2);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
#line 36869 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2425:
#line 14962 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            LEX_STRING names= { C_STRING_WITH_LEN("names") };

            if (pctx && pctx->find_variable(names, false))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              my_parse_error(ER(ER_SYNTAX_ERROR));

            MYSQL_YYABORT;
          }
#line 36886 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2426:
#line 14975 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            const CHARSET_INFO *cs2;
            const CHARSET_INFO *cs3;
            int flags= set_var_collation_client::SET_CS_NAMES
                       | ((yyvsp[-1].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT)
                       | ((yyvsp[0].charset) ? set_var_collation_client::SET_CS_COLLATE : 0);
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (!my_charset_same(cs2, cs3))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new set_var_collation_client(flags, cs3, cs3, cs3);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
#line 36912 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2427:
#line 14997 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            LEX_STRING pw= { C_STRING_WITH_LEN("password") };

            if (pctx && pctx->find_variable(pw, false))
            {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
              MYSQL_YYABORT;
            }

            LEX_USER *user= (LEX_USER*) thd->alloc(sizeof(LEX_USER));

            if (!user)
              MYSQL_YYABORT;

            user->host=null_lex_str;
            user->user.str=thd->security_ctx->user;
            user->user.length= strlen(thd->security_ctx->user);

            set_var_password *var= new set_var_password(user, (yyvsp[0].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;

            lex->var_list.push_back(var);
            lex->autocommit= TRUE;
            lex->is_set_password_sql= true;
            lex->is_change_password= TRUE;

            if (sp)
              sp->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 36951 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2428:
#line 15032 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_USER *user= (yyvsp[-2].lex_user);
            LEX *lex= Lex;
            set_var_password *var;

            var= new set_var_password(user,(yyvsp[0].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
            lex->autocommit= TRUE;
            lex->is_set_password_sql= true;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            /*
              'is_change_password' should be set if the user is setting his
              own password. This is later used to determine if the password
              expiration flag should be reset.
              Either the user exactly matches the currently authroized user or
              the CURRENT_USER keyword was used.

              If CURRENT_USER was used for the <user> rule then
              user->user.str=0. See rule below:
              
              user:
                 [..]
              | CURRENT_USER optional_braces
                {
                 [..]
                  memset($$, 0, sizeof(LEX_USER));
                }
            */
            if (user->user.str ||
                match_authorized_user(&current_thd->main_security_ctx,
                                      user))
              lex->is_change_password= TRUE;
            else
              lex->is_change_password= FALSE;
          }
#line 36994 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2429:
#line 15074 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            /* Best effort lookup for system variable. */
            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              struct sys_var_with_base tmp= {NULL, (yyvsp[0].lex_str)};

              /* Not an SP local variable */
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;

              (yyval.variable)= tmp;
            }
            else
            {
              /*
                Possibly an SP local variable (or a shadowed sysvar).
                Will depend on the context of the SET statement.
              */
              (yyval.variable).var= NULL;
              (yyval.variable).base_name= (yyvsp[0].lex_str);
            }
          }
#line 37026 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2430:
#line 15102 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            if (check_reserved_words(&(yyvsp[-2].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }

            if (sp && sp->m_type == SP_TYPE_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "OLD")))
            {
              if ((yyvsp[-2].lex_str).str[0]=='O' || (yyvsp[-2].lex_str).str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                MYSQL_YYABORT;
              }
              if (sp->m_trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                MYSQL_YYABORT;
              }
              if (sp->m_trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                MYSQL_YYABORT;
              }
              /* This special combination will denote field of NEW row */
              (yyval.variable).var= trg_new_row_fake_var;
              (yyval.variable).base_name= (yyvsp[0].lex_str);
            }
            else
            {
              sys_var *tmp=find_sys_var(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
              if (!tmp)
                MYSQL_YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[0].lex_str).str);
              (yyval.variable).var= tmp;
              (yyval.variable).base_name= (yyvsp[-2].lex_str);
            }
          }
#line 37076 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2431:
#line 15148 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sys_var *tmp=find_sys_var(YYTHD, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (!tmp)
              MYSQL_YYABORT;
            if (!tmp->is_struct())
              my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[0].lex_str).str);
            (yyval.variable).var= tmp;
            (yyval.variable).base_name.str=    (char*) "default";
            (yyval.variable).base_name.length= 7;
          }
#line 37091 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2436:
#line 15169 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[0].num));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_read_only"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
#line 37110 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2437:
#line 15187 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[0].tx_isolation));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_isolation"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
#line 37129 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2438:
#line 15204 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 37135 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2439:
#line 15205 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 37141 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2440:
#line 15209 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 37147 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2441:
#line 15210 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 37153 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2442:
#line 15211 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 37159 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2443:
#line 15212 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 37165 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2444:
#line 15216 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)=(yyvsp[0].lex_str).str;}
#line 37171 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2445:
#line 15218 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_str).length == 0)
             (yyval.simple_string)= (yyvsp[-1].lex_str).str;
            else
            switch (YYTHD->variables.old_passwords) {
              case 1: (yyval.simple_string)= Item_func_old_password::
                alloc(YYTHD, (yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length);
                break;
              case 0:
              case 2: (yyval.simple_string)= Item_func_password::
                create_password_hash_buffer(YYTHD, (yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length);
                break;
            }
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
            Lex->contains_plaintext_password= true;
          }
#line 37193 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2446:
#line 15236 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (yyvsp[-1].lex_str).length ? Item_func_old_password::
              alloc(YYTHD, (yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length) :
              (yyvsp[-1].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
            Lex->contains_plaintext_password= true;
          }
#line 37206 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2447:
#line 15248 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 37212 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2448:
#line 15249 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=0; }
#line 37218 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2449:
#line 15251 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ON",  2, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 37228 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2450:
#line 15257 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ALL", 3, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 37238 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2451:
#line 15263 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("binary", 6, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 37248 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2452:
#line 15274 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
          }
#line 37260 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2453:
#line 15285 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_BINLOG_FOR_BACKUP;
          }
#line 37268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2454:
#line 15289 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES_FOR_BACKUP;
          }
#line 37276 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2455:
#line 15293 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 37284 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2456:
#line 15297 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37290 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2461:
#line 15312 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), 0, lock_type,
                                           (lock_for_write ?
                                            MDL_SHARED_NO_READ_WRITE :
                                            MDL_SHARED_READ)))
              MYSQL_YYABORT;
          }
#line 37304 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2462:
#line 15324 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 37310 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2463:
#line 15325 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 37316 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2464:
#line 15327 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.num)= TL_WRITE_LOW_PRIORITY; 
            WARN_DEPRECATED(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 37325 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2465:
#line 15331 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 37331 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2466:
#line 15336 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
          }
#line 37343 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2467:
#line 15347 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_BINLOG;
          }
#line 37351 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2468:
#line 15351 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 37359 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2469:
#line 15362 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 37379 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2470:
#line 15378 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 37399 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2471:
#line 15394 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 37421 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2472:
#line 15412 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read((yyvsp[-2].ha_read_mode),
                                  lex->ident.str, lex->insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 37443 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2473:
#line 15432 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[0].ha_read_mode); }
#line 37449 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2474:
#line 15433 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= (yyvsp[-1].lex_str); (yyval.ha_read_mode)=(yyvsp[0].ha_read_mode); }
#line 37455 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2475:
#line 15437 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RFIRST; }
#line 37461 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2476:
#line 15438 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RNEXT;  }
#line 37467 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2477:
#line 15442 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RFIRST; }
#line 37473 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2478:
#line 15443 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RNEXT;  }
#line 37479 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2479:
#line 15444 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RPREV;  }
#line 37485 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2480:
#line 15445 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= RLAST;  }
#line 37491 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2481:
#line 15447 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[0].ha_rkey_mode);
            Lex->insert_list= new List_item;
            if (! Lex->insert_list)
              MYSQL_YYABORT;
          }
#line 37502 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2482:
#line 15454 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ha_read_mode)= RKEY;
          }
#line 37510 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2483:
#line 15460 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 37516 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2484:
#line 15461 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 37522 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2485:
#line 15462 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 37528 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2486:
#line 15463 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 37534 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2487:
#line 15464 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 37540 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2488:
#line 15470 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_REVOKE; }
#line 37546 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2489:
#line 15471 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37552 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2490:
#line 15476 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
#line 37561 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2491:
#line 15481 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
#line 37575 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2492:
#line 15491 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
#line 37589 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2493:
#line 15501 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 37597 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2494:
#line 15505 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 37607 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2495:
#line 15513 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_GRANT; }
#line 37613 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2496:
#line 15514 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37619 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2497:
#line 15520 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
#line 37628 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2498:
#line 15526 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
#line 37642 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2499:
#line 15537 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
#line 37656 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2500:
#line 15547 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 37666 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2503:
#line 15561 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->grant == GLOBAL_ACLS &&
                lex->sql_command == SQLCOM_REVOKE)
              lex->sql_command= SQLCOM_REVOKE_ALL;
          }
#line 37677 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2504:
#line 15568 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 37686 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2509:
#line 15586 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = SELECT_ACL;}
#line 37692 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2510:
#line 15587 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37698 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2511:
#line 15589 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = INSERT_ACL;}
#line 37704 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2512:
#line 15590 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37710 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2513:
#line 15592 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = UPDATE_ACL; }
#line 37716 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2514:
#line 15593 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37722 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2515:
#line 15595 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = REFERENCES_ACL;}
#line 37728 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2516:
#line 15596 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37734 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2517:
#line 15597 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_ACL;}
#line 37740 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2518:
#line 15598 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37746 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2519:
#line 15599 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= INDEX_ACL;}
#line 37752 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2520:
#line 15600 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_ACL;}
#line 37758 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2521:
#line 15601 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_ACL;}
#line 37764 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2522:
#line 15602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DROP_ACL;}
#line 37770 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 15603 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EXECUTE_ACL;}
#line 37776 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 15604 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= RELOAD_ACL;}
#line 37782 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2525:
#line 15605 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHUTDOWN_ACL;}
#line 37788 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2526:
#line 15606 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= PROCESS_ACL;}
#line 37794 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 15607 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= FILE_ACL;}
#line 37800 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 15608 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 37806 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 15609 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_DB_ACL;}
#line 37812 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2530:
#line 15610 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SUPER_ACL;}
#line 37818 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 15611 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TMP_ACL;}
#line 37824 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 15612 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= LOCK_TABLES_ACL; }
#line 37830 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2533:
#line 15613 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_SLAVE_ACL; }
#line 37836 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2534:
#line 15614 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_CLIENT_ACL; }
#line 37842 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2535:
#line 15615 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_VIEW_ACL; }
#line 37848 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2536:
#line 15616 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_VIEW_ACL; }
#line 37854 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2537:
#line 15617 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_PROC_ACL; }
#line 37860 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2538:
#line 15618 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_PROC_ACL; }
#line 37866 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 15619 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_USER_ACL; }
#line 37872 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 15620 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EVENT_ACL;}
#line 37878 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 15621 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= TRIGGER_ACL; }
#line 37884 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 15622 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 37890 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2543:
#line 15626 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37896 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2544:
#line 15627 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37902 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2547:
#line 15637 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lex_str).str;
          }
#line 37916 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2548:
#line 15647 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lex_str).str;
          }
#line 37930 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2549:
#line 15657 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lex_str).str;
          }
#line 37944 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2550:
#line 15670 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 37963 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2551:
#line 15685 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db = (yyvsp[-2].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 37980 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2552:
#line 15698 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 37997 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2553:
#line 15711 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 38010 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2554:
#line 15723 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 38019 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2555:
#line 15728 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 38028 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2556:
#line 15736 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 38037 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2557:
#line 15741 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 38046 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2558:
#line 15749 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user); (yyvsp[-3].lex_user)->password=(yyvsp[0].lex_str);
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            String *password = new (YYTHD->mem_root) String((const char*)(yyvsp[0].lex_str).str,
                                    YYTHD->variables.character_set_client);
            check_password_policy(password);
            /*
              1. Plugin must be resolved
              2. Password must be digested
            */
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
#line 38068 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2559:
#line 15767 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->password= (yyvsp[0].lex_str); 
            if (!strcmp((yyvsp[0].lex_str).str, ""))
            {
              String *password= new (YYTHD->mem_root) String ((const char *)"",
                                     YYTHD->variables.character_set_client);
              check_password_policy(password);
            }
            /*
              1. Plugin must be resolved
            */
            (yyvsp[-4].lex_user)->uses_identified_by_password_clause= true;
          }
#line 38092 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2560:
#line 15787 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin= (yyvsp[0].lex_str);
            (yyvsp[-3].lex_user)->auth= empty_lex_str;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
          }
#line 38108 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2561:
#line 15799 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin= (yyvsp[-2].lex_str);
            (yyvsp[-5].lex_user)->auth= (yyvsp[0].lex_str);
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
          }
#line 38125 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2562:
#line 15812 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->password= null_lex_str;
          }
#line 38134 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2563:
#line 15820 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 38143 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2567:
#line 15834 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
#line 38172 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2569:
#line 15863 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 38180 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2570:
#line 15867 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 38188 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2571:
#line 15871 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 38196 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2572:
#line 15875 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 38204 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2573:
#line 15881 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38210 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2575:
#line 15886 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38216 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2576:
#line 15887 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 38222 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2577:
#line 15891 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38228 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2578:
#line 15892 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38234 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2579:
#line 15896 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 38240 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2580:
#line 15898 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 38250 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2581:
#line 15904 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 38260 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2582:
#line 15910 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 38270 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2583:
#line 15916 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 38280 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2584:
#line 15925 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 38290 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2585:
#line 15930 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38296 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2586:
#line 15934 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38302 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2587:
#line 15935 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38308 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2588:
#line 15940 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 38314 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2589:
#line 15941 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 38320 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2590:
#line 15942 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 38326 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2591:
#line 15947 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 38332 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2592:
#line 15948 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 38338 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2593:
#line 15949 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 38344 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2594:
#line 15953 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38350 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2595:
#line 15954 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38356 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2596:
#line 15959 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 38369 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2597:
#line 15971 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 38382 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2598:
#line 15981 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 38392 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2599:
#line 15990 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 38402 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2600:
#line 15999 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 38412 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2601:
#line 16012 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38418 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2603:
#line 16018 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[0].num), TRUE))
              MYSQL_YYABORT;
          }
#line 38427 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2604:
#line 16023 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
#line 38439 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2605:
#line 16033 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 38445 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2606:
#line 16034 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 38451 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2607:
#line 16035 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 38457 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2608:
#line 16039 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 38463 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2609:
#line 16040 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 38469 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2610:
#line 16044 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              unit->global_parameters= fake;
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
#line 38489 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2611:
#line 16060 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
#line 38499 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2614:
#line 16073 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 38505 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2615:
#line 16074 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 38511 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2616:
#line 16075 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 38517 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2617:
#line 16080 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 38525 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2618:
#line 16084 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 38533 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2620:
#line 16093 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[0].num), FALSE))
              MYSQL_YYABORT;
          }
#line 38542 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2621:
#line 16099 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_context();
            (yyval.select_lex)= (yyvsp[-5].select_lex);
          }
#line 38551 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2622:
#line 16108 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.select_lex)= (yyvsp[-1].select_lex);
          }
#line 38559 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2623:
#line 16114 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->expr_allows_subselect ||
               lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (mysql_new_select(Lex, 1))
              MYSQL_YYABORT;
          }
#line 38582 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2624:
#line 16135 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->outer_select();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;
            /*
              A subselect can add fields to an outer select. Reserve space for
              them.
            */
            lex->current_select->select_n_where_fields+=
            child->select_n_where_fields;
          }
#line 38602 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2629:
#line 16163 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 38608 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2630:
#line 16165 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 38620 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2631:
#line 16172 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 38626 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2632:
#line 16173 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_SMALL_RESULT; }
#line 38632 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2633:
#line 16174 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_BIG_RESULT; }
#line 38638 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2634:
#line 16176 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
#line 38648 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2635:
#line 16182 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
#line 38658 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2636:
#line 16187 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_ALL; }
#line 38664 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2637:
#line 16198 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38670 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2638:
#line 16200 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38676 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2639:
#line 16202 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38682 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 16235 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 38697 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 16249 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 38705 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 16262 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38711 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 16264 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38717 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 16266 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38723 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 16271 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
#line 38729 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 16276 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 38735 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 16278 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 38741 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2661:
#line 16280 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
#line 38747 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2662:
#line 16285 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 38753 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2663:
#line 16287 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 38759 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2664:
#line 16289 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 38765 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2665:
#line 16294 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_IGNORE,
                                                   MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
#line 38782 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 16311 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38788 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 16317 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING)));
            }
#line 38797 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2670:
#line 16322 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING)));
            }
#line 38806 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2671:
#line 16329 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
            lex->parsing_options.allows_derived= FALSE;
            lex->create_view_select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 38819 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2672:
#line 16338 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            uint len= YYLIP->get_cpp_ptr() - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
            lex->parsing_options.allows_derived= TRUE;
          }
#line 38837 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2673:
#line 16355 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              For statment as "CREATE VIEW v1 AS SELECT1 UNION SELECT2",
              parsing of Select query (SELECT1) is completed and UNION_CLAUSE
              is not yet parsed. So check for
              Lex->current_select->master_unit()->first_select()->braces
              (as its done in "select_init2" for "select_part2" rule) is not
              done here.
            */
          }
#line 38857 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 16376 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
#line 38866 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2678:
#line 16385 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->table_list.save_and_clear(&Lex->save_list);
          }
#line 38874 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2679:
#line 16389 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
#line 38882 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2680:
#line 16396 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_check= VIEW_CHECK_NONE; }
#line 38888 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2681:
#line 16398 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
#line 38894 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2682:
#line 16400 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
#line 38900 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2683:
#line 16402 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
#line 38906 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 16419 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $8 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 38914 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 16425 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $12 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 38922 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 16430 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $15 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_TRIGGER, (yyvsp[-11].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum trg_action_time_type) (yyvsp[-10].num);
            sp->m_trg_chistics.event= (enum trg_event_type) (yyvsp[-9].num);
            lex->stmt_definition_begin= (yyvsp[-12].simple_string);
            lex->ident.str= (yyvsp[-7].simple_string);
            lex->ident.length= (yyvsp[-3].simple_string) - (yyvsp[-7].simple_string);

            lex->sphead= sp;
            lex->spname= (yyvsp[-11].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 38956 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 16460 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $17 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[-7].table),
                                                   (LEX_STRING*) 0,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
#line 38985 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2688:
#line 16495 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[-4].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yyvsp[-6].simple_string);
            lex->udf.name = (yyvsp[-4].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lex_str).str;
          }
#line 39006 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2689:
#line 16513 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[-4].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yyvsp[-6].simple_string);
            lex->udf.name = (yyvsp[-4].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lex_str).str;
          }
#line 39027 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2690:
#line 16536 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yyvsp[-3].simple_string);
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            /*
              NOTE: the start of the parameters in the query string is
              YYLIP->get_cpp_tok_start() + 1. 1 is the length of '(', which the
              tokenizer has just passed (just YYLIP->get_cpp_tok_start() points
              to the '(').
            */

            sp->m_parser_data.set_parameter_start_ptr(
              YYLIP->get_cpp_tok_start() + 1);
          }
#line 39062 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2691:
#line 16568 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $8 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr(
              YYLIP->get_cpp_tok_start());
          }
#line 39071 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 16573 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $10 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
          }
#line 39083 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 16581 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[0].num) == MYSQL_TYPE_STRING || (yyvsp[0].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (fill_field_definition(YYTHD, sp,
                                      (enum enum_field_types) (yyvsp[0].num),
                                      &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 39110 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 16604 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 39122 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 16612 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::WARN_LEVEL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 39181 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 16670 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yyvsp[-1].simple_string);

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 39205 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 16690 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              NOTE: the start of the parameters in the query string is
              YYLIP->get_cpp_tok_start() + 1. 1 is the length of '(', which the
              tokenizer has just passed (just YYLIP->get_cpp_tok_start() points
              to the '(').
            */

            Lex->sphead->m_parser_data.set_parameter_start_ptr(
              YYLIP->get_cpp_tok_start() + 1);
          }
#line 39221 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2698:
#line 16703 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            Lex->sphead->m_parser_data.set_parameter_end_ptr(
              YYLIP->get_cpp_tok_start());

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 39235 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2699:
#line 16713 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 39247 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 16721 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 39260 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2701:
#line 16735 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 39268 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2702:
#line 16739 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 39276 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2703:
#line 16743 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 39284 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2704:
#line 16747 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 39292 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2705:
#line 16751 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 39300 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2706:
#line 16755 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
          }
#line 39308 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2707:
#line 16762 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 39319 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2708:
#line 16769 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 39330 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2709:
#line 16776 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 39341 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2710:
#line 16785 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39347 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2711:
#line 16786 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39353 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2712:
#line 16790 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 39359 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2713:
#line 16791 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_JOIN;        }
#line 39365 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 16792 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_RESUME;      }
#line 39371 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 16796 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 39377 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 16797 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_ONE_PHASE;   }
#line 39383 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2717:
#line 16802 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 39389 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2718:
#line 16804 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_SUSPEND;     }
#line 39395 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 16809 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39401 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 16810 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 39407 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 16815 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[-2].lex_str);
            lex->ident= (yyvsp[0].lex_str);
          }
#line 39418 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 16825 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[0].lex_str);
          }
#line 39428 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 39432 "/mnt/workspace/percona-xtradb-cluster-5.6-debian-source-for-inclusion/bzr_tree/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (yythd, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (yythd, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, yythd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yythd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (yythd, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, yythd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yythd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
